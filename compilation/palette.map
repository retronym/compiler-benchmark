->rgb(229,92,92)
$colon$colon.<init>(Object, List):447->rgb(241,110,110)
$colon$colon.head():447->rgb(227,89,89)
$colon$colon.tail():447->rgb(211,66,66)
$colon$colon.tail():448->rgb(233,98,98)
$colon$colon.tl():447->rgb(203,54,54)
$colon$colon.tl_$eq(List):447->rgb(203,54,54)
$colon$plus$.unapply(SeqLike):19->rgb(204,55,55)
1026285838.get$Lambda(Symbols$Symbol):-1->rgb(248,120,120)
1049655252.get$Lambda(Unapplies):-1->rgb(216,73,73)
1060325494.get$Lambda(TraversableLike$WithFilter, Function1):-1->rgb(226,88,88)
1225510611.get$Lambda(Trees$CaseDef):-1->rgb(207,60,60)
1243202858.<init>(Implicits$SearchResult):-1->rgb(223,83,83)
1243202858.get$Lambda(Implicits$SearchResult):-1->rgb(218,76,76)
1269507406.get$Lambda(Types, int):-1->rgb(247,118,118)
1276326286.get$Lambda(Infer$Inferencer, List, boolean):-1->rgb(242,111,111)
1366053326.get$Lambda(Namers$Namer, Symbols$Symbol, List, List, List, Types$Type):-1->rgb(240,108,108)
1430668533.get$Lambda(BooleanRef, ObjectRef, ObjectRef):-1->rgb(209,63,63)
1435170539.get$Lambda(Infer$Inferencer$InferMethodAlternativeTwice$1):-1->rgb(226,89,89)
1459317785.get$Lambda(Symbols$Symbol):-1->rgb(210,65,65)
1558013510.<init>(Function1, boolean, Builder):-1->rgb(251,125,125)
1558013510.get$Lambda(Function1, boolean, Builder):-1->rgb(250,123,123)
1629682428.<init>(Function1, Builder):-1->rgb(223,83,83)
1629682428.get$Lambda(Function1, Builder):-1->rgb(209,63,63)
1634550128.get$Lambda(Function1, Symbols$Symbol):-1->rgb(222,82,82)
1820922618.get$Lambda(Function2, ObjectRef):-1->rgb(228,90,90)
1865053846.<init>(Erasure):-1->rgb(228,91,91)
1865053846.get$Lambda(Erasure):-1->rgb(237,103,103)
1922738596.get$Lambda(SpecializeTypes):-1->rgb(206,59,59)
1973623828.<init>(ScalaLogic$TreesAndTypesDomain$TypeConst$, Types$Type):-1->rgb(204,56,56)
1973623828.get$Lambda(ScalaLogic$TreesAndTypesDomain$TypeConst$, Types$Type):-1->rgb(247,119,119)
1993333667.get$Lambda(Function1, Builder):-1->rgb(216,73,73)
2061089205.get$Lambda(Symbols$Symbol):-1->rgb(218,76,76)
2088264698.get$Lambda(Parsers$Parser, Trees$Modifiers, ObjectRef, Trees$Tree, Trees$Tree):-1->rgb(212,68,68)
311635349.get$Lambda(Typers$Typer):-1->rgb(229,92,92)
324505150.get$Lambda(Infer$Inferencer, Types$Type, Trees$Tree):-1->rgb(207,60,60)
337578559.get$Lambda(UnPickler$Scan):-1->rgb(240,108,108)
422719805.get$Lambda(Symbols$ClassSymbol):-1->rgb(251,125,125)
505151561.<init>(Typers$Typer, Trees$ExistentialTypeTree, Trees$Tree):-1->rgb(238,105,105)
505151561.get$Lambda(Typers$Typer, Trees$ExistentialTypeTree, Trees$Tree):-1->rgb(235,102,102)
726885934.get$Lambda(Attachments, ClassTag):-1->rgb(254,129,129)
741280558.get$Lambda(RefChecks$RefCheckTransformer, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol, boolean, LazyRef):-1->rgb(245,116,116)
745636599.get$Lambda(Growable):-1->rgb(210,65,65)
779348547.get$Lambda(BCodeHelpers$BCAnnotGen):-1->rgb(206,60,60)
855072275.get$Lambda(Parsers$Parser):-1->rgb(242,111,111)
916200926.<init>(Builder, Builder, Iterator, Function2, Object):-1->rgb(204,56,56)
916200926.get$Lambda(Builder, Builder, Iterator, Function2, Object):-1->rgb(239,107,107)
958284528.get$Lambda(Contexts$Context, ObjectRef):-1->rgb(229,93,93)
988689484.get$Lambda(Solving$CNF$TransformToCnf):-1->rgb(246,116,116)
AbsSettings$AbsSetting.hashCode$(AbsSettings$AbsSetting):136->rgb(210,65,65)
AbsSettings$AbsSetting.hashCode():136->rgb(222,82,82)
AbsSettings.visibleSettings$(AbsSettings):21->rgb(245,116,116)
AbsSettings.visibleSettings():21->rgb(252,126,126)
AbstractBuffer.<init>():49->rgb(229,92,92)
AbstractCollection.<init>():66->rgb(240,109,109)
AbstractFile.toByteArray():165->rgb(228,92,92)
AbstractFile.toByteArray():166->rgb(219,78,78)
AbstractFile.toByteArray():169->rgb(226,89,89)
AbstractFile.toByteArray():171->rgb(239,106,106)
AbstractFileReader.<init>(AbstractFile):26->rgb(217,74,74)
AbstractFileReader.bp():30->rgb(218,77,77)
AbstractFileReader.bp_$eq(int):30->rgb(239,107,107)
AbstractFileReader.buf():26->rgb(220,80,80)
AbstractFileReader.getChar(int):63->rgb(207,61,61)
AbstractFileReader.nextByte():36->rgb(212,67,67)
AbstractFileReader.nextByte():37->rgb(204,55,55)
AbstractFileReader.nextChar():51->rgb(202,53,53)
AbstractFileReader.skip(int):86->rgb(242,111,111)
AbstractInsnNode.getOpcode():188->rgb(254,129,129)
AbstractInterruptibleChannel.close():116->rgb(217,76,76)
AbstractIterable.<init>():41->rgb(209,64,64)
AbstractIterable.<init>():54->rgb(213,69,69)
AbstractIterable.copyToArray(Object, int, int):54->rgb(227,89,89)
AbstractIterable.exists(Function1):54->rgb(238,105,105)
AbstractIterable.find(Function1):54->rgb(218,77,77)
AbstractIterable.forall(Function1):54->rgb(244,114,114)
AbstractIterable.foreach(Function1):54->rgb(251,124,124)
AbstractIterator.exists(Function1):1417->rgb(231,96,96)
AbstractIterator.find(Function1):1417->rgb(245,115,115)
AbstractIterator.forall(Function1):1417->rgb(237,105,105)
AbstractIterator.foreach(Function1):1417->rgb(250,123,123)
AbstractIterator.to(CanBuildFrom):1417->rgb(220,79,79)
AbstractIterator.toList():1417->rgb(243,112,112)
AbstractIterator.toMap(Predef$$less$colon$less):1417->rgb(206,59,59)
AbstractList.<init>():76->rgb(211,67,67)
AbstractMap.$plus$plus(GenTraversableOnce):216->rgb(215,72,72)
AbstractMap.<init>():216->rgb(238,105,105)
AbstractMap.<init>():59->rgb(236,103,103)
AbstractMap.apply(Object):59->rgb(251,124,124)
AbstractMap.clear():80->rgb(217,74,74)
AbstractMap.equals(Object):59->rgb(215,72,72)
AbstractMap.getOrElse(Object, Function0):59->rgb(250,122,122)
AbstractMap.getOrElseUpdate(Object, Function0):80->rgb(239,107,107)
AbstractMap.hashCode():59->rgb(219,77,77)
AbstractMap.isDefinedAt(Object):59->rgb(222,82,82)
AbstractMap.update(Object, Object):80->rgb(231,96,96)
AbstractPartialFunction.lift():26->rgb(244,114,114)
AbstractPath.resolve(String):53->rgb(240,108,108)
AbstractSeq.$colon$plus(Object, CanBuildFrom):41->rgb(231,95,95)
AbstractSeq.$plus$colon(Object, CanBuildFrom):41->rgb(214,70,70)
AbstractSeq.<init>():41->rgb(206,58,58)
AbstractSeq.<init>():48->rgb(209,63,63)
AbstractSeq.combinations(int):41->rgb(234,100,100)
AbstractSeq.contains(Object):41->rgb(226,87,87)
AbstractSeq.distinct():41->rgb(244,115,115)
AbstractSeq.equals(Object):41->rgb(253,127,127)
AbstractSeq.indexWhere(Function1):41->rgb(238,106,106)
AbstractSeq.size():41->rgb(242,111,111)
AbstractSeq.sortBy(Function1, Ordering):41->rgb(224,85,85)
AbstractSeq.sortWith(Function2):41->rgb(228,91,91)
AbstractSeq.sorted(Ordering):41->rgb(217,75,75)
AbstractSet.$minus$minus(GenTraversableOnce):47->rgb(229,92,92)
AbstractSet.$plus$plus$eq(TraversableOnce):46->rgb(226,88,88)
AbstractSet.<init>():46->rgb(225,86,86)
AbstractSet.<init>():47->rgb(216,73,73)
AbstractSet.apply(Object):46->rgb(216,74,74)
AbstractSet.apply(Object):47->rgb(212,68,68)
AbstractSet.diff(GenSet):47->rgb(241,110,110)
AbstractSet.empty():46->rgb(200,50,50)
AbstractSet.hashCode():47->rgb(220,80,80)
AbstractSet.intersect(GenSet):46->rgb(206,59,59)
AbstractSet.isEmpty():46->rgb(251,125,125)
AbstractSet.isEmpty():47->rgb(242,111,111)
AbstractSet.map(Function1, CanBuildFrom):47->rgb(204,56,56)
AbstractSet.newBuilder():46->rgb(201,52,52)
AbstractSet.newBuilder():47->rgb(246,117,117)
AbstractSet.scala$collection$SetLike$$super$map(Function1, CanBuildFrom):47->rgb(239,107,107)
AbstractSet.thisCollection():47->rgb(242,111,111)
AbstractSet.toSeq():47->rgb(245,116,116)
AbstractSet.update(Object, boolean):46->rgb(252,125,125)
AbstractStringBuilder.<init>(int):68->rgb(204,57,57)
AbstractStringBuilder.append(CharSequence):484->rgb(252,126,126)
AbstractStringBuilder.append(CharSequence):488->rgb(234,100,100)
AbstractStringBuilder.append(CharSequence, int, int):541->rgb(249,122,122)
AbstractStringBuilder.append(CharSequence, int, int):543->rgb(209,63,63)
AbstractStringBuilder.append(String):447->rgb(246,117,117)
AbstractStringBuilder.append(String):448->rgb(222,83,83)
AbstractStringBuilder.append(char):650->rgb(234,99,99)
AbstractStringBuilder.append(char[], int, int):596->rgb(214,71,71)
AbstractStringBuilder.append(long):698->rgb(251,124,124)
AbstractStringBuilder.append(long):701->rgb(240,108,108)
AbstractStringBuilder.ensureCapacityInternal(int):123->rgb(233,98,98)
AbstractStringBuilder.ensureCapacityInternal(int):124->rgb(204,56,56)
AbstractStringBuilder.ensureCapacityInternal(int):125->rgb(202,54,54)
AbstractStringBuilder.ensureCapacityInternal(int):127->rgb(229,92,92)
AbstractStringBuilder.newCapacity(int):154->rgb(232,97,97)
AbstractTraversable.$div$colon(Object, Function2):104->rgb(243,113,113)
AbstractTraversable.<init>():104->rgb(245,116,116)
AbstractTraversable.collectFirst(PartialFunction):104->rgb(202,53,53)
AbstractTraversable.copyToArray(Object, int):104->rgb(210,65,65)
AbstractTraversable.filter(Function1):104->rgb(227,90,90)
AbstractTraversable.filterImpl(Function1, boolean):104->rgb(223,84,84)
AbstractTraversable.filterNot(Function1):104->rgb(210,64,64)
AbstractTraversable.flatMap(Function1, CanBuildFrom):104->rgb(240,109,109)
AbstractTraversable.flatten(Function1):104->rgb(210,64,64)
AbstractTraversable.foldLeft(Object, Function2):104->rgb(241,109,109)
AbstractTraversable.genericBuilder():104->rgb(237,104,104)
AbstractTraversable.init():104->rgb(200,51,51)
AbstractTraversable.map(Function1, CanBuildFrom):104->rgb(251,124,124)
AbstractTraversable.mkString(String, String, String):104->rgb(229,92,92)
AbstractTraversable.newBuilder():104->rgb(226,89,89)
AbstractTraversable.nonEmpty():104->rgb(244,114,114)
AbstractTraversable.partition(Function1):104->rgb(206,59,59)
AbstractTraversable.size():104->rgb(231,95,95)
AbstractTraversable.to(CanBuildFrom):104->rgb(221,81,81)
AbstractTraversable.toIndexedSeq():104->rgb(224,85,85)
AbstractTraversable.toList():104->rgb(240,108,108)
AbstractTraversable.toMap(Predef$$less$colon$less):104->rgb(241,111,111)
AbstractTraversable.toSet():104->rgb(228,92,92)
AbstractTraversable.transpose(Function1):104->rgb(250,122,122)
AbstractTraversable.unzip(Function1):104->rgb(230,94,94)
AbstractTraversable.withFilter(Function1):104->rgb(228,92,92)
AccessorSynthesis$AccessorTreeSynthesis$UncheckedAccessorSynth.addDef(Trees$ValOrDefDef):40->rgb(242,112,112)
AccessorSynthesis$AccessorTreeSynthesis$UncheckedAccessorSynth.addDefDef(Symbols$Symbol, Trees$Tree):52->rgb(240,108,108)
AccessorSynthesis$CheckedAccessorSymbolSynth.newSlowPathSymbol(Symbols$Symbol):201->rgb(219,78,78)
AccessorSynthesis$CheckedAccessorTreeSynthesis$SynthLazyAccessorsIn.$anonfun$expandLazyClassMember$1(AccessorSynthesis$CheckedAccessorTreeSynthesis$SynthLazyAccessorsIn, Symbols$Symbol, Symbols$Symbol, Trees$Block, Trees$If):298->rgb(253,127,127)
AccessorSynthesis$CheckedAccessorTreeSynthesis$SynthLazyAccessorsIn.$anonfun$expandLazyClassMember$2(AccessorSynthesis$CheckedAccessorTreeSynthesis$SynthLazyAccessorsIn, Position, Trees$Tree):298->rgb(205,57,57)
AccessorSynthesis$CheckedAccessorTreeSynthesis$SynthLazyAccessorsIn.expandLazyClassMember(Symbols$Symbol, Symbols$Symbol, Trees$Tree):281->rgb(205,57,57)
AccessorSynthesis$CheckedAccessorTreeSynthesis$SynthLazyAccessorsIn.expandLazyClassMember(Symbols$Symbol, Symbols$Symbol, Trees$Tree):285->rgb(216,74,74)
AccessorSynthesis$CheckedAccessorTreeSynthesis$SynthLazyAccessorsIn.expandLazyClassMember(Symbols$Symbol, Symbols$Symbol, Trees$Tree):298->rgb(252,126,126)
AggregateClassPath.$anonfun$list$1(String, ClassPath):76->rgb(207,61,61)
AggregateClassPath.$anonfun$mergeClassesAndSources$1$adapted(IntRef, HashMap, ArrayBuffer, Seq):101->rgb(200,50,50)
AggregateClassPath.$anonfun$mergeClassesAndSources$1(IntRef, HashMap, ArrayBuffer, Seq):102->rgb(243,113,113)
AggregateClassPath.$anonfun$mergeClassesAndSources$2$adapted(IntRef, HashMap, ArrayBuffer, ClassRepresentation):102->rgb(233,98,98)
AggregateClassPath.$anonfun$mergeClassesAndSources$2(IntRef, HashMap, ArrayBuffer, ClassRepresentation):104->rgb(208,63,63)
AggregateClassPath.$anonfun$mergeClassesAndSources$2(IntRef, HashMap, ArrayBuffer, ClassRepresentation):105->rgb(226,88,88)
AggregateClassPath.$anonfun$mergeClassesAndSources$2(IntRef, HashMap, ArrayBuffer, ClassRepresentation):115->rgb(207,61,61)
AggregateClassPath.list(String):74->rgb(221,80,80)
AggregateClassPath.list(String):85->rgb(214,71,71)
AggregateClassPath.mergeClassesAndSources(Seq):101->rgb(211,67,67)
AlmostFinalValue$AlmostFinalCallSite.fallback():79->rgb(253,128,128)
Analyzer$namerFactory$$anon$1.apply(CompilationUnits$CompilationUnit):43->rgb(232,97,97)
Analyzer$typerFactory$$anon$3.$anonfun$apply$1$adapted(Function0):104->rgb(240,108,108)
Analyzer$typerFactory$$anon$3.$anonfun$run$1$adapted(Analyzer$typerFactory$$anon$3, CompilationUnits$CompilationUnit):93->rgb(251,125,125)
Analyzer$typerFactory$$anon$3.$anonfun$run$1(Analyzer$typerFactory$$anon$3, CompilationUnits$CompilationUnit):94->rgb(246,117,117)
Analyzer$typerFactory$$anon$3.apply(CompilationUnits$CompilationUnit):101->rgb(220,79,79)
Analyzer$typerFactory$$anon$3.apply(CompilationUnits$CompilationUnit):102->rgb(216,73,73)
Analyzer$typerFactory$$anon$3.apply(CompilationUnits$CompilationUnit):104->rgb(229,92,92)
Analyzer$typerFactory$$anon$3.run():93->rgb(252,126,126)
Analyzer.analyze(String, MethodNode):118->rgb(242,112,112)
Analyzer.analyze(String, MethodNode):122->rgb(240,109,109)
Analyzer.analyze(String, MethodNode):129->rgb(208,61,61)
Analyzer.analyze(String, MethodNode):137->rgb(215,73,73)
Analyzer.analyze(String, MethodNode):140->rgb(239,107,107)
Analyzer.analyze(String, MethodNode):161->rgb(253,127,127)
Analyzer.analyze(String, MethodNode):162->rgb(201,51,51)
Analyzer.analyze(String, MethodNode):182->rgb(209,63,63)
Analyzer.analyze(String, MethodNode):205->rgb(212,68,68)
Analyzer.analyze(String, MethodNode):274->rgb(226,87,87)
Analyzer.findSubroutine(int, Subroutine, List):320->rgb(231,95,95)
Analyzer.findSubroutine(int, Subroutine, List):321->rgb(224,84,84)
Analyzer.findSubroutine(int, Subroutine, List):330->rgb(221,81,81)
Analyzer.merge(int, Frame, Subroutine):504->rgb(201,52,52)
Analyzer.merge(int, Frame, Subroutine):509->rgb(231,95,95)
Analyzer.merge(int, Frame, Subroutine):525->rgb(224,86,86)
Analyzer.newFrame(Frame):439->rgb(214,70,70)
AnalyzerPlugins$$anon$10.default():397->rgb(248,120,120)
AnalyzerPlugins$$anon$10.default():400->rgb(207,60,60)
AnalyzerPlugins$$anon$14.default():438->rgb(207,61,61)
AnalyzerPlugins$$anon$14.default():441->rgb(208,62,62)
AnalyzerPlugins$$anon$9.default():389->rgb(228,91,91)
AnalyzerPlugins$$anon$9.default():392->rgb(216,74,74)
AnalyzerPlugins.invoke(AnalyzerPlugins$NonCumulativeOp):369->rgb(202,53,53)
AnalyzerPlugins.pluginsEnsureCompanionObject$(AnalyzerPlugins, Namers$Namer, Trees$ClassDef, Function1):438->rgb(244,114,114)
AnalyzerPlugins.pluginsEnsureCompanionObject(Namers$Namer, Trees$ClassDef, Function1):438->rgb(217,75,75)
AnalyzerPlugins.pluginsEnterSym$(AnalyzerPlugins, Namers$Namer, Trees$Tree):421->rgb(204,56,56)
AnalyzerPlugins.pluginsEnterSym(Namers$Namer, Trees$Tree):422->rgb(234,99,99)
AnalyzerPlugins.pluginsIsBlackbox$(AnalyzerPlugins, Symbols$Symbol):389->rgb(249,121,121)
AnalyzerPlugins.pluginsIsBlackbox(Symbols$Symbol):389->rgb(227,90,90)
AnalyzerPlugins.pluginsMacroExpand$(AnalyzerPlugins, Typers$Typer, Trees$Tree, int, Types$Type):397->rgb(226,88,88)
AnalyzerPlugins.pluginsMacroExpand(Typers$Typer, Trees$Tree, int, Types$Type):397->rgb(221,81,81)
AnalyzerPlugins.pluginsTyped$(AnalyzerPlugins, Types$Type, Typers$Typer, Trees$Tree, int, Types$Type):311->rgb(220,79,79)
AnalyzerPlugins.pluginsTyped(Types$Type, Typers$Typer, Trees$Tree, int, Types$Type):313->rgb(240,108,108)
AnnotationCheckers.addAnnotations$(AnnotationCheckers, Trees$Tree, Types$Type):125->rgb(213,69,69)
AnnotationCheckers.addAnnotations(Trees$Tree, Types$Type):126->rgb(244,114,114)
AnnotationInfos$Annotatable.dropOtherAnnotations(List, Symbols$Symbol):60->rgb(251,124,124)
AnnotationInfos$Annotatable.getAnnotation$(AnnotationInfos$Annotatable, Symbols$Symbol):47->rgb(214,70,70)
AnnotationInfos$Annotatable.getAnnotation(Symbols$Symbol):49->rgb(231,95,95)
AnnotationInfos$Annotatable.hasAnnotation$(AnnotationInfos$Annotatable, Symbols$Symbol):43->rgb(236,103,103)
AnnotationInfos$Annotatable.hasAnnotation(Symbols$Symbol):45->rgb(229,92,92)
AnnotationInfos$AnnotationInfo$.apply(Types$Type, List, List):172->rgb(201,52,52)
AnnotationInfos$AnnotationInfo.matches(Symbols$Symbol):312->rgb(204,56,56)
AnnotationInfos$CompleteAnnotationInfo.<init>(SymbolTable, Types$Type, List, List):186->rgb(213,69,69)
AnnotationInfos$CompleteAnnotationInfo.<init>(SymbolTable, Types$Type, List, List):194->rgb(242,111,111)
AnnotationInfos$ScalaSigBytes.fitsInOneString():138->rgb(225,87,87)
AnnotationNode.accept(AnnotationVisitor):193->rgb(204,56,56)
AnnotationNode.accept(AnnotationVisitor, String, Object):229->rgb(243,113,113)
AnnotationWriter.visit(String, Object):126->rgb(228,91,91)
AnyRefMap$$anon$1.next():290->rgb(216,73,73)
AnyRefMap$$anon$1.next():308->rgb(209,64,64)
AnyRefMap$.empty():458->rgb(206,60,60)
AnyRefMap.<init>():38->rgb(207,60,60)
AnyRefMap.<init>(Function1, int, boolean):60->rgb(246,117,117)
AnyRefMap.apply(Object):178->rgb(219,78,78)
AnyRefMap.defaultInitialize(int):63->rgb(245,116,116)
AnyRefMap.foreach(Function1):323->rgb(236,103,103)
AnyRefMap.get(Object):123->rgb(208,62,62)
AnyRefMap.getOrElse(Object, Function0):129->rgb(222,82,82)
AnyRefMap.hashOf(Object):86->rgb(208,62,62)
AnyRefMap.hashOf(Object):88->rgb(251,124,124)
AnyRefMap.hashOf(Object):90->rgb(248,120,120)
AnyRefMap.imbalanced():81->rgb(217,75,75)
AnyRefMap.repack():223->rgb(200,50,50)
AnyRefMap.repack(int):194->rgb(236,102,102)
AnyRefMap.repack(int):205->rgb(250,123,123)
AnyRefMap.seekEntry(int, Object):99->rgb(242,112,112)
AnyRefMap.update(Object, Object):264->rgb(223,84,84)
Array$$anon$2.apply(Object):61->rgb(215,72,72)
Array$$anon$2.apply(Object):62->rgb(227,90,90)
ArrayBuffer.$plus$eq(Object):48->rgb(201,52,52)
ArrayBuffer.$plus$eq(Object):84->rgb(203,55,55)
ArrayBuffer.$plus$plus$eq(TraversableOnce):100->rgb(231,95,95)
ArrayBuffer.$plus$plus$eq(TraversableOnce):48->rgb(231,96,96)
ArrayBuffer.<init>():63->rgb(208,62,62)
ArrayBuffer.<init>(int):49->rgb(240,109,109)
ArrayBuffer.copyToArray(Object, int, int):48->rgb(243,112,112)
ArrayBuffer.foreach(Function1):48->rgb(201,51,51)
ArrayBuffer.isEmpty():48->rgb(212,68,68)
ArrayBuffer.length():48->rgb(227,89,89)
ArrayBuffer.size0():48->rgb(254,129,129)
ArrayBuffer.sizeHintIfCheap():48->rgb(231,95,95)
ArrayBuilder$.make(ClassTag):35->rgb(234,100,100)
ArrayList$Itr.next():859->rgb(211,67,67)
ArrayList.<init>():165->rgb(216,73,73)
ArrayList.<init>(Collection):178->rgb(235,101,101)
ArrayList.add(Object):462->rgb(214,70,70)
ArrayList.add(int, Object):479->rgb(225,86,86)
ArrayList.addAll(Collection):581->rgb(223,84,84)
ArrayList.ensureCapacityInternal(int):231->rgb(240,108,108)
ArrayList.ensureExplicitCapacity(int):239->rgb(218,76,76)
ArrayList.grow(int):265->rgb(248,120,120)
ArrayOps$ofInt.<init>(int[]):239->rgb(215,71,71)
ArrayOps$ofRef.filter(Function1):191->rgb(216,74,74)
ArrayOps$ofRef.filterImpl(Function1, boolean):191->rgb(210,65,65)
ArrayOps$ofRef.foreach(Function1):191->rgb(222,82,82)
ArrayOps$ofRef.to(CanBuildFrom):191->rgb(204,56,56)
ArrayOps$ofRef.toList():191->rgb(204,56,56)
Arrays.copyOf(Object[], int):3181->rgb(216,73,73)
Arrays.copyOf(char[], int):3332->rgb(246,117,117)
Arrays.copyOfRange(char[], int, int):3664->rgb(248,119,119)
Arrays.sort(Object[], Comparator):1438->rgb(200,50,50)
AsScalaConverters.asScalaIterator$(AsScalaConverters, Iterator):32->rgb(252,126,126)
AsScalaConverters.asScalaIterator(Iterator):33->rgb(246,117,117)
Attachments.get(ClassTag):42->rgb(250,122,122)
Attachments.remove(ClassTag):56->rgb(212,68,68)
Attribute.getSize(ClassWriter, byte[], int, int, int):213->rgb(229,92,92)
Attribute.put(ClassWriter, byte[], int, int, int, ByteVector):249->rgb(249,121,121)
BCodeBodyBuilder$PlainBodyBuilder.$anonfun$genBlock$1(BCodeBodyBuilder$PlainBodyBuilder, Trees$Tree):812->rgb(252,126,126)
BCodeBodyBuilder$PlainBodyBuilder.$anonfun$genBlock$3$adapted(BCodeBodyBuilder$PlainBodyBuilder, Label, Tuple2):816->rgb(223,84,84)
BCodeBodyBuilder$PlainBodyBuilder.$anonfun$genBlock$3(BCodeBodyBuilder$PlainBodyBuilder, Label, Tuple2):816->rgb(220,80,80)
BCodeBodyBuilder$PlainBodyBuilder.$anonfun$genLoadArguments$1(BCodeBodyBuilder$PlainBodyBuilder, Tuple2):935->rgb(245,116,116)
BCodeBodyBuilder$PlainBodyBuilder.$anonfun$genLoadLabelArguments$4(BCodeBodyBuilder$PlainBodyBuilder, Tuple2):922->rgb(207,61,61)
BCodeBodyBuilder$PlainBodyBuilder.$anonfun$genMatch$6(BCodeBodyBuilder$PlainBodyBuilder, BTypes$BType, Label, Tuple2):800->rgb(210,65,65)
BCodeBodyBuilder$PlainBodyBuilder.$anonfun$genStringConcat$1(BCodeBodyBuilder$PlainBodyBuilder, Trees$Tree):1014->rgb(220,80,80)
BCodeBodyBuilder$PlainBodyBuilder.<init>(BCodeBodyBuilder, CompilationUnits$CompilationUnit):35->rgb(226,87,87)
BCodeBodyBuilder$PlainBodyBuilder.adapt(BTypes$BType, BTypes$BType):822->rgb(210,65,65)
BCodeBodyBuilder$PlainBodyBuilder.adapt(BTypes$BType, BTypes$BType):891->rgb(217,75,75)
BCodeBodyBuilder$PlainBodyBuilder.fieldOp(Symbols$Symbol, boolean, Symbols$Symbol):412->rgb(205,58,58)
BCodeBodyBuilder$PlainBodyBuilder.fieldStore(Symbols$Symbol, Symbols$Symbol):404->rgb(211,66,66)
BCodeBodyBuilder$PlainBodyBuilder.genApply(Trees$Apply, BTypes$BType):511->rgb(236,102,102)
BCodeBodyBuilder$PlainBodyBuilder.genApply(Trees$Apply, BTypes$BType):521->rgb(209,63,63)
BCodeBodyBuilder$PlainBodyBuilder.genApply(Trees$Apply, BTypes$BType):556->rgb(223,83,83)
BCodeBodyBuilder$PlainBodyBuilder.genApply(Trees$Apply, BTypes$BType):577->rgb(201,52,52)
BCodeBodyBuilder$PlainBodyBuilder.genApply(Trees$Apply, BTypes$BType):578->rgb(228,90,90)
BCodeBodyBuilder$PlainBodyBuilder.genApply(Trees$Apply, BTypes$BType):579->rgb(205,58,58)
BCodeBodyBuilder$PlainBodyBuilder.genApply(Trees$Apply, BTypes$BType):590->rgb(214,71,71)
BCodeBodyBuilder$PlainBodyBuilder.genApply(Trees$Apply, BTypes$BType):617->rgb(222,83,83)
BCodeBodyBuilder$PlainBodyBuilder.genApply(Trees$Apply, BTypes$BType):619->rgb(218,76,76)
BCodeBodyBuilder$PlainBodyBuilder.genApply(Trees$Apply, BTypes$BType):620->rgb(201,51,51)
BCodeBodyBuilder$PlainBodyBuilder.genApply(Trees$Apply, BTypes$BType):621->rgb(238,105,105)
BCodeBodyBuilder$PlainBodyBuilder.genApply(Trees$Apply, BTypes$BType):624->rgb(232,96,96)
BCodeBodyBuilder$PlainBodyBuilder.genApply(Trees$Apply, BTypes$BType):629->rgb(224,85,85)
BCodeBodyBuilder$PlainBodyBuilder.genApply(Trees$Apply, BTypes$BType):630->rgb(208,62,62)
BCodeBodyBuilder$PlainBodyBuilder.genApply(Trees$Apply, BTypes$BType):632->rgb(226,88,88)
BCodeBodyBuilder$PlainBodyBuilder.genApply(Trees$Apply, BTypes$BType):635->rgb(250,123,123)
BCodeBodyBuilder$PlainBodyBuilder.genApply(Trees$Apply, BTypes$BType):639->rgb(206,59,59)
BCodeBodyBuilder$PlainBodyBuilder.genApply(Trees$Apply, BTypes$BType):650->rgb(202,54,54)
BCodeBodyBuilder$PlainBodyBuilder.genApply(Trees$Apply, BTypes$BType):652->rgb(241,109,109)
BCodeBodyBuilder$PlainBodyBuilder.genApply(Trees$Apply, BTypes$BType):653->rgb(208,61,61)
BCodeBodyBuilder$PlainBodyBuilder.genApply(Trees$Apply, BTypes$BType):664->rgb(253,127,127)
BCodeBodyBuilder$PlainBodyBuilder.genApply(Trees$Apply, BTypes$BType):665->rgb(236,103,103)
BCodeBodyBuilder$PlainBodyBuilder.genApply(Trees$Apply, BTypes$BType):667->rgb(238,106,106)
BCodeBodyBuilder$PlainBodyBuilder.genApply(Trees$Apply, BTypes$BType):690->rgb(210,65,65)
BCodeBodyBuilder$PlainBodyBuilder.genApply(Trees$Apply, BTypes$BType):691->rgb(238,106,106)
BCodeBodyBuilder$PlainBodyBuilder.genApply(Trees$Apply, BTypes$BType):701->rgb(213,69,69)
BCodeBodyBuilder$PlainBodyBuilder.genApply(Trees$Apply, BTypes$BType):722->rgb(219,78,78)
BCodeBodyBuilder$PlainBodyBuilder.genArithmeticOp(Trees$Tree, int):127->rgb(234,99,99)
BCodeBodyBuilder$PlainBodyBuilder.genArrayOp(Trees$Tree, int, BTypes$BType):169->rgb(201,52,52)
BCodeBodyBuilder$PlainBodyBuilder.genArrayValue(Trees$ArrayValue):740->rgb(206,59,59)
BCodeBodyBuilder$PlainBodyBuilder.genBlock(Trees$Block, BTypes$BType):812->rgb(211,66,66)
BCodeBodyBuilder$PlainBodyBuilder.genBlock(Trees$Block, BTypes$BType):813->rgb(227,89,89)
BCodeBodyBuilder$PlainBodyBuilder.genBlock(Trees$Block, BTypes$BType):816->rgb(247,119,119)
BCodeBodyBuilder$PlainBodyBuilder.genCJUMP(Label, Label, int, BTypes$BType, Label, boolean):1120->rgb(221,81,81)
BCodeBodyBuilder$PlainBodyBuilder.genCZJUMP(Label, Label, int, BTypes$BType, Label, boolean):1141->rgb(239,107,107)
BCodeBodyBuilder$PlainBodyBuilder.genCallMethod(Symbols$Symbol, int, Position, Symbols$Symbol):1054->rgb(221,81,81)
BCodeBodyBuilder$PlainBodyBuilder.genCallMethod(Symbols$Symbol, int, Position, Symbols$Symbol):1061->rgb(217,74,74)
BCodeBodyBuilder$PlainBodyBuilder.genCallMethod(Symbols$Symbol, int, Position, Symbols$Symbol):1064->rgb(228,91,91)
BCodeBodyBuilder$PlainBodyBuilder.genCallMethod(Symbols$Symbol, int, Position, Symbols$Symbol):1065->rgb(233,98,98)
BCodeBodyBuilder$PlainBodyBuilder.genCallMethod(Symbols$Symbol, int, Position, Symbols$Symbol):1066->rgb(208,62,62)
BCodeBodyBuilder$PlainBodyBuilder.genCallMethod(Symbols$Symbol, int, Position, Symbols$Symbol):1071->rgb(231,96,96)
BCodeBodyBuilder$PlainBodyBuilder.genCallMethod(Symbols$Symbol, int, Position, Symbols$Symbol):1080->rgb(241,110,110)
BCodeBodyBuilder$PlainBodyBuilder.genCallMethod(Symbols$Symbol, int, Position, Symbols$Symbol):1088->rgb(247,119,119)
BCodeBodyBuilder$PlainBodyBuilder.genComparisonOp$1(Trees$Tree, Trees$Tree, int, Label, Label, Label):1195->rgb(210,65,65)
BCodeBodyBuilder$PlainBodyBuilder.genComparisonOp$1(Trees$Tree, Trees$Tree, int, Label, Label, Label):1199->rgb(211,66,66)
BCodeBodyBuilder$PlainBodyBuilder.genComparisonOp$1(Trees$Tree, Trees$Tree, int, Label, Label, Label):1201->rgb(239,107,107)
BCodeBodyBuilder$PlainBodyBuilder.genCond(Trees$Tree, Label, Label, Label):1213->rgb(233,98,98)
BCodeBodyBuilder$PlainBodyBuilder.genCond(Trees$Tree, Label, Label, Label):1233->rgb(241,110,110)
BCodeBodyBuilder$PlainBodyBuilder.genCond(Trees$Tree, Label, Label, Label):1234->rgb(249,122,122)
BCodeBodyBuilder$PlainBodyBuilder.genCond(Trees$Tree, Label, Label, Label):1238->rgb(225,87,87)
BCodeBodyBuilder$PlainBodyBuilder.genCond(Trees$Tree, Label, Label, Label):1239->rgb(252,126,126)
BCodeBodyBuilder$PlainBodyBuilder.genCond(Trees$Tree, Label, Label, Label):1241->rgb(233,99,99)
BCodeBodyBuilder$PlainBodyBuilder.genCond(Trees$Tree, Label, Label, Label):1243->rgb(235,101,101)
BCodeBodyBuilder$PlainBodyBuilder.genCond(Trees$Tree, Label, Label, Label):1246->rgb(214,71,71)
BCodeBodyBuilder$PlainBodyBuilder.genEqEqPrimitive(Trees$Tree, Trees$Tree, Label, Label, Label, Position):1270->rgb(243,113,113)
BCodeBodyBuilder$PlainBodyBuilder.genEqEqPrimitive(Trees$Tree, Trees$Tree, Label, Label, Label, Position):1298->rgb(248,120,120)
BCodeBodyBuilder$PlainBodyBuilder.genEqEqPrimitive(Trees$Tree, Trees$Tree, Label, Label, Label, Position):1312->rgb(229,92,92)
BCodeBodyBuilder$PlainBodyBuilder.genEqEqPrimitive(Trees$Tree, Trees$Tree, Label, Label, Label, Position):1313->rgb(209,63,63)
BCodeBodyBuilder$PlainBodyBuilder.genEqEqPrimitive(Trees$Tree, Trees$Tree, Label, Label, Label, Position):1325->rgb(215,71,71)
BCodeBodyBuilder$PlainBodyBuilder.genInvokeDynamicLambda(Symbols$Symbol, int, Symbols$Symbol, Symbols$Symbol, boolean, boolean):1344->rgb(213,69,69)
BCodeBodyBuilder$PlainBodyBuilder.genInvokeDynamicLambda(Symbols$Symbol, int, Symbols$Symbol, Symbols$Symbol, boolean, boolean):1348->rgb(252,126,126)
BCodeBodyBuilder$PlainBodyBuilder.genInvokeDynamicLambda(Symbols$Symbol, int, Symbols$Symbol, Symbols$Symbol, boolean, boolean):1349->rgb(227,90,90)
BCodeBodyBuilder$PlainBodyBuilder.genInvokeDynamicLambda(Symbols$Symbol, int, Symbols$Symbol, Symbols$Symbol, boolean, boolean):1352->rgb(235,102,102)
BCodeBodyBuilder$PlainBodyBuilder.genLabelDef(Trees$LabelDef, BTypes$BType):476->rgb(217,75,75)
BCodeBodyBuilder$PlainBodyBuilder.genLoad(Trees$Tree):249->rgb(210,65,65)
BCodeBodyBuilder$PlainBodyBuilder.genLoad(Trees$Tree, BTypes$BType):256->rgb(241,110,110)
BCodeBodyBuilder$PlainBodyBuilder.genLoad(Trees$Tree, BTypes$BType):259->rgb(208,62,62)
BCodeBodyBuilder$PlainBodyBuilder.genLoad(Trees$Tree, BTypes$BType):268->rgb(221,81,81)
BCodeBodyBuilder$PlainBodyBuilder.genLoad(Trees$Tree, BTypes$BType):270->rgb(240,109,109)
BCodeBodyBuilder$PlainBodyBuilder.genLoad(Trees$Tree, BTypes$BType):279->rgb(216,74,74)
BCodeBodyBuilder$PlainBodyBuilder.genLoad(Trees$Tree, BTypes$BType):289->rgb(233,98,98)
BCodeBodyBuilder$PlainBodyBuilder.genLoad(Trees$Tree, BTypes$BType):291->rgb(251,124,124)
BCodeBodyBuilder$PlainBodyBuilder.genLoad(Trees$Tree, BTypes$BType):296->rgb(236,103,103)
BCodeBodyBuilder$PlainBodyBuilder.genLoad(Trees$Tree, BTypes$BType):323->rgb(214,70,70)
BCodeBodyBuilder$PlainBodyBuilder.genLoad(Trees$Tree, BTypes$BType):327->rgb(204,55,55)
BCodeBodyBuilder$PlainBodyBuilder.genLoad(Trees$Tree, BTypes$BType):333->rgb(225,86,86)
BCodeBodyBuilder$PlainBodyBuilder.genLoad(Trees$Tree, BTypes$BType):346->rgb(213,68,68)
BCodeBodyBuilder$PlainBodyBuilder.genLoad(Trees$Tree, BTypes$BType):351->rgb(214,70,70)
BCodeBodyBuilder$PlainBodyBuilder.genLoad(Trees$Tree, BTypes$BType):352->rgb(223,84,84)
BCodeBodyBuilder$PlainBodyBuilder.genLoad(Trees$Tree, BTypes$BType):353->rgb(228,90,90)
BCodeBodyBuilder$PlainBodyBuilder.genLoad(Trees$Tree, BTypes$BType):354->rgb(201,51,51)
BCodeBodyBuilder$PlainBodyBuilder.genLoad(Trees$Tree, BTypes$BType):363->rgb(250,123,123)
BCodeBodyBuilder$PlainBodyBuilder.genLoad(Trees$Tree, BTypes$BType):366->rgb(234,99,99)
BCodeBodyBuilder$PlainBodyBuilder.genLoad(Trees$Tree, BTypes$BType):370->rgb(243,113,113)
BCodeBodyBuilder$PlainBodyBuilder.genLoad(Trees$Tree, BTypes$BType):374->rgb(237,104,104)
BCodeBodyBuilder$PlainBodyBuilder.genLoad(Trees$Tree, BTypes$BType):377->rgb(238,105,105)
BCodeBodyBuilder$PlainBodyBuilder.genLoad(Trees$Tree, BTypes$BType):380->rgb(238,105,105)
BCodeBodyBuilder$PlainBodyBuilder.genLoad(Trees$Tree, BTypes$BType):389->rgb(245,115,115)
BCodeBodyBuilder$PlainBodyBuilder.genLoadArguments(List, List):935->rgb(217,75,75)
BCodeBodyBuilder$PlainBodyBuilder.genLoadIf(Trees$If, BTypes$BType):190->rgb(253,127,127)
BCodeBodyBuilder$PlainBodyBuilder.genLoadIf(Trees$If, BTypes$BType):193->rgb(249,122,122)
BCodeBodyBuilder$PlainBodyBuilder.genLoadIf(Trees$If, BTypes$BType):198->rgb(202,52,52)
BCodeBodyBuilder$PlainBodyBuilder.genLoadIf(Trees$If, BTypes$BType):202->rgb(245,115,115)
BCodeBodyBuilder$PlainBodyBuilder.genLoadLabelArguments(List, Trees$LabelDef, Position):922->rgb(251,124,124)
BCodeBodyBuilder$PlainBodyBuilder.genLoadModule(Symbols$Symbol):953->rgb(208,62,62)
BCodeBodyBuilder$PlainBodyBuilder.genLoadModule(Trees$Tree):947->rgb(226,88,88)
BCodeBodyBuilder$PlainBodyBuilder.genLoadQualifier(Trees$Tree):900->rgb(232,97,97)
BCodeBodyBuilder$PlainBodyBuilder.genMatch(Trees$Match):797->rgb(248,120,120)
BCodeBodyBuilder$PlainBodyBuilder.genPrimitiveOp(Trees$Apply, BTypes$BType):216->rgb(230,93,93)
BCodeBodyBuilder$PlainBodyBuilder.genPrimitiveOp(Trees$Apply, BTypes$BType):217->rgb(237,104,104)
BCodeBodyBuilder$PlainBodyBuilder.genPrimitiveOp(Trees$Apply, BTypes$BType):219->rgb(241,110,110)
BCodeBodyBuilder$PlainBodyBuilder.genPrimitiveOp(Trees$Apply, BTypes$BType):222->rgb(232,97,97)
BCodeBodyBuilder$PlainBodyBuilder.genPrimitiveOp(Trees$Apply, BTypes$BType):236->rgb(238,106,106)
BCodeBodyBuilder$PlainBodyBuilder.genPrimitiveOp(Trees$Apply, BTypes$BType):238->rgb(244,114,114)
BCodeBodyBuilder$PlainBodyBuilder.genStat(Trees$Tree):66->rgb(251,124,124)
BCodeBodyBuilder$PlainBodyBuilder.genStat(Trees$Tree):70->rgb(231,95,95)
BCodeBodyBuilder$PlainBodyBuilder.genStat(Trees$Tree):80->rgb(201,52,52)
BCodeBodyBuilder$PlainBodyBuilder.genStringConcat(Trees$Tree):1004->rgb(240,109,109)
BCodeBodyBuilder$PlainBodyBuilder.genThrow(Trees$Tree):85->rgb(211,66,66)
BCodeBodyBuilder$PlainBodyBuilder.genThrow(Trees$Tree):89->rgb(221,81,81)
BCodeBodyBuilder$PlainBodyBuilder.genTypeApply$1(Trees$Apply, Trees$Tree, boolean, BTypes$BType, BTypes$BType):525->rgb(227,90,90)
BCodeBodyBuilder$PlainBodyBuilder.genZandOrZor$1(boolean, Label, Label, Label, Trees$Tree, Trees$Tree, LazyRef):1224->rgb(236,103,103)
BCodeBodyBuilder$PlainBodyBuilder.genZandOrZor$1(boolean, Label, Label, Label, Trees$Tree, Trees$Tree, LazyRef):1225->rgb(251,125,125)
BCodeBodyBuilder$PlainBodyBuilder.genZandOrZor$1(boolean, Label, Label, Label, Trees$Tree, Trees$Tree, LazyRef):1228->rgb(203,54,54)
BCodeBodyBuilder$PlainBodyBuilder.isPrimitive(Symbols$Symbol):980->rgb(208,62,62)
BCodeBodyBuilder$PlainBodyBuilder.loadAndTestBoolean$1(Trees$Tree, Label, Label, Label):1206->rgb(210,65,65)
BCodeBodyBuilder$PlainBodyBuilder.loadAndTestBoolean$1(Trees$Tree, Label, Label, Label):1207->rgb(220,80,80)
BCodeBodyBuilder$PlainBodyBuilder.receiverClass$1(Trees$Tree):337->rgb(236,102,102)
BCodeBodyBuilder$PlainBodyBuilder.scala$tools$nsc$backend$jvm$BCodeBodyBuilder$PlainBodyBuilder$$$outer():35->rgb(207,60,60)
BCodeBodyBuilder.scala$tools$nsc$backend$jvm$BCodeBodyBuilder$$visitInvokeDynamicInsnLMF(MethodNode, String, String, Type, Handle, Type, boolean, Seq):1369->rgb(200,50,50)
BCodeHelpers$BCAnnotGen.$anonfun$emitAnnotations$2$adapted(BCodeHelpers$BCAnnotGen, ClassVisitor, AnnotationInfos$AnnotationInfo):614->rgb(211,66,66)
BCodeHelpers$BCAnnotGen.$anonfun$emitAnnotations$2(BCodeHelpers$BCAnnotGen, ClassVisitor, AnnotationInfos$AnnotationInfo):617->rgb(226,88,88)
BCodeHelpers$BCAnnotGen.$anonfun$emitAnnotations$2(BCodeHelpers$BCAnnotGen, ClassVisitor, AnnotationInfos$AnnotationInfo):618->rgb(207,60,60)
BCodeHelpers$BCAnnotGen.$anonfun$emitAssocs$2$adapted(BCodeHelpers$BCAnnotGen, AnnotationVisitor, Tuple2):604->rgb(215,72,72)
BCodeHelpers$BCAnnotGen.$anonfun$emitAssocs$2(BCodeHelpers$BCAnnotGen, AnnotationVisitor, Tuple2):605->rgb(238,105,105)
BCodeHelpers$BCAnnotGen.$anonfun$emitParamAnnotations$1(BCodeHelpers$BCAnnotGen, List):650->rgb(214,71,71)
BCodeHelpers$BCAnnotGen.$anonfun$erasedType$1(BCodeHelpers$BCAnnotGen, Types$Type):459->rgb(248,120,120)
BCodeHelpers$BCAnnotGen.$anonfun$erasedType$1(BCodeHelpers$BCAnnotGen, Types$Type):460->rgb(239,107,107)
BCodeHelpers$BCAnnotGen.descriptorForErasedType$(BCodeHelpers$BCAnnotGen, Types$Type):464->rgb(216,74,74)
BCodeHelpers$BCAnnotGen.descriptorForErasedType(Types$Type):464->rgb(253,127,127)
BCodeHelpers$BCAnnotGen.emitAnnotations$(BCodeHelpers$BCAnnotGen, ClassVisitor, List):613->rgb(226,87,87)
BCodeHelpers$BCAnnotGen.emitAnnotations$(BCodeHelpers$BCAnnotGen, MethodVisitor, List):625->rgb(212,68,68)
BCodeHelpers$BCAnnotGen.emitAnnotations(ClassVisitor, List):614->rgb(236,102,102)
BCodeHelpers$BCAnnotGen.emitAnnotations(MethodVisitor, List):626->rgb(247,118,118)
BCodeHelpers$BCAnnotGen.emitArgument$(BCodeHelpers$BCAnnotGen, AnnotationVisitor, String, AnnotationInfos$ClassfileAnnotArg):552->rgb(217,76,76)
BCodeHelpers$BCAnnotGen.emitArgument(AnnotationVisitor, String, AnnotationInfos$ClassfileAnnotArg):576->rgb(226,88,88)
BCodeHelpers$BCAnnotGen.emitArgument(AnnotationVisitor, String, AnnotationInfos$ClassfileAnnotArg):577->rgb(205,58,58)
BCodeHelpers$BCAnnotGen.emitAssocs$(BCodeHelpers$BCAnnotGen, AnnotationVisitor, List):603->rgb(246,117,117)
BCodeHelpers$BCAnnotGen.emitAssocs(AnnotationVisitor, List):604->rgb(221,80,80)
BCodeHelpers$BCAnnotGen.emitParamAnnotations$(BCodeHelpers$BCAnnotGen, MethodVisitor, List):649->rgb(254,129,129)
BCodeHelpers$BCAnnotGen.emitParamAnnotations(MethodVisitor, List):650->rgb(242,111,111)
BCodeHelpers$BCAnnotGen.emitParamAnnotations(MethodVisitor, List):651->rgb(227,90,90)
BCodeHelpers$BCAnnotGen.erasedType$(BCodeHelpers$BCAnnotGen, Types$Type):455->rgb(213,69,69)
BCodeHelpers$BCAnnotGen.erasedType(Types$Type):458->rgb(206,59,59)
BCodeHelpers$BCAnnotGen.strEncode(AnnotationInfos$ScalaSigBytes):538->rgb(217,74,74)
BCodeHelpers$BCAnnotGen.ubytesToCharArray$(BCodeHelpers$BCAnnotGen, byte[]):493->rgb(245,116,116)
BCodeHelpers$BCAnnotGen.ubytesToCharArray(byte[]):494->rgb(235,101,101)
BCodeHelpers$BCForwardersGen.$anonfun$addForwarder$1(Symbols$Symbol, Symbols$Symbol):803->rgb(244,115,115)
BCodeHelpers$BCForwardersGen.$anonfun$addForwarders$4$adapted(BCodeHelpers$BCForwardersGen, boolean, ClassVisitor, String, Symbols$Symbol, Symbols$Symbol, LazyRef, Symbols$Symbol):881->rgb(200,50,50)
BCodeHelpers$BCForwardersGen.$anonfun$addForwarders$4(BCodeHelpers$BCForwardersGen, boolean, ClassVisitor, String, Symbols$Symbol, Symbols$Symbol, LazyRef, Symbols$Symbol):882->rgb(233,98,98)
BCodeHelpers$BCForwardersGen.$anonfun$addForwarders$4(BCodeHelpers$BCForwardersGen, boolean, ClassVisitor, String, Symbols$Symbol, Symbols$Symbol, LazyRef, Symbols$Symbol):884->rgb(230,94,94)
BCodeHelpers$BCForwardersGen.$anonfun$addForwarders$4(BCodeHelpers$BCForwardersGen, boolean, ClassVisitor, String, Symbols$Symbol, Symbols$Symbol, LazyRef, Symbols$Symbol):890->rgb(239,107,107)
BCodeHelpers$BCForwardersGen.addForwarder(boolean, ClassVisitor, Symbols$Symbol, Symbols$Symbol):810->rgb(246,118,118)
BCodeHelpers$BCForwardersGen.addForwarder(boolean, ClassVisitor, Symbols$Symbol, Symbols$Symbol):826->rgb(225,87,87)
BCodeHelpers$BCForwardersGen.addForwarder(boolean, ClassVisitor, Symbols$Symbol, Symbols$Symbol):847->rgb(213,69,69)
BCodeHelpers$BCForwardersGen.addForwarder(boolean, ClassVisitor, Symbols$Symbol, Symbols$Symbol):856->rgb(247,118,118)
BCodeHelpers$BCForwardersGen.addForwarders$(BCodeHelpers$BCForwardersGen, boolean, ClassVisitor, String, Symbols$Symbol):871->rgb(228,91,91)
BCodeHelpers$BCForwardersGen.addForwarders(boolean, ClassVisitor, String, Symbols$Symbol):872->rgb(201,52,52)
BCodeHelpers$BCForwardersGen.addForwarders(boolean, ClassVisitor, String, Symbols$Symbol):881->rgb(211,67,67)
BCodeHelpers$BCForwardersGen.addRemoteExceptionAnnot$(BCodeHelpers$BCForwardersGen, boolean, boolean, Symbols$Symbol):775->rgb(214,71,71)
BCodeHelpers$BCForwardersGen.addRemoteExceptionAnnot(boolean, boolean, Symbols$Symbol):785->rgb(239,106,106)
BCodeHelpers$BCForwardersGen.conflictingNames$1(Symbols$Symbol, LazyRef):876->rgb(242,112,112)
BCodeHelpers$BCForwardersGen.conflictingNames$lzycompute$1(Symbols$Symbol, LazyRef):877->rgb(253,128,128)
BCodeHelpers$BCForwardersGen.getExceptions$(BCodeHelpers$BCForwardersGen, List):905->rgb(215,72,72)
BCodeHelpers$BCForwardersGen.getExceptions(List):906->rgb(245,115,115)
BCodeHelpers$BCForwardersGen.staticForwarderGenericSignature$1(Symbols$Symbol, Symbols$Symbol):803->rgb(232,97,97)
BCodeHelpers$BCForwardersGen.staticForwarderGenericSignature$1(Symbols$Symbol, Symbols$Symbol):806->rgb(214,70,70)
BCodeHelpers$BCInnerClassGen.$init$(BCodeHelpers$BCInnerClassGen):421->rgb(252,126,126)
BCodeHelpers$BCInnerClassGen.debugLevel$(BCodeHelpers$BCInnerClassGen):419->rgb(216,74,74)
BCodeHelpers$BCInnerClassGen.debugLevel():419->rgb(204,55,55)
BCodeHelpers$BCInnerClassGen.internalName$(BCodeHelpers$BCInnerClassGen, Symbols$Symbol):428->rgb(243,113,113)
BCodeHelpers$BCInnerClassGen.internalName(Symbols$Symbol):428->rgb(251,124,124)
BCodeHelpers$BCJGenSigGen.$anonfun$getGenericSignature$1(Symbols$Symbol, Symbols$Symbol):698->rgb(232,97,97)
BCodeHelpers$BCJGenSigGen.$anonfun$getGenericSignature$2(BCodeHelpers$BCJGenSigGen, Symbols$Symbol):708->rgb(247,118,118)
BCodeHelpers$BCJGenSigGen.$anonfun$getGenericSignature$3$adapted(BCodeHelpers$BCJGenSigGen, Symbols$Symbol):715->rgb(220,79,79)
BCodeHelpers$BCJGenSigGen.$anonfun$getGenericSignature$3(BCodeHelpers$BCJGenSigGen, Symbols$Symbol):715->rgb(211,66,66)
BCodeHelpers$BCJGenSigGen.enterReferencedClass$1(Symbols$Symbol):708->rgb(210,64,64)
BCodeHelpers$BCJGenSigGen.getGenericSignature$(BCodeHelpers$BCJGenSigGen, Symbols$Symbol, Symbols$Symbol):697->rgb(239,108,108)
BCodeHelpers$BCJGenSigGen.getGenericSignature$(BCodeHelpers$BCJGenSigGen, Symbols$Symbol, Symbols$Symbol, Types$Type):702->rgb(224,85,85)
BCodeHelpers$BCJGenSigGen.getGenericSignature(Symbols$Symbol, Symbols$Symbol):698->rgb(231,95,95)
BCodeHelpers$BCJGenSigGen.getGenericSignature(Symbols$Symbol, Symbols$Symbol):699->rgb(207,60,60)
BCodeHelpers$BCJGenSigGen.getGenericSignature(Symbols$Symbol, Symbols$Symbol, Types$Type):703->rgb(211,66,66)
BCodeHelpers$BCJGenSigGen.getGenericSignature(Symbols$Symbol, Symbols$Symbol, Types$Type):715->rgb(249,121,121)
BCodeHelpers$BCJGenSigGen.getGenericSignature(Symbols$Symbol, Symbols$Symbol, Types$Type):746->rgb(229,92,92)
BCodeHelpers$BCJGenSigGen.needsGenericSignature(Symbols$Symbol):687->rgb(241,109,109)
BCodeHelpers$BCPickles.$init$(BCodeHelpers$BCPickles):347->rgb(244,114,114)
BCodeHelpers$BCPickles.getAnnotPickle$(BCodeHelpers$BCPickles, String, Symbols$Symbol):400->rgb(240,108,108)
BCodeHelpers$JAndroidBuilder.$init$(BCodeHelpers$JAndroidBuilder):1106->rgb(233,98,98)
BCodeHelpers$JCommonBuilder.addForwarders(boolean, ClassVisitor, String, Symbols$Symbol):940->rgb(247,119,119)
BCodeHelpers$JCommonBuilder.getAnnotPickle(String, Symbols$Symbol):940->rgb(207,60,60)
BCodeHelpers$JCommonBuilder.getGenericSignature(Symbols$Symbol, Symbols$Symbol, Types$Type):940->rgb(200,50,50)
BCodeHelpers$JCommonBuilder.scala$tools$nsc$backend$jvm$BCodeHelpers$BCForwardersGen$$$outer():767->rgb(219,78,78)
BCodeHelpers$JMirrorBuilder.genMirrorClass(Symbols$Symbol, CompilationUnits$CompilationUnit):975->rgb(204,57,57)
BCodeHelpers$JMirrorBuilder.genMirrorClass(Symbols$Symbol, CompilationUnits$CompilationUnit):979->rgb(222,82,82)
BCodeHelpers$isJavaEntryPoint$.apply(Symbols$Symbol, CompilationUnits$CompilationUnit):265->rgb(254,129,129)
BCodeHelpers.$anonfun$completeSilentlyAndCheckErroneous$1(Symbols$Symbol):232->rgb(238,105,105)
BCodeHelpers.$anonfun$fieldSymbols$1$adapted(Symbols$Symbol):313->rgb(216,73,73)
BCodeHelpers.$anonfun$fieldSymbols$1(Symbols$Symbol):313->rgb(219,78,78)
BCodeHelpers.$anonfun$isAnonymousOrLocalClass$2(Symbols$Symbol):71->rgb(243,113,113)
BCodeHelpers.completeSilentlyAndCheckErroneous(Symbols$Symbol):230->rgb(207,61,61)
BCodeHelpers.completeSilentlyAndCheckErroneous(Symbols$Symbol):233->rgb(225,87,87)
BCodeHelpers.completeSilentlyAndCheckErroneous(Symbols$Symbol):239->rgb(209,63,63)
BCodeHelpers.enclosingMethodAttribute(Symbols$Symbol, Function1, Function1):199->rgb(236,102,102)
BCodeHelpers.fieldSymbols(Symbols$Symbol):312->rgb(216,73,73)
BCodeHelpers.isAnonymousOrLocalClass(Symbols$Symbol):71->rgb(206,58,58)
BCodeHelpers.isOriginallyStaticOwner(Symbols$Symbol):221->rgb(203,54,54)
BCodeHelpers.needsStaticImplMethod(Symbols$Symbol):55->rgb(245,116,116)
BCodeIdiomatic$JCodeMethodN.dup(BTypes$BType):541->rgb(227,89,89)
BCodeIdiomatic$JCodeMethodN.emitIF(int, Label):391->rgb(248,121,121)
BCodeIdiomatic$JCodeMethodN.emitIF_ICMP(int, Label):393->rgb(212,67,67)
BCodeIdiomatic$JCodeMethodN.emitInvoke(int, String, String, String, boolean, Position):385->rgb(205,58,58)
BCodeIdiomatic$JCodeMethodN.emitVarInsn(int, int, BTypes$BType):492->rgb(223,83,83)
BCodeIdiomatic$JCodeMethodN.invokespecial(String, String, String, boolean, Position):367->rgb(243,113,113)
BCodeIdiomatic$JCodeMethodN.load(int, BTypes$BType):352->rgb(217,75,75)
BCodeIdiomatic$LabelDefsFinder.<init>(BCodeIdiomatic, Trees$Tree):633->rgb(237,105,105)
BCodeIdiomatic$LabelDefsFinder.traverse(Trees$Tree):646->rgb(244,115,115)
BCodeIdiomatic$LabelDefsFinder.traverse(Trees$TreeApi):632->rgb(243,112,112)
BCodeSkelBuilder$PlainSkelBuilder$locals$.$anonfun$getOrMakeLocal$1(BCodeSkelBuilder$PlainSkelBuilder$locals$, Symbols$Symbol):368->rgb(217,75,75)
BCodeSkelBuilder$PlainSkelBuilder$locals$.getOrMakeLocal(Symbols$Symbol):368->rgb(204,56,56)
BCodeSkelBuilder$PlainSkelBuilder$locals$.load(Symbols$Symbol):390->rgb(237,104,104)
BCodeSkelBuilder$PlainSkelBuilder$locals$.makeLocal(Symbols$Symbol):363->rgb(237,104,104)
BCodeSkelBuilder$PlainSkelBuilder$locals$.makeLocal(Symbols$Symbol, BTypes$BType):373->rgb(226,88,88)
BCodeSkelBuilder$PlainSkelBuilder$locals$.reset(boolean):345->rgb(203,55,55)
BCodeSkelBuilder$PlainSkelBuilder.$anonfun$gen$7(BCodeSkelBuilder$PlainSkelBuilder, Trees$Tree):509->rgb(242,112,112)
BCodeSkelBuilder$PlainSkelBuilder.$anonfun$genDefDef$3(BCodeSkelBuilder$PlainSkelBuilder, Trees$ValDef):561->rgb(201,51,51)
BCodeSkelBuilder$PlainSkelBuilder.$anonfun$paramTKs$1(BCodeSkelBuilder$PlainSkelBuilder, Types$Type):75->rgb(235,101,101)
BCodeSkelBuilder$PlainSkelBuilder.<init>(BCodeSkelBuilder, CompilationUnits$CompilationUnit):50->rgb(223,84,84)
BCodeSkelBuilder$PlainSkelBuilder.addClassFields():227->rgb(207,61,61)
BCodeSkelBuilder$PlainSkelBuilder.addForwarders(boolean, ClassVisitor, String, Symbols$Symbol):49->rgb(237,104,104)
BCodeSkelBuilder$PlainSkelBuilder.addRemoteExceptionAnnot(boolean, boolean, Symbols$Symbol):49->rgb(229,93,93)
BCodeSkelBuilder$PlainSkelBuilder.cnode():62->rgb(229,92,92)
BCodeSkelBuilder$PlainSkelBuilder.currProgramPoint():430->rgb(219,78,78)
BCodeSkelBuilder$PlainSkelBuilder.debugLevel():49->rgb(229,92,92)
BCodeSkelBuilder$PlainSkelBuilder.descriptorForErasedType(Types$Type):49->rgb(248,121,121)
BCodeSkelBuilder$PlainSkelBuilder.emitAnnotations(ClassVisitor, List):49->rgb(242,111,111)
BCodeSkelBuilder$PlainSkelBuilder.emitAnnotations(MethodVisitor, List):49->rgb(241,110,110)
BCodeSkelBuilder$PlainSkelBuilder.emitArgument(AnnotationVisitor, String, AnnotationInfos$ClassfileAnnotArg):49->rgb(250,124,124)
BCodeSkelBuilder$PlainSkelBuilder.emitAssocs(AnnotationVisitor, List):49->rgb(241,110,110)
BCodeSkelBuilder$PlainSkelBuilder.emitLocalVarScope(Symbols$Symbol, Label, Label, boolean):716->rgb(234,100,100)
BCodeSkelBuilder$PlainSkelBuilder.emitNormalMethodBody$1(Trees$DefDef, Trees$Tree, List, int):601->rgb(247,118,118)
BCodeSkelBuilder$PlainSkelBuilder.emitParamAnnotations(MethodVisitor, List):49->rgb(242,111,111)
BCodeSkelBuilder$PlainSkelBuilder.erasedType(Types$Type):49->rgb(216,73,73)
BCodeSkelBuilder$PlainSkelBuilder.gen(Trees$Tree):489->rgb(208,62,62)
BCodeSkelBuilder$PlainSkelBuilder.gen(Trees$Tree):491->rgb(200,51,51)
BCodeSkelBuilder$PlainSkelBuilder.gen(Trees$Tree):495->rgb(246,117,117)
BCodeSkelBuilder$PlainSkelBuilder.gen(Trees$Tree):504->rgb(238,106,106)
BCodeSkelBuilder$PlainSkelBuilder.gen(Trees$Tree):505->rgb(251,124,124)
BCodeSkelBuilder$PlainSkelBuilder.gen(Trees$Tree):507->rgb(248,121,121)
BCodeSkelBuilder$PlainSkelBuilder.gen(Trees$Tree):509->rgb(201,51,51)
BCodeSkelBuilder$PlainSkelBuilder.genDefDef(Trees$DefDef):550->rgb(241,111,111)
BCodeSkelBuilder$PlainSkelBuilder.genDefDef(Trees$DefDef):551->rgb(232,97,97)
BCodeSkelBuilder$PlainSkelBuilder.genDefDef(Trees$DefDef):552->rgb(202,53,53)
BCodeSkelBuilder$PlainSkelBuilder.genDefDef(Trees$DefDef):553->rgb(240,108,108)
BCodeSkelBuilder$PlainSkelBuilder.genDefDef(Trees$DefDef):555->rgb(206,59,59)
BCodeSkelBuilder$PlainSkelBuilder.genDefDef(Trees$DefDef):561->rgb(228,91,91)
BCodeSkelBuilder$PlainSkelBuilder.genDefDef(Trees$DefDef):571->rgb(254,129,129)
BCodeSkelBuilder$PlainSkelBuilder.genDefDef(Trees$DefDef):573->rgb(201,52,52)
BCodeSkelBuilder$PlainSkelBuilder.genDefDef(Trees$DefDef):575->rgb(208,61,61)
BCodeSkelBuilder$PlainSkelBuilder.genDefDef(Trees$DefDef):579->rgb(249,121,121)
BCodeSkelBuilder$PlainSkelBuilder.genDefDef(Trees$DefDef):632->rgb(220,80,80)
BCodeSkelBuilder$PlainSkelBuilder.genDefDef(Trees$DefDef):633->rgb(202,54,54)
BCodeSkelBuilder$PlainSkelBuilder.genPlainClass(Trees$ClassDef):108->rgb(236,102,102)
BCodeSkelBuilder$PlainSkelBuilder.genPlainClass(Trees$ClassDef):110->rgb(246,117,117)
BCodeSkelBuilder$PlainSkelBuilder.genPlainClass(Trees$ClassDef):112->rgb(219,77,77)
BCodeSkelBuilder$PlainSkelBuilder.genPlainClass(Trees$ClassDef):90->rgb(245,115,115)
BCodeSkelBuilder$PlainSkelBuilder.genPlainClass(Trees$ClassDef):91->rgb(246,117,117)
BCodeSkelBuilder$PlainSkelBuilder.genPlainClass(Trees$ClassDef):95->rgb(249,121,121)
BCodeSkelBuilder$PlainSkelBuilder.getExceptions(List):49->rgb(200,50,50)
BCodeSkelBuilder$PlainSkelBuilder.getGenericSignature(Symbols$Symbol, Symbols$Symbol):49->rgb(233,99,99)
BCodeSkelBuilder$PlainSkelBuilder.getGenericSignature(Symbols$Symbol, Symbols$Symbol, Types$Type):49->rgb(238,105,105)
BCodeSkelBuilder$PlainSkelBuilder.initJClass(ClassVisitor):125->rgb(230,94,94)
BCodeSkelBuilder$PlainSkelBuilder.initJClass(ClassVisitor):131->rgb(250,123,123)
BCodeSkelBuilder$PlainSkelBuilder.initJClass(ClassVisitor):140->rgb(237,105,105)
BCodeSkelBuilder$PlainSkelBuilder.initJClass(ClassVisitor):148->rgb(229,93,93)
BCodeSkelBuilder$PlainSkelBuilder.initJClass(ClassVisitor):157->rgb(202,54,54)
BCodeSkelBuilder$PlainSkelBuilder.initJClass(ClassVisitor):166->rgb(244,114,114)
BCodeSkelBuilder$PlainSkelBuilder.initJMethod(int, List):520->rgb(249,122,122)
BCodeSkelBuilder$PlainSkelBuilder.initJMethod(int, List):521->rgb(204,56,56)
BCodeSkelBuilder$PlainSkelBuilder.initJMethod(int, List):522->rgb(244,114,114)
BCodeSkelBuilder$PlainSkelBuilder.initJMethod(int, List):523->rgb(233,98,98)
BCodeSkelBuilder$PlainSkelBuilder.initJMethod(int, List):529->rgb(251,124,124)
BCodeSkelBuilder$PlainSkelBuilder.initJMethod(int, List):535->rgb(225,86,86)
BCodeSkelBuilder$PlainSkelBuilder.initJMethod(int, List):539->rgb(249,121,121)
BCodeSkelBuilder$PlainSkelBuilder.initJMethod(int, List):540->rgb(253,127,127)
BCodeSkelBuilder$PlainSkelBuilder.internalName(Symbols$Symbol):49->rgb(254,128,128)
BCodeSkelBuilder$PlainSkelBuilder.lineNumber(Trees$Tree):444->rgb(216,74,74)
BCodeSkelBuilder$PlainSkelBuilder.lineNumber(Trees$Tree):452->rgb(211,67,67)
BCodeSkelBuilder$PlainSkelBuilder.methSymbol_$eq(Symbols$Symbol):249->rgb(202,53,53)
BCodeSkelBuilder$PlainSkelBuilder.paramTKs(Trees$Apply):75->rgb(216,74,74)
BCodeSkelBuilder$PlainSkelBuilder.resetMethodBookkeeping(Trees$DefDef):459->rgb(243,113,113)
BCodeSkelBuilder$PlainSkelBuilder.resetMethodBookkeeping(Trees$DefDef):462->rgb(205,58,58)
BCodeSkelBuilder$PlainSkelBuilder.resetMethodBookkeeping(Trees$DefDef):463->rgb(247,118,118)
BCodeSkelBuilder$PlainSkelBuilder.resetMethodBookkeeping(Trees$DefDef):465->rgb(213,69,69)
BCodeSkelBuilder$PlainSkelBuilder.scala$tools$nsc$backend$jvm$BCodeSkelBuilder$PlainSkelBuilder$$$outer():49->rgb(218,77,77)
BCodeSkelBuilder$PlainSkelBuilder.symInfoTK(Symbols$Symbol):78->rgb(203,54,54)
BCodeSkelBuilder$PlainSkelBuilder.tpeTK(Trees$Tree):80->rgb(246,118,118)
BCodeSkelBuilder$PlainSkelBuilder.ubytesToCharArray(byte[]):49->rgb(210,64,64)
BCodeSyncAndTry$SyncAndTryBuilder.<init>(BCodeSyncAndTry, CompilationUnits$CompilationUnit):29->rgb(237,104,104)
BCodeSyncAndTry$SyncAndTryBuilder.genSynchronized(Trees$Apply, BTypes$BType):56->rgb(253,128,128)
BTypes$BOOL$.descriptor():328->rgb(248,121,121)
BTypes$BOOL$.toString():328->rgb(252,126,126)
BTypes$BType.$anonfun$buildString$1(StringBuilder, BTypes$BType):72->rgb(216,74,74)
BTypes$BType.$anonfun$conformsTo$1(BTypes$BType, BTypes$BType):134->rgb(232,97,97)
BTypes$BType.$anonfun$conformsTo$1(BTypes$BType, BTypes$BType):145->rgb(219,78,78)
BTypes$BType.$anonfun$conformsTo$1(BTypes$BType, BTypes$BType):148->rgb(213,68,68)
BTypes$BType.$anonfun$conformsTo$1(BTypes$BType, BTypes$BType):158->rgb(229,93,93)
BTypes$BType.$anonfun$conformsTo$1(BTypes$BType, BTypes$BType):161->rgb(206,59,59)
BTypes$BType.buildString$(BTypes$BType, StringBuilder):58->rgb(238,105,105)
BTypes$BType.buildString(StringBuilder):61->rgb(215,72,72)
BTypes$BType.buildString(StringBuilder):65->rgb(201,52,52)
BTypes$BType.buildString(StringBuilder):68->rgb(233,98,98)
BTypes$BType.buildString(StringBuilder):72->rgb(254,129,129)
BTypes$BType.conformsTo$(BTypes$BType, BTypes$BType):121->rgb(244,115,115)
BTypes$BType.conformsTo(BTypes$BType):121->rgb(246,117,117)
BTypes$BType.descriptor$(BTypes$BType):84->rgb(239,108,108)
BTypes$BType.descriptor():84->rgb(218,77,77)
BTypes$BType.isBoxed$(BTypes$BType):106->rgb(220,79,79)
BTypes$BType.isBoxed():106->rgb(239,108,108)
BTypes$BType.isNothingType$(BTypes$BType):104->rgb(231,95,95)
BTypes$BType.isNothingType():104->rgb(241,109,109)
BTypes$BType.toASMType$(BTypes$BType):241->rgb(212,67,67)
BTypes$BType.toASMType():253->rgb(230,94,94)
BTypes$BType.toString$(BTypes$BType):52->rgb(219,78,78)
BTypes$BType.toString():53->rgb(223,84,84)
BTypes$BType.toString():54->rgb(221,81,81)
BTypes$BType.toString():55->rgb(233,99,99)
BTypes$BYTE$.conformsTo(BTypes$BType):330->rgb(222,82,82)
BTypes$ClassBType.$anonfun$checkInfoConsistency$10(BTypes$ClassBType):658->rgb(208,62,62)
BTypes$ClassBType.$anonfun$checkInfoConsistency$7$adapted(List):657->rgb(201,52,52)
BTypes$ClassBType.$anonfun$checkInfoConsistency$7(List):658->rgb(200,50,50)
BTypes$ClassBType.$anonfun$checkInfoConsistency$9(BTypes$ClassBType):658->rgb(229,93,93)
BTypes$ClassBType.$anonfun$enclosingNestedClassesChain$1(BTypes$ClassBType, boolean):687->rgb(218,76,76)
BTypes$ClassBType.$anonfun$isNestedClass$1(BTypes$ClassInfo):682->rgb(250,122,122)
BTypes$ClassBType.conformsTo(BTypes$BType):611->rgb(207,61,61)
BTypes$ClassBType.enclosingNestedClassesChain():685->rgb(237,105,105)
BTypes$ClassBType.equals(Object):611->rgb(222,82,82)
BTypes$ClassBType.isBoxed():611->rgb(221,81,81)
BTypes$ClassBType.isInterface():662->rgb(248,120,120)
BTypes$ClassBType.isNestedClass():682->rgb(217,74,74)
BTypes$ClassBType.isNothingType():611->rgb(250,123,123)
BTypes$ClassBType.isSubtypeOf(BTypes$ClassBType):717->rgb(222,82,82)
BTypes$ClassBType.isSubtypeOf(BTypes$ClassBType):718->rgb(208,62,62)
BTypes$ClassBType.isSubtypeOf(BTypes$ClassBType):724->rgb(218,77,77)
BTypes$ClassBType.isWideType():611->rgb(231,95,95)
BTypes$ClassBType.scala$tools$nsc$backend$jvm$BTypes$BType$$$outer():51->rgb(229,93,93)
BTypes$INT$.buildString(StringBuilder):332->rgb(253,128,128)
BTypes$Lazy.$anonfun$force$1(BTypes$Lazy):937->rgb(227,90,90)
BTypes$Lazy.$anonfun$initFunction$1(BTypes$Lazy, Function0):914->rgb(204,56,56)
BTypes$Lazy.$anonfun$onForce$2(BTypes$Lazy, Function1, Function0):926->rgb(229,93,93)
BTypes$Lazy.$anonfun$onForce$2(BTypes$Lazy, Function1, Function0):927->rgb(245,115,115)
BTypes$Lazy.force():935->rgb(234,100,100)
BTypes$LazyVar.$anonfun$get$1(BTypes$LazyVar):971->rgb(215,72,72)
BTypes$LazyVar.get():970->rgb(202,54,54)
BTypes$MethodBType.buildString(StringBuilder):873->rgb(226,88,88)
BTypes$MethodBType.descriptor():873->rgb(236,102,102)
BTypes$MethodBType.toASMType():873->rgb(244,114,114)
BTypes$MethodBType.toString():873->rgb(225,87,87)
BTypes.SHORT():331->rgb(204,56,56)
BTypes.cachedClassBType(String):40->rgb(239,108,108)
BTypesFromClassfile.classBTypeFromParsedClassfile(String):49->rgb(208,62,62)
BTypesFromSymbols.$anonfun$buildInlineInfoFromClassSymbol$2$adapted(BTypesFromSymbols, Symbols$Symbol):556->rgb(237,104,104)
BTypesFromSymbols.$anonfun$buildInlineInfoFromClassSymbol$2(BTypesFromSymbols, Symbols$Symbol):556->rgb(251,124,124)
BTypesFromSymbols.$anonfun$buildInlineInfoFromClassSymbol$6(BTypesFromSymbols, Symbols$Symbol, ObjectRef, Symbols$Symbol):577->rgb(224,85,85)
BTypesFromSymbols.$anonfun$buildInlineInfoFromClassSymbol$6(BTypesFromSymbols, Symbols$Symbol, ObjectRef, Symbols$Symbol):585->rgb(234,100,100)
BTypesFromSymbols.$anonfun$buildInlineInfoFromClassSymbol$6(BTypesFromSymbols, Symbols$Symbol, ObjectRef, Symbols$Symbol):592->rgb(253,127,127)
BTypesFromSymbols.$anonfun$methodBTypeFromMethodType$1(BTypesFromSymbols, Types$Type):130->rgb(201,52,52)
BTypesFromSymbols.$anonfun$mirrorClassClassBType$3(BTypesFromSymbols, Symbols$Symbol):626->rgb(224,86,86)
BTypesFromSymbols.$anonfun$mirrorClassClassBType$4(BTypesFromSymbols, Symbols$Symbol):626->rgb(222,82,82)
BTypesFromSymbols.$anonfun$setClassInfo$17(BTypesFromSymbols, Symbols$Symbol, Phase, LazyRef):425->rgb(244,115,115)
BTypesFromSymbols.$anonfun$setClassInfo$18(BTypesFromSymbols, Symbols$Symbol, LazyRef):425->rgb(231,95,95)
BTypesFromSymbols.$anonfun$setClassInfo$20(BTypesFromSymbols, Symbols$Symbol, Phase):430->rgb(224,85,85)
BTypesFromSymbols.$anonfun$setClassInfo$21(BTypesFromSymbols, Symbols$Symbol):430->rgb(239,107,107)
BTypesFromSymbols.$anonfun$setClassInfo$4(BTypesFromSymbols, Symbols$Symbol):330->rgb(205,58,58)
BTypesFromSymbols.$anonfun$setClassInfo$5(Symbols$Symbol):342->rgb(217,75,75)
BTypesFromSymbols.$anonfun$typeToBType$1(BTypesFromSymbols, Symbols$Symbol):160->rgb(201,51,51)
BTypesFromSymbols.buildInlineInfo(Symbols$Symbol, String):514->rgb(252,126,126)
BTypesFromSymbols.buildInlineInfoFromClassSymbol(Symbols$Symbol):534->rgb(215,72,72)
BTypesFromSymbols.buildInlineInfoFromClassSymbol(Symbols$Symbol):610->rgb(230,94,94)
BTypesFromSymbols.buildNestedInfo(Symbols$Symbol):455->rgb(230,94,94)
BTypesFromSymbols.classBTypeFromSymbol(Symbols$Symbol):105->rgb(227,89,89)
BTypesFromSymbols.classBTypeFromSymbol(Symbols$Symbol):109->rgb(247,118,118)
BTypesFromSymbols.classBTypeFromSymbol(Symbols$Symbol):82->rgb(230,94,94)
BTypesFromSymbols.classBTypeFromSymbol(Symbols$Symbol):86->rgb(246,117,117)
BTypesFromSymbols.classBTypeFromSymbol(Symbols$Symbol):95->rgb(202,54,54)
BTypesFromSymbols.classBTypeFromSymbol(Symbols$Symbol):96->rgb(214,71,71)
BTypesFromSymbols.classBTypeFromSymbol(Symbols$Symbol):98->rgb(230,94,94)
BTypesFromSymbols.classBTypeFromSymbol(Symbols$Symbol):99->rgb(230,93,93)
BTypesFromSymbols.global():19->rgb(212,67,67)
BTypesFromSymbols.implementedInterfaces(Symbols$Symbol):230->rgb(214,70,70)
BTypesFromSymbols.initialize():34->rgb(209,64,64)
BTypesFromSymbols.isRemote(Symbols$Symbol):672->rgb(229,92,92)
BTypesFromSymbols.isTopLevelModuleClass(Symbols$Symbol):659->rgb(206,59,59)
BTypesFromSymbols.javaFlags(Symbols$Symbol):723->rgb(222,83,83)
BTypesFromSymbols.javaFlags(Symbols$Symbol):737->rgb(227,89,89)
BTypesFromSymbols.javaFlags(Symbols$Symbol):740->rgb(206,60,60)
BTypesFromSymbols.javaFlags(Symbols$Symbol):744->rgb(240,108,108)
BTypesFromSymbols.keepMember$1(Symbols$Symbol):555->rgb(213,69,69)
BTypesFromSymbols.memberClassesForInnerClassTable(Symbols$Symbol):262->rgb(216,73,73)
BTypesFromSymbols.methodBTypeFromMethodType(Types$Type, boolean):129->rgb(237,104,104)
BTypesFromSymbols.methodBTypeFromMethodType(Types$Type, boolean):130->rgb(201,52,52)
BTypesFromSymbols.methodBTypeFromSymbol(Symbols$Symbol):120->rgb(236,103,103)
BTypesFromSymbols.nestedClassSymbols$1(Symbols$Symbol, LazyRef):341->rgb(253,127,127)
BTypesFromSymbols.nestedClassSymbols$lzycompute$1(Symbols$Symbol, LazyRef):342->rgb(240,109,109)
BTypesFromSymbols.nestedClassSymbolsNoJavaModuleClasses$1(Symbols$Symbol, LazyRef):413->rgb(232,97,97)
BTypesFromSymbols.primitiveOrClassToBType$1(Symbols$Symbol):160->rgb(232,96,96)
BTypesFromSymbols.setClassInfo(Symbols$Symbol, BTypes$ClassBType):328->rgb(214,71,71)
BTypesFromSymbols.setClassInfo(Symbols$Symbol, BTypes$ClassBType):330->rgb(239,107,107)
BTypesFromSymbols.setClassInfo(Symbols$Symbol, BTypes$ClassBType):433->rgb(211,66,66)
BTypesFromSymbols.typeToBType(Types$Type):172->rgb(230,93,93)
BTypesFromSymbols.typeToBType(Types$Type):173->rgb(229,92,92)
BTypesFromSymbols.typeToBType(Types$Type):175->rgb(236,102,102)
BackendUtils$AsmAnalyzer.<init>(BackendUtils, MethodNode, String, Analyzer):88->rgb(227,89,89)
BackendUtils$AsmAnalyzer.<init>(BackendUtils, MethodNode, String, Analyzer):90->rgb(207,61,61)
BackendUtils$Collector.declaredNestedClasses(String):331->rgb(253,128,128)
BackendUtils$Collector.getClassIfNested(String):334->rgb(253,127,127)
BackendUtils$GenericSignatureVisitor$Parser$$anon$1.<init>(BackendUtils$GenericSignatureVisitor$Parser):699->rgb(221,81,81)
BackendUtils$GenericSignatureVisitor$Parser.<init>(BackendUtils$GenericSignatureVisitor, String):699->rgb(226,88,88)
BackendUtils$GenericSignatureVisitor$Parser.appendUntil(StringBuilder, BackendUtils$GenericSignatureVisitor$Parser$CharBooleanFunction):732->rgb(227,90,90)
BackendUtils$GenericSignatureVisitor$Parser.appendUntil(StringBuilder, BackendUtils$GenericSignatureVisitor$Parser$CharBooleanFunction):733->rgb(222,82,82)
BackendUtils$GenericSignatureVisitor$Parser.methodSignature():799->rgb(251,125,125)
BackendUtils$GenericSignatureVisitor$Parser.methodSignature():804->rgb(218,76,76)
BackendUtils$GenericSignatureVisitor$Parser.methodSignature():809->rgb(242,111,111)
BackendUtils$GenericSignatureVisitor$Parser.referenceTypeSignature():758->rgb(216,73,73)
BackendUtils$GenericSignatureVisitor$Parser.referenceTypeSignature():759->rgb(254,128,128)
BackendUtils$GenericSignatureVisitor$Parser.referenceTypeSignature():760->rgb(252,126,126)
BackendUtils$GenericSignatureVisitor$Parser.safely(Function0):702->rgb(241,109,109)
BackendUtils$GenericSignatureVisitor$Parser.typeArguments():749->rgb(222,83,83)
BackendUtils$GenericSignatureVisitor$Parser.typeParameters():787->rgb(218,76,76)
BackendUtils$GenericSignatureVisitor.$anonfun$visitMethodSignature$1(BackendUtils$GenericSignatureVisitor$Parser):684->rgb(243,113,113)
BackendUtils$GenericSignatureVisitor.visitClassSignature(String):678->rgb(208,62,62)
BackendUtils$GenericSignatureVisitor.visitMethodSignature(String):683->rgb(221,81,81)
BackendUtils$GenericSignatureVisitor.visitMethodSignature(String):684->rgb(222,82,82)
BackendUtils$NestedClassesCollector.$anonfun$visit$2$adapted(BackendUtils$NestedClassesCollector, FieldNode):572->rgb(201,51,51)
BackendUtils$NestedClassesCollector.$anonfun$visit$2(BackendUtils$NestedClassesCollector, FieldNode):573->rgb(227,89,89)
BackendUtils$NestedClassesCollector.$anonfun$visit$3$adapted(BackendUtils$NestedClassesCollector, MethodNode):581->rgb(209,64,64)
BackendUtils$NestedClassesCollector.$anonfun$visit$3(BackendUtils$NestedClassesCollector, MethodNode):582->rgb(241,110,110)
BackendUtils$NestedClassesCollector.$anonfun$visit$3(BackendUtils$NestedClassesCollector, MethodNode):590->rgb(228,91,91)
BackendUtils$NestedClassesCollector.$anonfun$visit$3(BackendUtils$NestedClassesCollector, MethodNode):597->rgb(241,110,110)
BackendUtils$NestedClassesCollector.$anonfun$visit$3(BackendUtils$NestedClassesCollector, MethodNode):600->rgb(229,93,93)
BackendUtils$NestedClassesCollector.$anonfun$visit$3(BackendUtils$NestedClassesCollector, MethodNode):601->rgb(220,79,79)
BackendUtils$NestedClassesCollector.$anonfun$visit$3(BackendUtils$NestedClassesCollector, MethodNode):607->rgb(200,50,50)
BackendUtils$NestedClassesCollector.$anonfun$visit$6(BackendUtils$NestedClassesCollector, Object):601->rgb(238,106,106)
BackendUtils$NestedClassesCollector.visit(ClassNode):559->rgb(207,61,61)
BackendUtils$NestedClassesCollector.visit(ClassNode):570->rgb(220,79,79)
BackendUtils$NestedClassesCollector.visit(ClassNode):572->rgb(240,108,108)
BackendUtils$NestedClassesCollector.visit(ClassNode):581->rgb(201,52,52)
BackendUtils$NestedClassesCollector.visitAnnotations(List):663->rgb(225,87,87)
BackendUtils$NestedClassesCollector.visitConstant(Object):650->rgb(214,71,71)
BackendUtils$NestedClassesCollector.visitDescriptor(String):633->rgb(208,62,62)
BackendUtils$NestedClassesCollector.visitDescriptor(String):634->rgb(225,87,87)
BackendUtils$NestedClassesCollector.visitDescriptor(String):641->rgb(228,90,90)
BackendUtils$NestedClassesCollector.visitInternalName(String):612->rgb(253,127,127)
BackendUtils.$anonfun$addInnerClasses$1(BTypes$ClassBType):364->rgb(237,104,104)
BackendUtils.addInnerClasses(ClassVisitor, List):364->rgb(216,74,74)
BackendUtils.addLambdaDeserialize(ClassNode, Iterable):164->rgb(254,128,128)
BackendUtils.addLambdaDeserialize(ClassNode, Iterable):181->rgb(207,60,60)
BackendUtils.collectNestedClasses(ClassNode):347->rgb(248,119,119)
BackendUtils.computeMaxLocalsMaxStack(MethodNode):429->rgb(250,123,123)
BackendUtils.computeMaxLocalsMaxStack(MethodNode):432->rgb(206,60,60)
BackendUtils.computeMaxLocalsMaxStack(MethodNode):436->rgb(201,51,51)
BackendUtils.computeMaxLocalsMaxStack(MethodNode):473->rgb(211,67,67)
BackendUtils.computeMaxLocalsMaxStack(MethodNode):487->rgb(207,60,60)
BackendUtils.computeMaxLocalsMaxStack(MethodNode):504->rgb(203,54,54)
BackendUtils.computeMaxLocalsMaxStack(MethodNode):526->rgb(231,95,95)
BackendUtils.computeMaxLocalsMaxStack(MethodNode):544->rgb(206,58,58)
BackendUtils.emitLambdaDeserializeIndy$1(Seq, String, MethodVisitor):160->rgb(238,106,106)
BackendUtils.enq$1(int, ObjectRef, IntRef):442->rgb(233,98,98)
BackendUtils.enqInsn$1(AbstractInsnNode, int, MethodNode, int, ObjectRef, IntRef, int[]):460->rgb(209,63,63)
BackendUtils.enqInsnIndex$1(int, int, int, ObjectRef, IntRef, int[]):466->rgb(224,86,86)
BaseRunner.doSingle(BenchmarkParams, ActionMode, IterationResultAcceptor):139->rgb(227,89,89)
BaseRunner.runBenchmark(BenchmarkParams, BenchmarkHandler, IterationResultAcceptor):282->rgb(239,107,107)
BaseRunner.runBenchmark(BenchmarkParams, IterationResultAcceptor):234->rgb(232,96,96)
BaseRunner.runBenchmarksForked(ActionPlan, IterationResultAcceptor):76->rgb(236,102,102)
BaseTypeSeqs$BaseTypeSeq.$anonfun$maxDepthOfElems$1(BaseTypeSeqs$BaseTypeSeq, IntRef, int):159->rgb(213,70,70)
BaseTypeSeqs$BaseTypeSeq.<init>(SymbolTable, List, Types$Type[]):174->rgb(213,69,69)
BaseTypeSeqs$BaseTypeSeq.<init>(SymbolTable, List, Types$Type[]):45->rgb(253,127,127)
BaseTypeSeqs$BaseTypeSeq.<init>(SymbolTable, List, Types$Type[]):46->rgb(205,57,57)
BaseTypeSeqs$BaseTypeSeq.apply(int):68->rgb(242,111,111)
BaseTypeSeqs$BaseTypeSeq.apply(int):97->rgb(253,127,127)
BaseTypeSeqs$BaseTypeSeq.apply(int):98->rgb(204,56,56)
BaseTypeSeqs$BaseTypeSeq.baseTypeIndex(Symbols$Symbol):118->rgb(201,51,51)
BaseTypeSeqs$BaseTypeSeq.computeLazyType$1(Types$RefinedType, int):81->rgb(248,119,119)
BaseTypeSeqs$BaseTypeSeq.computeLazyType$1(Types$RefinedType, int):84->rgb(240,108,108)
BaseTypeSeqs$BaseTypeSeq.copy(Types$Type, int):128->rgb(240,109,109)
BaseTypeSeqs$BaseTypeSeq.exists(Function1):153->rgb(242,111,111)
BaseTypeSeqs$BaseTypeSeq.length():58->rgb(202,53,53)
BaseTypeSeqs$BaseTypeSeq.map(Function1):145->rgb(214,71,71)
BaseTypeSeqs$BaseTypeSeq.map(Function1):148->rgb(221,81,81)
BaseTypeSeqs$BaseTypeSeq.maxDepth$lzycompute():155->rgb(211,66,66)
BaseTypeSeqs$BaseTypeSeq.maxDepth():155->rgb(217,75,75)
BaseTypeSeqs$BaseTypeSeq.maxDepthOfElems():159->rgb(241,109,109)
BaseTypeSeqs$BaseTypeSeq.scala$reflect$internal$BaseTypeSeqs$$elems():43->rgb(233,98,98)
BaseTypeSeqs$BaseTypeSeq.toList():122->rgb(221,81,81)
BaseTypeSeqs$BaseTypeSeq.updateHead(Types$Type):135->rgb(248,121,121)
BaseTypeSeqs.$anonfun$compoundBaseTypeSeq$1(BaseTypeSeqs, BaseTypeSeqs$BaseTypeSeq[], int[], IntRef, Types$Type):193->rgb(233,98,98)
BaseTypeSeqs.$anonfun$compoundBaseTypeSeq$1(BaseTypeSeqs, BaseTypeSeqs$BaseTypeSeq[], int[], IntRef, Types$Type):196->rgb(233,98,98)
BaseTypeSeqs.$anonfun$compoundBaseTypeSeq$2(BaseTypeSeqs, ObjectRef, Types$Type):235->rgb(251,125,125)
BaseTypeSeqs.alreadyInMinTypes$1(Types$Type, ObjectRef):226->rgb(214,71,71)
BaseTypeSeqs.compoundBaseTypeSeq$(BaseTypeSeqs, Types$Type):180->rgb(218,77,77)
BaseTypeSeqs.compoundBaseTypeSeq(Types$Type):185->rgb(238,106,106)
BaseTypeSeqs.compoundBaseTypeSeq(Types$Type):192->rgb(227,90,90)
BaseTypeSeqs.compoundBaseTypeSeq(Types$Type):211->rgb(202,54,54)
BaseTypeSeqs.compoundBaseTypeSeq(Types$Type):212->rgb(227,89,89)
BaseTypeSeqs.compoundBaseTypeSeq(Types$Type):214->rgb(217,75,75)
BaseTypeSeqs.compoundBaseTypeSeq(Types$Type):215->rgb(244,115,115)
BaseTypeSeqs.compoundBaseTypeSeq(Types$Type):216->rgb(209,64,64)
BaseTypeSeqs.compoundBaseTypeSeq(Types$Type):220->rgb(251,125,125)
BaseTypeSeqs.compoundBaseTypeSeq(Types$Type):234->rgb(219,78,78)
BaseTypeSeqs.compoundBaseTypeSeq(Types$Type):237->rgb(251,124,124)
BaseTypeSeqs.compoundBaseTypeSeq(Types$Type):243->rgb(231,95,95)
BaseTypeSeqs.compoundBaseTypeSeq(Types$Type):248->rgb(221,81,81)
BaseTypeSeqs.compoundBaseTypeSeq(Types$Type):250->rgb(211,66,66)
BaseTypeSeqs.loop$1(List, Types$Type):224->rgb(209,63,63)
BaseTypeSeqs.newBaseTypeSeq$(BaseTypeSeqs, List, Types$Type[]):33->rgb(200,50,50)
BaseTypeSeqs.newBaseTypeSeq(List, Types$Type[]):34->rgb(252,126,126)
BaseTypeSeqs.nextTypeSymbol$1(int, BaseTypeSeqs$BaseTypeSeq[], int[]):203->rgb(205,58,58)
BasicInterpreter.binaryOperation(AbstractInsnNode, Value, Value):52->rgb(201,51,51)
BasicInterpreter.newOperation(AbstractInsnNode):153->rgb(225,87,87)
BasicInterpreter.newOperation(AbstractInsnNode):52->rgb(229,93,93)
BasicInterpreter.unaryOperation(AbstractInsnNode, BasicValue):168->rgb(200,51,51)
BasicInterpreter.unaryOperation(AbstractInsnNode, Value):52->rgb(242,112,112)
BatchSourceFile.calculateLineIndices$1(char[]):159->rgb(228,91,91)
BatchSourceFile.lineIndices$lzycompute():165->rgb(252,125,125)
BatchSourceFile.lineIndices():157->rgb(202,52,52)
BatchSourceFile.offsetToLine(int):179->rgb(224,85,85)
BatchSourceFile.offsetToLine(int):186->rgb(245,116,116)
BenchmarkDriver$MainClass.newCompiler():26->rgb(237,104,104)
BenchmarkDriver$MainClass.processSettingsHook():35->rgb(228,91,91)
BenchmarkDriver.$anonfun$findScalaJars$1$adapted(String):13->rgb(229,92,92)
BenchmarkDriver.$anonfun$findScalaJars$1(String):13->rgb(254,129,129)
BenchmarkDriver.compileImpl$(BenchmarkDriver):44->rgb(252,127,127)
BenchmarkDriver.compileImpl():60->rgb(235,101,101)
BenchmarkDriver.scala$tools$benchmark$BenchmarkDriver$$findScalaJars():13->rgb(236,102,102)
BenchmarkHandler$BenchmarkTask.call():437->rgb(223,84,84)
BenchmarkHandler$BenchmarkTask.call():453->rgb(241,110,110)
BenchmarkHandler.runIteration(BenchmarkParams, IterationParams, boolean):387->rgb(200,50,50)
BitSet$BitSet1.word(int):111->rgb(225,86,86)
BitSet.$minus$eq(Object):40->rgb(216,73,73)
BitSet.$minus$eq(int):111->rgb(200,50,50)
BitSet.contains(int):28->rgb(248,120,120)
BitSet.contains(int):40->rgb(222,82,82)
BitSetLike.contains$(BitSetLike, int):195->rgb(208,62,62)
BitSetLike.contains(int):196->rgb(224,85,85)
Boolean.booleanValue():132->rgb(226,88,88)
Boolean.valueOf(boolean):150->rgb(213,70,70)
BooleanContainer.isEnabledNow():16->rgb(231,95,95)
BooleanRef.<init>(boolean):18->rgb(224,85,85)
BooleanRef.create(boolean):21->rgb(208,62,62)
BoundMethodHandle.bindArgumentL(int, Object):99->rgb(205,58,58)
BoxesRunTime.boxToBoolean(boolean):49->rgb(232,97,97)
BoxesRunTime.boxToCharacter(char):53->rgb(252,126,126)
BoxesRunTime.boxToLong(long):69->rgb(239,106,106)
BoxesRunTime.equals(Object, Object):120->rgb(224,86,86)
BoxesRunTime.equals(Object, Object):121->rgb(218,76,76)
BoxesRunTime.equals2(Object, Object):128->rgb(206,58,58)
BoxesRunTime.equals2(Object, Object):129->rgb(203,55,55)
BoxesRunTime.equals2(Object, Object):130->rgb(224,86,86)
BoxesRunTime.equals2(Object, Object):135->rgb(240,108,108)
BoxesRunTime.equalsNumNum(Number, Number):156->rgb(200,51,51)
BoxesRunTime.equalsNumObject(Number, Object):140->rgb(253,128,128)
BoxesRunTime.equalsNumObject(Number, Object):142->rgb(213,69,69)
BoxesRunTime.equalsNumObject(Number, Object):143->rgb(246,117,117)
BoxesRunTime.unboxToBoolean(Object):85->rgb(221,81,81)
BoxesRunTime.unboxToLong(Object):105->rgb(251,125,125)
Buffer.<init>(int, int, int, int):200->rgb(211,66,66)
BufferedWriter.<init>(Writer):88->rgb(239,107,107)
BufferedWriter.<init>(Writer, int):105->rgb(233,98,98)
Builder.sizeHint$(Builder, TraversableLike):76->rgb(252,125,125)
Builder.sizeHint(TraversableLike):77->rgb(204,57,57)
ByteBuffer.wrap(byte[], int, int):373->rgb(244,114,114)
ByteCodecs$.decode(byte[]):211->rgb(228,91,91)
ByteCodecs$.regenerateZero(byte[]):44->rgb(250,123,123)
ByteVector.<init>():55->rgb(243,113,113)
ByteVector.enlarge(int):335->rgb(215,72,72)
ByteVector.putShort(int):123->rgb(221,81,81)
ByteVector.putUTF8(String):217->rgb(204,56,56)
ByteVector.putUTF8(String):229->rgb(212,67,67)
BytecodeUtils$.$anonfun$labelReferences$1$adapted(AnyRefMap, AbstractInsnNode):251->rgb(227,89,89)
BytecodeUtils$.$anonfun$labelReferences$1(AnyRefMap, AbstractInsnNode):252->rgb(212,68,68)
BytecodeUtils$.$anonfun$labelReferences$1(AnyRefMap, AbstractInsnNode):253->rgb(241,110,110)
BytecodeUtils$.$anonfun$labelReferences$4$adapted(AnyRefMap, LocalVariableNode):259->rgb(219,77,77)
BytecodeUtils$.$anonfun$labelReferences$4(AnyRefMap, LocalVariableNode):259->rgb(237,105,105)
BytecodeUtils$.add$1(LabelNode, Object, AnyRefMap):249->rgb(203,55,55)
BytecodeUtils$.labelReferences(MethodNode):251->rgb(201,52,52)
BytecodeUtils$.labelReferences(MethodNode):259->rgb(223,84,84)
BytecodeUtils$.labelReferences(MethodNode):265->rgb(221,81,81)
BytecodeUtils$.parametersSize(MethodNode):244->rgb(229,93,93)
BytecodeUtils$.substituteLabel(Object, LabelNode, LabelNode):281->rgb(214,70,70)
CNode.array():449->rgb(248,120,120)
Channels$1.close():178->rgb(221,81,81)
CharBuffer.<init>(int, int, int, int, char[], int):281->rgb(204,57,57)
CharBuffer.allocate(int):335->rgb(203,55,55)
Character.isUnicodeIdentifierPart(char):6184->rgb(229,93,93)
Character.valueOf(char):4571->rgb(254,128,128)
Charset.decode(ByteBuffer):807->rgb(239,107,107)
Charset.encode(CharBuffer):840->rgb(234,100,100)
CharsetDecoder.decode(ByteBuffer):795->rgb(207,60,60)
Checkable$CheckabilityChecker$.areIrreconcilableAsParents(Symbols$Symbol, Symbols$Symbol):235->rgb(214,71,71)
Checkable$CheckabilityChecker$.areUnrelatedClasses(Symbols$Symbol, Symbols$Symbol):211->rgb(252,126,126)
Checkable$CheckabilityChecker$.isNeverSubClass(Symbols$Symbol, Symbols$Symbol):247->rgb(248,120,120)
Checkable$CheckabilityChecker$.isNeverSubType(Types$Type, Types$Type):267->rgb(228,91,91)
Checkable$CheckabilityChecker.<init>(Analyzer, Types$Type, Types$Type):169->rgb(224,85,85)
Checkable$CheckabilityChecker.<init>(Analyzer, Types$Type, Types$Type):170->rgb(229,93,93)
Checkable$CheckabilityChecker.P1():154->rgb(220,79,79)
Checkable$CheckabilityChecker.P2():155->rgb(220,79,79)
Checkable$InferCheckable.isCheckable$(Checkable$InferCheckable, Types$Type):282->rgb(254,128,128)
Checkable$InferCheckable.isCheckable(Types$Type):287->rgb(212,68,68)
Checkable.scala$tools$nsc$typechecker$Checkable$$scrutConformsToPatternType(Types$Type, Types$Type):138->rgb(202,53,53)
ClassFileEntryImpl.name():30->rgb(234,99,99)
ClassNode.accept(ClassVisitor):378->rgb(202,53,53)
ClassNode.accept(ClassVisitor):412->rgb(242,112,112)
ClassNode.visitMethod(int, String, String, String, String[]):311->rgb(200,50,50)
ClassTag$.apply(Class):127->rgb(235,102,102)
ClassTag$.apply(Class):139->rgb(244,114,114)
ClassWriter.addType(String):1614->rgb(236,103,103)
ClassWriter.get(Item):1748->rgb(211,66,66)
ClassWriter.newConst(Object):1075->rgb(216,73,73)
ClassWriter.newConstItem(Object):1049->rgb(215,72,72)
ClassWriter.newInvokeDynamicItem(String, String, Handle, Object[]):1311->rgb(222,83,83)
ClassWriter.newInvokeDynamicItem(String, String, Handle, Object[]):1351->rgb(212,67,67)
ClassWriter.newMethodItem(String, String, String, boolean):1439->rgb(252,126,126)
ClassWriter.newMethodItem(String, String, String, boolean):1442->rgb(224,85,85)
ClassWriter.newNameType(String, String):1580->rgb(210,65,65)
ClassWriter.newNameTypeItem(String, String):1597->rgb(229,92,92)
ClassWriter.newNameTypeItem(String, String):1599->rgb(201,51,51)
ClassWriter.newUTF8(String):1089->rgb(232,96,96)
ClassWriter.newUTF8(String):1090->rgb(215,72,72)
ClassWriter.newUTF8(String):1092->rgb(253,127,127)
ClassWriter.newUTF8(String):1096->rgb(224,85,85)
ClassWriter.put(Item):1774->rgb(217,75,75)
ClassWriter.put122(int, int, int):1812->rgb(200,51,51)
ClassWriter.toByteArray():827->rgb(246,117,117)
ClassWriter.toByteArray():898->rgb(204,57,57)
ClassWriter.toByteArray():922->rgb(216,73,73)
ClassWriter.toByteArray():978->rgb(249,122,122)
ClassWriter.visitMethod(int, String, String, String, String[]):793->rgb(247,118,118)
ClassfileConstants$FlagTranslation.methodFlags(int):375->rgb(249,121,121)
ClassfileConstants$FlagTranslation.translateFlag0$1(int, boolean, boolean):353->rgb(238,106,106)
ClassfileConstants$FlagTranslation.translateFlags(int, long, boolean):360->rgb(246,116,116)
ClassfileParser$ConstantPool.<init>(ClassfileParser):173->rgb(236,103,103)
ClassfileParser$ConstantPool.<init>(ClassfileParser):181->rgb(249,121,121)
ClassfileParser$ConstantPool.fromMUTF8(byte[], int, int):219->rgb(215,72,72)
ClassfileParser$ConstantPool.getBytes(int):339->rgb(254,129,129)
ClassfileParser$ConstantPool.getClassName(int):250->rgb(235,102,102)
ClassfileParser$ConstantPool.getClassSymbol(int):233->rgb(220,79,79)
ClassfileParser$ConstantPool.getClassSymbol(int):237->rgb(229,92,92)
ClassfileParser$ConstantPool.getClassSymbol(int):239->rgb(233,98,98)
ClassfileParser$ConstantPool.getExternalName(int):227->rgb(202,54,54)
ClassfileParser$ConstantPool.getName(int):214->rgb(245,115,115)
ClassfileParser$ConstantPool.getSubArray(byte[]):324->rgb(205,57,57)
ClassfileParser$ConstantPool.getSuperClass(int):298->rgb(216,73,73)
ClassfileParser$ConstantPool.getType(Symbols$Symbol, int):297->rgb(225,87,87)
ClassfileParser$ConstantPool.getType(int):296->rgb(246,117,117)
ClassfileParser$InnerClassEntry.enclClass():1207->rgb(221,80,80)
ClassfileParser$InnerClassEntry.enclModule():1208->rgb(200,50,50)
ClassfileParser$InnerClassEntry.enclosing():1202->rgb(248,121,121)
ClassfileParser$InnerClassEntry.externalName():1197->rgb(217,75,75)
ClassfileParser$innerClasses$.add(ClassfileParser$InnerClassEntry):1224->rgb(252,125,125)
ClassfileParser$innerClasses$.innerSymbol(ClassfileParser$InnerClassEntry):1236->rgb(227,90,90)
ClassfileParser$innerClasses$.innerSymbol(ClassfileParser$InnerClassEntry):1239->rgb(254,129,129)
ClassfileParser$innerClasses$.innerSymbol(Names$Name):1230->rgb(253,127,127)
ClassfileParser.$anonfun$addJavaFlagsAnnotations$1(Symbols$Symbol, AnnotationInfos$AnnotationInfo):1099->rgb(228,92,92)
ClassfileParser.$anonfun$enterOwnInnerClasses$1$adapted(ClassfileParser, ClassfileParser$InnerClassEntry):1149->rgb(210,65,65)
ClassfileParser.$anonfun$enterOwnInnerClasses$1(ClassfileParser, ClassfileParser$InnerClassEntry):1153->rgb(219,78,78)
ClassfileParser.$anonfun$parse$1(ClassfileParser, AbstractFile, Symbols$ClassSymbol, Symbols$ModuleSymbol):147->rgb(212,68,68)
ClassfileParser.$anonfun$parse$1(ClassfileParser, AbstractFile, Symbols$ClassSymbol, Symbols$ModuleSymbol):153->rgb(200,51,51)
ClassfileParser.$anonfun$parse$1(ClassfileParser, AbstractFile, Symbols$ClassSymbol, Symbols$ModuleSymbol):154->rgb(247,119,119)
ClassfileParser.$anonfun$parseAttributes$14(ClassfileParser, boolean, Types$Type, ListBuffer, BooleanRef, int):1026->rgb(207,61,61)
ClassfileParser.$anonfun$parseAttributes$15(ClassfileParser, Symbols$Symbol, int):1066->rgb(212,68,68)
ClassfileParser.$anonfun$parseAttributes$15(ClassfileParser, Symbols$Symbol, int):1069->rgb(230,93,93)
ClassfileParser.$anonfun$parseAttributes$16(ClassfileParser, Symbols$Symbol, boolean, ObjectRef, int):1079->rgb(242,111,111)
ClassfileParser.$anonfun$parseAttributes$16(ClassfileParser, Symbols$Symbol, boolean, ObjectRef, int):1080->rgb(228,90,90)
ClassfileParser.$anonfun$parseAttributes$17(ClassfileParser, Symbols$Symbol, Types$Type, boolean, int):1092->rgb(225,86,86)
ClassfileParser.$anonfun$parseClass$1(ClassfileParser, int):453->rgb(206,59,59)
ClassfileParser.$anonfun$parseClass$1(ClassfileParser, int):455->rgb(215,72,72)
ClassfileParser.$anonfun$parseClass$2(ClassfileParser, int):455->rgb(235,102,102)
ClassfileParser.$anonfun$parseClass$3(ClassfileParser, int):496->rgb(252,126,126)
ClassfileParser.$anonfun$parseClass$4(ClassfileParser, int):498->rgb(229,92,92)
ClassfileParser.$anonfun$parseClass$5(ClassfileParser, long, int):508->rgb(203,55,55)
ClassfileParser.$anonfun$parseInnerClasses$1(ClassfileParser, int):1172->rgb(253,128,128)
ClassfileParser.$anonfun$parseInnerClasses$1(ClassfileParser, int):1182->rgb(233,99,99)
ClassfileParser.$anonfun$parseInnerClasses$1(ClassfileParser, int):1189->rgb(211,66,66)
ClassfileParser.$anonfun$parseInnerClasses$2(ClassfileParser, int):1186->rgb(204,57,57)
ClassfileParser.accept$1(char, Names$Name, IntRef):635->rgb(240,108,108)
ClassfileParser.addJavaFlagsAnnotations(Symbols$Symbol, int):1099->rgb(242,111,111)
ClassfileParser.classNameToSymbol(Names$Name):431->rgb(233,99,99)
ClassfileParser.classNameToSymbol(Names$Name):433->rgb(219,78,78)
ClassfileParser.enterClassAndModule$1(ClassfileParser$InnerClassEntry, AbstractFile):1145->rgb(217,76,76)
ClassfileParser.enterOwnInnerClasses():1149->rgb(200,50,50)
ClassfileParser.isScala_$eq(boolean):65->rgb(202,53,53)
ClassfileParser.lookupClass(Names$Name):395->rgb(247,118,118)
ClassfileParser.lookupClass(Names$Name):415->rgb(241,111,111)
ClassfileParser.lookupTopLevel$1(Names$Name):383->rgb(217,75,75)
ClassfileParser.parse(AbstractFile, Symbols$ClassSymbol, Symbols$ModuleSymbol):125->rgb(236,103,103)
ClassfileParser.parseAnnotation$1(int, boolean):1016->rgb(228,91,91)
ClassfileParser.parseAnnotation$1(int, boolean):1017->rgb(221,81,81)
ClassfileParser.parseAnnotation$1(int, boolean):1020->rgb(205,57,57)
ClassfileParser.parseAnnotation$1(int, boolean):1043->rgb(214,71,71)
ClassfileParser.parseAnnotations$1(boolean, Symbols$Symbol):1079->rgb(247,119,119)
ClassfileParser.parseAttribute$1(Symbols$Symbol, Types$Type, boolean):812->rgb(222,82,82)
ClassfileParser.parseAttribute$1(Symbols$Symbol, Types$Type, boolean):817->rgb(211,67,67)
ClassfileParser.parseAttribute$1(Symbols$Symbol, Types$Type, boolean):818->rgb(224,85,85)
ClassfileParser.parseAttribute$1(Symbols$Symbol, Types$Type, boolean):881->rgb(206,59,59)
ClassfileParser.parseAttribute$1(Symbols$Symbol, Types$Type, boolean):887->rgb(245,116,116)
ClassfileParser.parseAttribute$1(Symbols$Symbol, Types$Type, boolean):903->rgb(222,83,83)
ClassfileParser.parseAttribute$1(Symbols$Symbol, Types$Type, boolean):927->rgb(233,99,99)
ClassfileParser.parseAttributes(Symbols$Symbol, Types$Type, boolean):1092->rgb(214,70,70)
ClassfileParser.parseClass():463->rgb(223,84,84)
ClassfileParser.parseClass():469->rgb(245,116,116)
ClassfileParser.parseClass():474->rgb(201,51,51)
ClassfileParser.parseClass():478->rgb(212,68,68)
ClassfileParser.parseClass():486->rgb(215,72,72)
ClassfileParser.parseClass():513->rgb(216,74,74)
ClassfileParser.parseClass():517->rgb(224,86,86)
ClassfileParser.parseExceptions$1(int, Symbols$Symbol):1064->rgb(252,126,126)
ClassfileParser.parseField():538->rgb(253,127,127)
ClassfileParser.parseField():539->rgb(240,109,109)
ClassfileParser.parseInnerClasses():1167->rgb(218,77,77)
ClassfileParser.parseMethod():572->rgb(239,107,107)
ClassfileParser.parseMethod():574->rgb(222,82,82)
ClassfileParser.parseMethod():575->rgb(234,100,100)
ClassfileParser.parseMethod():582->rgb(205,58,58)
ClassfileParser.parseMethod():583->rgb(200,50,50)
ClassfileParser.parseMethod():584->rgb(238,106,106)
ClassfileParser.parseMethod():619->rgb(205,58,58)
ClassfileParser.parseMethod():620->rgb(238,106,106)
ClassfileParser.parseMethod():621->rgb(234,99,99)
ClassfileParser.parseMethod():622->rgb(225,86,86)
ClassfileParser.parseParents$1(int):131->rgb(243,112,112)
ClassfileParser.parseScalaSigBytes$1():995->rgb(231,96,96)
ClassfileParser.pool():64->rgb(203,55,55)
ClassfileParser.processClassType$1(Types$Type, Symbols$Symbol, Names$Name, IntRef, Map, boolean):687->rgb(230,94,94)
ClassfileParser.processInner$1(Types$Type):656->rgb(218,77,77)
ClassfileParser.queueLoad$1(long, int):496->rgb(214,71,71)
ClassfileParser.queueLoad$1(long, int):498->rgb(241,110,110)
ClassfileParser.readName():95->rgb(235,100,100)
ClassfileParser.readType():96->rgb(234,100,100)
ClassfileParser.readTypeName():94->rgb(223,83,83)
ClassfileParser.scala$tools$nsc$symtab$classfile$ClassfileParser$$sigToType(Symbols$Symbol, Names$Name):631->rgb(205,57,57)
ClassfileParser.scala$tools$nsc$symtab$classfile$ClassfileParser$$sigToType(Symbols$Symbol, Names$Name):768->rgb(232,96,96)
ClassfileParser.scala$tools$nsc$symtab$classfile$ClassfileParser$$sigToType(Symbols$Symbol, Names$Name):792->rgb(222,82,82)
ClassfileParser.sig2type$1(Map, boolean, Symbols$Symbol, Names$Name, IntRef):639->rgb(254,129,129)
ClassfileParser.sig2type$1(Map, boolean, Symbols$Symbol, Names$Name, IntRef):640->rgb(230,94,94)
ClassfileParser.sig2type$1(Map, boolean, Symbols$Symbol, Names$Name, IntRef):709->rgb(243,112,112)
ClassfileParser.sig2type$1(Map, boolean, Symbols$Symbol, Names$Name, IntRef):718->rgb(219,78,78)
ClassfileParser.sig2type$1(Map, boolean, Symbols$Symbol, Names$Name, IntRef):733->rgb(235,101,101)
ClassfileParser.sig2type$1(Map, boolean, Symbols$Symbol, Names$Name, IntRef):739->rgb(214,70,70)
ClassfileParser.sig2type$1(Map, boolean, Symbols$Symbol, Names$Name, IntRef):746->rgb(204,56,56)
ClassfileParser.sig2type$1(Map, boolean, Symbols$Symbol, Names$Name, IntRef):747->rgb(203,54,54)
ClassfileParser.u2():84->rgb(251,125,125)
ClassfileParser.unlinkIfPresent$1(Names$Name, Scopes$Scope):1141->rgb(213,69,69)
ClassfileWriter.fastGetFile(AbstractFile, String, String):73->rgb(246,117,117)
ClassfileWriter.fastGetFile(AbstractFile, String, String):74->rgb(200,50,50)
ClassfileWriter.getFile(AbstractFile, String, String):56->rgb(227,89,89)
ClassfileWriter.write(String, byte[], AbstractFile):105->rgb(206,58,58)
ClassfileWriter.write(String, byte[], AbstractFile):97->rgb(215,71,71)
ClassfileWriter.write(String, byte[], AbstractFile):98->rgb(251,125,125)
ClassfileWriter.writeBytes(AbstractFile, byte[]):80->rgb(243,113,113)
CleanUp$CleanUpTransformer.transform(Trees$Tree):373->rgb(238,105,105)
CleanUp$CleanUpTransformer.transform(Trees$Tree):423->rgb(204,56,56)
CleanUp$CleanUpTransformer.transform(Trees$Tree):424->rgb(236,102,102)
CleanUp$CleanUpTransformer.transform(Trees$Tree):433->rgb(226,87,87)
CleanUp$CleanUpTransformer.transform(Trees$Tree):454->rgb(228,90,90)
CleanUp$CleanUpTransformer.transform(Trees$Tree):462->rgb(221,81,81)
CleanUp$CleanUpTransformer.transform(Trees$Tree):471->rgb(208,61,61)
CleanUp$CleanUpTransformer.transform(Trees$Tree):476->rgb(221,80,80)
CleanUp$CleanUpTransformer.transform(Trees$TreeApi):30->rgb(223,84,84)
CleanUp$CleanUpTransformer.transformTemplate(Trees$Tree):42->rgb(227,89,89)
CodeGen$CodeGenImpl$.global():93->rgb(204,57,57)
CodeGen.$anonfun$genUnit$2(CodeGen, CompilationUnits$CompilationUnit, ListBuffer, Trees$Tree):43->rgb(223,84,84)
CodeGen.addSbtIClassShim(Trees$ClassDef):89->rgb(201,52,52)
CodeGen.genClass(Trees$ClassDef, CompilationUnits$CompilationUnit):52->rgb(209,64,64)
CodeGen.genClass(Trees$ClassDef, CompilationUnits$CompilationUnit):53->rgb(250,122,122)
CodeGen.genClass(Trees$ClassDef, CompilationUnits$CompilationUnit):55->rgb(235,102,102)
CodeGen.genClass(Trees$ClassDef, CompilationUnits$CompilationUnit):56->rgb(244,114,114)
CodeGen.genClass(Trees$ClassDef, CompilationUnits$CompilationUnit):57->rgb(253,128,128)
CodeGen.genClassDef$1(Trees$ClassDef, CompilationUnits$CompilationUnit, ListBuffer):26->rgb(210,65,65)
CodeGen.genClassDef$1(Trees$ClassDef, CompilationUnits$CompilationUnit, ListBuffer):29->rgb(243,113,113)
CodeGen.genClassDefs$1(Trees$Tree, CompilationUnits$CompilationUnit, ListBuffer):43->rgb(234,100,100)
CodeGen.genClassDefs$1(Trees$Tree, CompilationUnits$CompilationUnit, ListBuffer):44->rgb(225,86,86)
CodeGen.genMirrorClass(Symbols$Symbol, CompilationUnits$CompilationUnit):61->rgb(207,60,60)
CodeGen.genUnit(CompilationUnits$CompilationUnit):47->rgb(243,113,113)
CodeGen.warnCaseInsensitiveOverwrite(Trees$ClassDef):72->rgb(221,81,81)
Codec$.fromUTF8(byte[], int, int):102->rgb(200,50,50)
Codec$.fromUTF8(byte[], int, int):103->rgb(240,108,108)
Codec$.toUTF8(CharSequence):113->rgb(254,129,129)
Collections.$anonfun$mapFrom$1(Function1, Object):195->rgb(212,67,67)
Collections.$anonfun$mmap$1(Function1, List):36->rgb(209,64,64)
Collections.mapList$(Collections, List, Function1):51->rgb(235,101,101)
Collections.mapList(List, Function1):51->rgb(245,116,116)
Collections.mapList(List, Function1):52->rgb(200,50,50)
Collections.mapList(List, Function1):56->rgb(226,87,87)
Collections.sameElementsEquals$(Collections, List, List):64->rgb(228,91,91)
Collections.sameElementsEquals(List, List):69->rgb(200,50,50)
Collections.sequence$(Collections, List):291->rgb(250,123,123)
Collections.sequence(List):293->rgb(241,110,110)
Collections.transposeSafe$(Collections, List):296->rgb(223,83,83)
Collections.transposeSafe(List):297->rgb(220,79,79)
CommonOwners$CommonOwnerMap.register(Symbols$Symbol):39->rgb(226,89,89)
CommonOwners$CommonOwnerMap.traverse(Types$Type):42->rgb(217,75,75)
CommonOwners$CommonOwnerMap.traverse(Types$Type):43->rgb(202,53,53)
CommonOwners$CommonOwnerMap.traverse(Types$Type):44->rgb(209,64,64)
CommonOwners$CommonOwnerMap.traverse(Types$Type):46->rgb(227,89,89)
CommonOwners.$anonfun$commonOwner$1(CommonOwners, Types$Type):22->rgb(228,91,91)
CommonOwners.commonOwner$(CommonOwners, List):18->rgb(206,59,59)
CommonOwners.commonOwner$(CommonOwners, Types$Type):12->rgb(221,80,80)
CommonOwners.commonOwner(List):22->rgb(203,54,54)
CommonOwners.commonOwner(Types$Type):12->rgb(220,80,80)
ConsoleReporter.<init>(Settings):18->rgb(210,64,64)
ConstantFolder.apply(Trees$Tree, Types$Type):40->rgb(226,88,88)
Constants$Constant.equalHashValue():257->rgb(215,72,72)
Constants$Constant.equals(Object):85->rgb(231,96,96)
Constants$Constant.tpe():70->rgb(250,122,122)
Constants$Constant.tpe():75->rgb(250,123,123)
Constants$Constant.tpe():76->rgb(223,84,84)
Constants$Constant.tpe():77->rgb(231,96,96)
Constructors$ConstructorTransformer.$anonfun$checkUninitializedReads$3(Constructors$ConstructorTransformer, Symbols$Symbol, Set, Trees$Tree):66->rgb(205,58,58)
Constructors$ConstructorTransformer.$anonfun$transform$1(Constructors$ConstructorTransformer, Trees$Modifiers, Names$TypeName, List, Constructors$TemplateTransformer, Trees$ClassDef):85->rgb(202,53,53)
Constructors$ConstructorTransformer.<init>(Constructors, CompilationUnits$CompilationUnit):29->rgb(219,78,78)
Constructors$ConstructorTransformer.check$1(Trees$Tree, Symbols$Symbol, Set):54->rgb(210,64,64)
Constructors$ConstructorTransformer.checkUninitializedReads(Trees$ClassDef):49->rgb(218,77,77)
Constructors$ConstructorTransformer.transform(Trees$Tree):81->rgb(226,88,88)
Constructors$ConstructorTransformer.transform(Trees$Tree):85->rgb(210,65,65)
Constructors$ConstructorTransformer.transform(Trees$Tree):89->rgb(214,71,71)
Constructors$ConstructorTransformer.transform(Trees$TreeApi):29->rgb(250,122,122)
Constructors$OmittablesHelper$detectUsages$2$.traverse(Trees$Tree):176->rgb(243,112,112)
Constructors$OmittablesHelper$detectUsages$2$.traverse(Trees$Tree):183->rgb(224,85,85)
Constructors$OmittablesHelper$detectUsages$2$.traverse(Trees$TreeApi):172->rgb(210,65,65)
Constructors$OmittablesHelper.$anonfun$computeOmittableAccessors$1$adapted(boolean, Symbols$Symbol):169->rgb(225,87,87)
Constructors$OmittablesHelper.$anonfun$computeOmittableAccessors$1(boolean, Symbols$Symbol):169->rgb(234,100,100)
Constructors$OmittablesHelper.$anonfun$computeOmittableAccessors$3$adapted(Constructors$OmittablesHelper, Symbols$Symbol, List, boolean, Set, LazyRef, Trees$Tree):189->rgb(224,85,85)
Constructors$OmittablesHelper.$anonfun$computeOmittableAccessors$3(Constructors$OmittablesHelper, Symbols$Symbol, List, boolean, Set, LazyRef, Trees$Tree):189->rgb(235,102,102)
Constructors$OmittablesHelper.computeOmittableAccessors$(Constructors$OmittablesHelper, Symbols$Symbol, List, List):153->rgb(217,75,75)
Constructors$OmittablesHelper.computeOmittableAccessors(Symbols$Symbol, List, List):154->rgb(252,126,126)
Constructors$OmittablesHelper.computeOmittableAccessors(Symbols$Symbol, List, List):169->rgb(254,128,128)
Constructors$OmittablesHelper.computeOmittableAccessors(Symbols$Symbol, List, List):189->rgb(202,53,53)
Constructors$OmittablesHelper.omittableParamAcc$1(Symbols$Symbol):167->rgb(214,70,70)
Constructors$TemplateTransformer$Triage.$anonfun$triage$4(Constructors$TemplateTransformer$Triage, Symbols$Symbol, Trees$Tree):651->rgb(223,84,84)
Constructors$TemplateTransformer$Triage.$anonfun$triage$4(Constructors$TemplateTransformer$Triage, Symbols$Symbol, Trees$Tree):669->rgb(213,69,69)
Constructors$TemplateTransformer$Triage.$anonfun$triage$4(Constructors$TemplateTransformer$Triage, Symbols$Symbol, Trees$Tree):681->rgb(233,98,98)
Constructors$TemplateTransformer$Triage.<init>(Constructors$TemplateTransformer):591->rgb(207,61,61)
Constructors$TemplateTransformer$Triage.moveEffectToCtor$1(Trees$Modifiers, Trees$Tree, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):634->rgb(205,58,58)
Constructors$TemplateTransformer$Triage.moveEffectToCtor$1(Trees$Modifiers, Trees$Tree, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):643->rgb(242,111,111)
Constructors$TemplateTransformer$Triage.scala$tools$nsc$transform$Constructors$TemplateTransformer$Triage$$$outer():588->rgb(226,89,89)
Constructors$TemplateTransformer$Triage.triage():604->rgb(206,59,59)
Constructors$TemplateTransformer$Triage.triage():621->rgb(207,60,60)
Constructors$TemplateTransformer$Triage.triage():623->rgb(234,100,100)
Constructors$TemplateTransformer$intoConstructor$.apply(Symbols$Symbol, Symbols$Symbol, Trees$Tree):552->rgb(236,102,102)
Constructors$TemplateTransformer$intoConstructor$.transform(Trees$Tree):530->rgb(253,127,127)
Constructors$TemplateTransformer$intoConstructor$.transform(Trees$Tree):546->rgb(238,106,106)
Constructors$TemplateTransformer$intoConstructor$.transform(Trees$TreeApi):489->rgb(231,96,96)
Constructors$TemplateTransformer.$anonfun$transformed$3(Constructors$TemplateTransformer, Symbols$Symbol):731->rgb(238,105,105)
Constructors$TemplateTransformer.computeOmittableAccessors(Symbols$Symbol, List, List):447->rgb(224,85,85)
Constructors$TemplateTransformer.copyParam(Symbols$Symbol, Symbols$Symbol):569->rgb(208,62,62)
Constructors$TemplateTransformer.copyParam(Symbols$Symbol, Symbols$Symbol):575->rgb(224,84,84)
Constructors$TemplateTransformer.mkAssign(Symbols$Symbol, Trees$Tree):560->rgb(247,118,118)
Constructors$TemplateTransformer.scala$tools$nsc$transform$Constructors$TemplateTransformer$$$outer():447->rgb(211,66,66)
Constructors$TemplateTransformer.transformed():694->rgb(251,124,124)
Constructors$TemplateTransformer.transformed():699->rgb(243,113,113)
Constructors$TemplateTransformer.transformed():712->rgb(210,65,65)
Context.typecheck(Trees$Tree, int, Types$Type, boolean, boolean, boolean):6->rgb(207,61,61)
ContextMode$.ReTyping():1549->rgb(229,92,92)
ContextMode$.inAll$extension(int, int):1610->rgb(200,50,50)
ContextMode$.set$extension(int, boolean, int):1608->rgb(240,108,108)
Contexts$Context$$anon$1.<init>(Contexts$Context, Trees$Tree, Symbols$Symbol, Scopes$Scope, CompilationUnits$CompilationUnit, Contexts$ContextReporter):471->rgb(245,116,116)
Contexts$Context$TryTwice.$anonfun$apply$1(Contexts$Context$TryTwice):364->rgb(252,125,125)
Contexts$Context$TryTwice.apply():376->rgb(231,95,95)
Contexts$Context$TryTwice.apply():428->rgb(250,124,124)
Contexts$Context.$anonfun$isInPackageObject$1(Contexts$Context, Symbols$Symbol, Symbols$Symbol):1000->rgb(227,89,89)
Contexts$Context.$anonfun$lookupSymbol$3$adapted(Function1, Scopes$ScopeEntry):1061->rgb(229,92,92)
Contexts$Context.$anonfun$savingUndeterminedTypeParams$1(Contexts$Context, boolean, Function0):323->rgb(252,126,126)
Contexts$Context.<init>(Analyzer, Trees$Tree, Symbols$Symbol, Scopes$Scope, CompilationUnits$CompilationUnit, Contexts$Context, Contexts$ContextReporter):185->rgb(230,94,94)
Contexts$Context.<init>(Analyzer, Trees$Tree, Symbols$Symbol, Scopes$Scope, CompilationUnits$CompilationUnit, Contexts$Context, Contexts$ContextReporter):201->rgb(202,53,53)
Contexts$Context.<init>(Analyzer, Trees$Tree, Symbols$Symbol, Scopes$Scope, CompilationUnits$CompilationUnit, Contexts$Context, Contexts$ContextReporter):221->rgb(219,77,77)
Contexts$Context.<init>(Analyzer, Trees$Tree, Symbols$Symbol, Scopes$Scope, CompilationUnits$CompilationUnit, Contexts$Context, Contexts$ContextReporter):246->rgb(227,90,90)
Contexts$Context.ambiguousErrors():340->rgb(245,116,116)
Contexts$Context.apply(int):215->rgb(202,54,54)
Contexts$Context.collect$1(List, Contexts$ImportInfo, Trees$Tree, Types$Type):855->rgb(212,68,68)
Contexts$Context.collectImplicitImports(Contexts$ImportInfo):843->rgb(218,76,76)
Contexts$Context.collectImplicitImports(Contexts$ImportInfo):845->rgb(222,83,83)
Contexts$Context.collectImplicitImports(Contexts$ImportInfo):866->rgb(226,88,88)
Contexts$Context.contextMode():201->rgb(222,82,82)
Contexts$Context.contextMode_$eq(int):201->rgb(209,63,63)
Contexts$Context.defaultModeForTyped():273->rgb(205,58,58)
Contexts$Context.depthOk$1(Contexts$ImportInfo, Names$Name, IntRef):1121->rgb(250,122,122)
Contexts$Context.enclosingCaseDef():288->rgb(206,59,59)
Contexts$Context.finishDefSym$1(Symbols$Symbol, Types$Type, ObjectRef, ObjectRef):1027->rgb(249,122,122)
Contexts$Context.finishDefSym$1(Symbols$Symbol, Types$Type, ObjectRef, ObjectRef):1028->rgb(231,96,96)
Contexts$Context.imp1$2(ObjectRef):1098->rgb(206,58,58)
Contexts$Context.imp2$2(ObjectRef):1099->rgb(209,63,63)
Contexts$Context.implicits(Contexts$Context):905->rgb(233,99,99)
Contexts$Context.implicits(Contexts$Context):914->rgb(201,51,51)
Contexts$Context.implicits(Contexts$Context):918->rgb(231,96,96)
Contexts$Context.implicitsEnabled():261->rgb(207,61,61)
Contexts$Context.implicitss():876->rgb(220,79,79)
Contexts$Context.implicitss():887->rgb(217,75,75)
Contexts$Context.implicitss():889->rgb(222,82,82)
Contexts$Context.implicitss():896->rgb(232,96,96)
Contexts$Context.implicitss():899->rgb(248,120,120)
Contexts$Context.importedAccessibleSymbol(Contexts$ImportInfo, Names$Name, boolean, boolean):987->rgb(231,95,95)
Contexts$Context.isAccessible(Symbols$Symbol, Types$Type, boolean):733->rgb(220,79,79)
Contexts$Context.isAccessible(Symbols$Symbol, Types$Type, boolean):734->rgb(229,93,93)
Contexts$Context.isAccessible(Symbols$Symbol, Types$Type, boolean):742->rgb(201,52,52)
Contexts$Context.isInPackageObject(Symbols$Symbol, Symbols$Symbol):1000->rgb(247,118,118)
Contexts$Context.isInPackageObject(Symbols$Symbol, Symbols$Symbol):1001->rgb(235,101,101)
Contexts$Context.keepLooking$1(Names$Name, ObjectRef, ObjectRef):1153->rgb(220,79,79)
Contexts$Context.keepLooking$1(Names$Name, ObjectRef, ObjectRef):1155->rgb(201,51,51)
Contexts$Context.lookupSymbol(Names$Name, Function1):1011->rgb(237,104,104)
Contexts$Context.lookupSymbol(Names$Name, Function1):1039->rgb(244,115,115)
Contexts$Context.lookupSymbol(Names$Name, Function1):1042->rgb(201,51,51)
Contexts$Context.lookupSymbol(Names$Name, Function1):1061->rgb(240,109,109)
Contexts$Context.lookupSymbol(Names$Name, Function1):1068->rgb(251,124,124)
Contexts$Context.lookupSymbol(Names$Name, Function1):1083->rgb(214,71,71)
Contexts$Context.lookupSymbol(Names$Name, Function1):1090->rgb(248,120,120)
Contexts$Context.lookupSymbol(Names$Name, Function1):1105->rgb(230,94,94)
Contexts$Context.lookupSymbol(Names$Name, Function1):1125->rgb(210,65,65)
Contexts$Context.lookupSymbol(Names$Name, Function1):1131->rgb(236,102,102)
Contexts$Context.lookupSymbol(Names$Name, Function1):1145->rgb(218,77,77)
Contexts$Context.lookupSymbol(Names$Name, Function1):1168->rgb(254,129,129)
Contexts$Context.make(Trees$Tree, Symbols$Symbol, Scopes$Scope):512->rgb(247,118,118)
Contexts$Context.make(Trees$Tree, Symbols$Symbol, Scopes$Scope, CompilationUnits$CompilationUnit, Contexts$ContextReporter):460->rgb(245,115,115)
Contexts$Context.make(Trees$Tree, Symbols$Symbol, Scopes$Scope, CompilationUnits$CompilationUnit, Contexts$ContextReporter):465->rgb(241,110,110)
Contexts$Context.make(Trees$Tree, Symbols$Symbol, Scopes$Scope, CompilationUnits$CompilationUnit, Contexts$ContextReporter):471->rgb(232,97,97)
Contexts$Context.make(Trees$Tree, Symbols$Symbol, Scopes$Scope, CompilationUnits$CompilationUnit, Contexts$ContextReporter):473->rgb(239,107,107)
Contexts$Context.make(Trees$Tree, Symbols$Symbol, Scopes$Scope, CompilationUnits$CompilationUnit, Contexts$ContextReporter):482->rgb(235,101,101)
Contexts$Context.make(Trees$Tree, Symbols$Symbol, Scopes$Scope, CompilationUnits$CompilationUnit, Contexts$ContextReporter):484->rgb(220,80,80)
Contexts$Context.make(Trees$Tree, Symbols$Symbol, Scopes$Scope, CompilationUnits$CompilationUnit, Contexts$ContextReporter):487->rgb(243,113,113)
Contexts$Context.make(Trees$Tree, Symbols$Symbol, Scopes$Scope, CompilationUnits$CompilationUnit, Contexts$ContextReporter):489->rgb(200,50,50)
Contexts$Context.make(Trees$Tree, Symbols$Symbol, Scopes$Scope, CompilationUnits$CompilationUnit, Contexts$ContextReporter):493->rgb(210,65,65)
Contexts$Context.makeImplicit(boolean):534->rgb(228,91,91)
Contexts$Context.makeImplicit(boolean):535->rgb(215,72,72)
Contexts$Context.makeNewScope$default$3():515->rgb(243,113,113)
Contexts$Context.makeNewScope(Trees$Tree, Symbols$Symbol, Contexts$ContextReporter):516->rgb(211,66,66)
Contexts$Context.makeSilent(boolean, Trees$Tree):521->rgb(250,123,123)
Contexts$Context.nextEnclosing(Function1):622->rgb(220,79,79)
Contexts$Context.nextOuter():615->rgb(236,103,103)
Contexts$Context.nextOuter():618->rgb(249,121,121)
Contexts$Context.outer():189->rgb(249,122,122)
Contexts$Context.outerIsNoContext():188->rgb(239,107,107)
Contexts$Context.prefix_$eq(Types$Type):246->rgb(252,125,125)
Contexts$Context.reporter():333->rgb(240,108,108)
Contexts$Context.requiresQualifier(Symbols$Symbol):993->rgb(221,81,81)
Contexts$Context.retyping():267->rgb(248,120,120)
Contexts$Context.sameDepth$1(ObjectRef):1100->rgb(210,64,64)
Contexts$Context.savingUndeterminedTypeParams(boolean, Function0):387->rgb(251,125,125)
Contexts$Context.scala$tools$nsc$typechecker$Contexts$Context$$$outer():185->rgb(201,52,52)
Contexts$Context.scala$tools$nsc$typechecker$Contexts$Context$$setAmbiguousErrors(boolean):342->rgb(240,108,108)
Contexts$Context.tree():185->rgb(239,107,107)
Contexts$Context.update(int, boolean):205->rgb(236,102,102)
Contexts$Context.withOuter$1(List, Contexts$Context):879->rgb(214,71,71)
Contexts$Context.withOuter$1(List, Contexts$Context):880->rgb(230,94,94)
Contexts$ContextReporter.errorBuffer():1378->rgb(223,84,84)
Contexts$ContextReporter.hasErrors():1322->rgb(223,83,83)
Contexts$ContextReporter.scala$tools$nsc$typechecker$Contexts$ContextReporter$$newBuffer():1377->rgb(215,71,71)
Contexts$ImportInfo.importedSymbol(Names$Name, boolean, boolean):1464->rgb(242,111,111)
Contexts$ImportInfo.importedSymbol(Names$Name, boolean, boolean):1470->rgb(243,113,113)
Contexts$ImportInfo.importedSymbol(Names$Name, boolean, boolean):1473->rgb(221,81,81)
Contexts$ImportInfo.importedSymbol(Names$Name, boolean, boolean):1475->rgb(205,57,57)
Contexts$ImportInfo.importedSymbol(Names$Name, boolean, boolean):1484->rgb(250,123,123)
Contexts$ImportInfo.qual():1435->rgb(217,74,74)
Contexts.$anonfun$rootContext$1(Contexts, Contexts$Context, Symbols$Symbol):104->rgb(221,81,81)
Contexts.rootContext$(Contexts, CompilationUnits$CompilationUnit, Trees$Tree, boolean, boolean):103->rgb(233,98,98)
Contexts.rootContext(CompilationUnits$CompilationUnit, Trees$Tree, boolean, boolean):104->rgb(248,120,120)
Contexts.rootContextPostTyper$(Contexts, CompilationUnits$CompilationUnit, Trees$Tree):123->rgb(237,104,104)
Contexts.rootContextPostTyper(CompilationUnits$CompilationUnit, Trees$Tree):124->rgb(208,62,62)
Contexts.rootImports$(Contexts, CompilationUnits$CompilationUnit):88->rgb(215,72,72)
Contexts.rootImports(CompilationUnits$CompilationUnit):93->rgb(211,66,66)
CoreBTypes.initialize():7->rgb(205,58,58)
CoreBTypesFromSymbols.$anonfun$_boxedClassOfPrimitive$1(CoreBTypesFromSymbols):96->rgb(240,109,109)
CoreBTypesFromSymbols.$anonfun$_boxedClassOfPrimitive$1(CoreBTypesFromSymbols):99->rgb(246,117,117)
CoreBTypesFromSymbols.$anonfun$_boxedClasses$1(CoreBTypesFromSymbols):106->rgb(225,86,86)
CoreBTypesFromSymbols.$anonfun$_jliCallSiteRef$1(CoreBTypesFromSymbols):199->rgb(226,88,88)
CoreBTypesFromSymbols.$anonfun$_jliLambdaMetafactoryRef$1(CoreBTypesFromSymbols):202->rgb(223,84,84)
CoreBTypesFromSymbols.$anonfun$_jliMethodHandleRef$1(CoreBTypesFromSymbols):187->rgb(239,108,108)
CoreBTypesFromSymbols.$anonfun$_jliMethodTypeRef$1(CoreBTypesFromSymbols):196->rgb(251,125,125)
CoreBTypesFromSymbols.$anonfun$_lambdaDeserializeBootstrapHandle$1(CoreBTypesFromSymbols):407->rgb(210,64,64)
CoreBTypesFromSymbols.$anonfun$_lambdaMetaFactoryAltMetafactoryHandle$1(CoreBTypesFromSymbols):386->rgb(201,51,51)
CoreBTypesFromSymbols.$anonfun$_lambdaMetaFactoryAltMetafactoryHandle$1(CoreBTypesFromSymbols):391->rgb(209,63,63)
CoreBTypesFromSymbols.$anonfun$_lambdaMetaFactoryAltMetafactoryHandle$1(CoreBTypesFromSymbols):393->rgb(229,93,93)
CoreBTypesFromSymbols.$anonfun$_srBoxesRuntimeBoxToMethods$1(CoreBTypesFromSymbols):231->rgb(253,127,127)
CoreBTypesFromSymbols.$anonfun$srBoxesRuntimeMethods$1(CoreBTypesFromSymbols, Function2, Symbols$ClassSymbol):230->rgb(244,114,114)
CoreBTypesFromSymbols.boxedClassOfPrimitive():91->rgb(205,57,57)
CoreBTypesFromSymbols.boxedClasses():105->rgb(201,52,52)
CoreBTypesFromSymbols.jliCallSiteRef():198->rgb(233,99,99)
CoreBTypesFromSymbols.jliLambdaMetafactoryRef():201->rgb(211,66,66)
CoreBTypesFromSymbols.jliMethodHandleRef():186->rgb(247,118,118)
CoreBTypesFromSymbols.jliMethodTypeRef():195->rgb(230,93,93)
CoreBTypesFromSymbols.lambdaDeserializeBootstrapHandle():398->rgb(216,74,74)
CoreBTypesFromSymbols.lambdaMetaFactoryAltMetafactoryHandle():383->rgb(241,109,109)
CoreBTypesFromSymbols.methodNameAndType(Symbols$Symbol, Names$Name, boolean, Function1):221->rgb(200,51,51)
CoreBTypesFromSymbols.primitiveTypeToBType():73->rgb(241,110,110)
CoreBTypesFromSymbols.srBoxesRuntimeBoxToMethods():235->rgb(235,101,101)
DataInputStream.<init>(InputStream):396->rgb(240,109,109)
DecorateAsScala.$anonfun$asScalaIteratorConverter$1(DecorateAsScala, Iterator):24->rgb(235,101,101)
Decorators$AsScala.asScala():25->rgb(211,66,66)
DefaultEntry.key():16->rgb(204,56,56)
DefaultEntry.next():16->rgb(254,129,129)
Definitions$DefinitionsClass$NullClass$.isSubClass(Symbols$Symbol):312->rgb(217,75,75)
Definitions$DefinitionsClass$RunDefinitions.$anonfun$ApiUniverseReify$1(Definitions$DefinitionsClass$RunDefinitions, Symbols$Symbol):1558->rgb(212,68,68)
Definitions$DefinitionsClass$RunDefinitions.ApiUniverseReify$lzycompute():1558->rgb(229,92,92)
Definitions$DefinitionsClass$RunDefinitions.ApiUniverseReify():1558->rgb(203,54,54)
Definitions$DefinitionsClass$RunDefinitions.ReflectRuntimeCurrentMirror$lzycompute():1561->rgb(213,70,70)
Definitions$DefinitionsClass$RunDefinitions.ReflectRuntimeCurrentMirror():1561->rgb(215,72,72)
Definitions$DefinitionsClass$RunDefinitions.TagMaterializers$lzycompute():1516->rgb(219,78,78)
Definitions$DefinitionsClass$RunDefinitions.TagMaterializers():1516->rgb(218,76,76)
Definitions$DefinitionsClass$RunDefinitions.TagSymbols$lzycompute():1521->rgb(207,60,60)
Definitions$DefinitionsClass$RunDefinitions.TagSymbols():1521->rgb(210,65,65)
Definitions$DefinitionsClass$RunDefinitions.isPolymorphicSignature(Symbols$Symbol):1573->rgb(211,66,66)
Definitions$DefinitionsClass$RunDefinitions.isPolymorphicSignature(Symbols$Symbol):1574->rgb(233,98,98)
Definitions$DefinitionsClass$RunDefinitions.isPolymorphicSignature(Symbols$Symbol):1575->rgb(227,90,90)
Definitions$DefinitionsClass$RunDefinitions.isPredefClassOf(Symbols$Symbol):1514->rgb(204,57,57)
Definitions$DefinitionsClass$RunDefinitions.materializeWeakTypeTag$lzycompute():1546->rgb(229,93,93)
Definitions$DefinitionsClass$RunDefinitions.materializeWeakTypeTag():1546->rgb(200,50,50)
Definitions$DefinitionsClass$VarArityClass.$anonfun$seq$1$adapted(Definitions$DefinitionsClass$VarArityClass, Object):566->rgb(238,106,106)
Definitions$DefinitionsClass$VarArityClass.$anonfun$seq$1(Definitions$DefinitionsClass$VarArityClass, int):566->rgb(239,107,107)
Definitions$DefinitionsClass$VarArityClass.<init>(Definitions$DefinitionsClass, String, int, int, Option):566->rgb(203,54,54)
Definitions$DefinitionsClass$VarArityClass.apply(int):567->rgb(222,82,82)
Definitions$DefinitionsClass$VarArityClass.specificType(List, Seq):571->rgb(221,81,81)
Definitions$DefinitionsClass.$anonfun$AnnotationDefaultAttr$1$adapted(Symbols$ClassSymbol, Symbols$Symbol):1226->rgb(202,53,53)
Definitions$DefinitionsClass.$anonfun$AnnotationDefaultAttr$1(Symbols$ClassSymbol, Symbols$Symbol):1226->rgb(200,50,50)
Definitions$DefinitionsClass.$anonfun$RepeatedParamClass$1(Definitions$DefinitionsClass, Symbols$Symbol):387->rgb(247,118,118)
Definitions$DefinitionsClass.$anonfun$getMemberIfDefined$1(Symbols$Symbol, Names$Name):1304->rgb(244,115,115)
Definitions$DefinitionsClass.$anonfun$unboxedValueClass$2(Definitions$DefinitionsClass):1414->rgb(228,90,90)
Definitions$DefinitionsClass.AbstractFunctionClass$lzycompute():583->rgb(229,93,93)
Definitions$DefinitionsClass.AbstractFunctionClass():583->rgb(234,100,100)
Definitions$DefinitionsClass.AnnotationDefaultAttr$lzycompute():1226->rgb(208,61,61)
Definitions$DefinitionsClass.AnnotationDefaultAttr():1222->rgb(243,113,113)
Definitions$DefinitionsClass.AnyClass$lzycompute():265->rgb(220,79,79)
Definitions$DefinitionsClass.AnyClass():265->rgb(213,69,69)
Definitions$DefinitionsClass.AnyRefTpe():270->rgb(208,63,63)
Definitions$DefinitionsClass.AnyValClass():285->rgb(209,63,63)
Definitions$DefinitionsClass.Any_asInstanceOf():1014->rgb(202,54,54)
Definitions$DefinitionsClass.Any_isInstanceOf():1013->rgb(245,116,116)
Definitions$DefinitionsClass.ArrayClass():454->rgb(224,86,86)
Definitions$DefinitionsClass.BoxedByteClass$lzycompute():1129->rgb(214,70,70)
Definitions$DefinitionsClass.BoxedByteClass():1129->rgb(237,103,103)
Definitions$DefinitionsClass.BoxedIntClass$lzycompute():1131->rgb(236,103,103)
Definitions$DefinitionsClass.BoxedIntClass():1131->rgb(201,52,52)
Definitions$DefinitionsClass.ByNameParamClass():385->rgb(254,128,128)
Definitions$DefinitionsClass.ClassClass$lzycompute():335->rgb(201,52,52)
Definitions$DefinitionsClass.ClassClass():335->rgb(233,98,98)
Definitions$DefinitionsClass.ClassType(Types$Type):953->rgb(233,99,99)
Definitions$DefinitionsClass.DeprecatedInheritanceAttr():1168->rgb(221,81,81)
Definitions$DefinitionsClass.EnumType(Symbols$Symbol):975->rgb(251,124,124)
Definitions$DefinitionsClass.FunctionClass$lzycompute():582->rgb(248,120,120)
Definitions$DefinitionsClass.FunctionClass():582->rgb(223,83,83)
Definitions$DefinitionsClass.IntTpe():161->rgb(208,61,61)
Definitions$DefinitionsClass.ListModule$lzycompute():444->rgb(228,91,91)
Definitions$DefinitionsClass.ListModule():444->rgb(204,57,57)
Definitions$DefinitionsClass.MacroImplAnnotation():527->rgb(214,71,71)
Definitions$DefinitionsClass.MethodHandleClass$lzycompute():541->rgb(251,124,124)
Definitions$DefinitionsClass.MethodHandleClass():541->rgb(243,112,112)
Definitions$DefinitionsClass.NothingClass():306->rgb(207,60,60)
Definitions$DefinitionsClass.NullTpe():275->rgb(206,59,59)
Definitions$DefinitionsClass.ObjectClass$lzycompute():267->rgb(252,126,126)
Definitions$DefinitionsClass.ObjectClass():267->rgb(230,94,94)
Definitions$DefinitionsClass.Object_equals():1116->rgb(246,117,117)
Definitions$DefinitionsClass.PredefModule():351->rgb(250,123,123)
Definitions$DefinitionsClass.ReflectApiPackage$lzycompute():484->rgb(238,105,105)
Definitions$DefinitionsClass.ReflectApiPackage():484->rgb(250,123,123)
Definitions$DefinitionsClass.ReflectRuntimeCurrentMirror():487->rgb(244,114,114)
Definitions$DefinitionsClass.ReflectRuntimePackage$lzycompute():485->rgb(218,77,77)
Definitions$DefinitionsClass.ReflectRuntimePackage():485->rgb(252,125,125)
Definitions$DefinitionsClass.RemoteAttr$lzycompute():1171->rgb(232,97,97)
Definitions$DefinitionsClass.RemoteAttr():1171->rgb(252,126,126)
Definitions$DefinitionsClass.RepeatedParamClass$lzycompute():1323->rgb(206,59,59)
Definitions$DefinitionsClass.RepeatedParamClass():387->rgb(252,126,126)
Definitions$DefinitionsClass.RuntimeNothingClass$lzycompute():294->rgb(223,84,84)
Definitions$DefinitionsClass.RuntimeNothingClass():294->rgb(225,86,86)
Definitions$DefinitionsClass.ScalaNumericValueClasses():161->rgb(237,104,104)
Definitions$DefinitionsClass.ScalaStrictFPAttr():1156->rgb(207,60,60)
Definitions$DefinitionsClass.ScalaValueClasses():161->rgb(225,86,86)
Definitions$DefinitionsClass.SeqClass$lzycompute():438->rgb(220,79,79)
Definitions$DefinitionsClass.SeqClass():438->rgb(228,91,91)
Definitions$DefinitionsClass.SerializableClass():374->rgb(236,103,103)
Definitions$DefinitionsClass.SingletonClass():373->rgb(229,92,92)
Definitions$DefinitionsClass.String_$plus$lzycompute():1109->rgb(232,97,97)
Definitions$DefinitionsClass.String_$plus():1109->rgb(203,54,54)
Definitions$DefinitionsClass.TailrecClass():1158->rgb(222,82,82)
Definitions$DefinitionsClass.TupleClass$lzycompute():581->rgb(213,70,70)
Definitions$DefinitionsClass.TupleClass():581->rgb(237,103,103)
Definitions$DefinitionsClass.UnitClass():161->rgb(239,107,107)
Definitions$DefinitionsClass.abbrvTag():161->rgb(205,58,58)
Definitions$DefinitionsClass.arrayType(Types$Type):887->rgb(241,109,109)
Definitions$DefinitionsClass.byNameType(Types$Type):888->rgb(211,67,67)
Definitions$DefinitionsClass.dropByName(Types$Type):419->rgb(207,60,60)
Definitions$DefinitionsClass.finalResultType(Types$Type):748->rgb(254,129,129)
Definitions$DefinitionsClass.getMember(Symbols$Symbol, Names$Name):1255->rgb(211,66,66)
Definitions$DefinitionsClass.getMemberIfDefined(Symbols$Symbol, Names$Name):1304->rgb(218,76,76)
Definitions$DefinitionsClass.getMemberMethod(Symbols$Symbol, Names$Name):1290->rgb(211,66,66)
Definitions$DefinitionsClass.hasMultipleNonImplicitParamLists(Symbols$Symbol):246->rgb(218,77,77)
Definitions$DefinitionsClass.init():1448->rgb(221,81,81)
Definitions$DefinitionsClass.init():1450->rgb(251,125,125)
Definitions$DefinitionsClass.isByName(Symbols$Symbol):394->rgb(207,60,60)
Definitions$DefinitionsClass.isByNameParamType(Types$Type):389->rgb(249,122,122)
Definitions$DefinitionsClass.isDefinitionsInitialized():163->rgb(223,84,84)
Definitions$DefinitionsClass.isFunctionSymbol(Symbols$Symbol):606->rgb(254,128,128)
Definitions$DefinitionsClass.isFunctionType(Types$Type):681->rgb(250,122,122)
Definitions$DefinitionsClass.isFunctionTypeDirect(Types$Type):676->rgb(247,119,119)
Definitions$DefinitionsClass.isGetClass(Symbols$Symbol):161->rgb(243,113,113)
Definitions$DefinitionsClass.isImportable(Symbols$Symbol):235->rgb(230,94,94)
Definitions$DefinitionsClass.isJavaRepeatedParamType(Types$Type):391->rgb(204,55,55)
Definitions$DefinitionsClass.isNumericSubClass(Symbols$Symbol, Symbols$Symbol):161->rgb(229,93,93)
Definitions$DefinitionsClass.isNumericValueClass(Symbols$Symbol):161->rgb(242,111,111)
Definitions$DefinitionsClass.isPrimitiveValueClass(Symbols$Symbol):1402->rgb(237,104,104)
Definitions$DefinitionsClass.isPrimitiveValueType(Types$Type):1403->rgb(235,101,101)
Definitions$DefinitionsClass.isRepeatedParamType(Types$Type):392->rgb(224,85,85)
Definitions$DefinitionsClass.isScalaRepeatedParamType(Types$Type):390->rgb(223,83,83)
Definitions$DefinitionsClass.isStable(Types$Type):761->rgb(227,90,90)
Definitions$DefinitionsClass.isStable(Types$Type):763->rgb(200,51,51)
Definitions$DefinitionsClass.isTupleSymbol(Symbols$Symbol):605->rgb(236,102,102)
Definitions$DefinitionsClass.isTupleType(Types$Type):711->rgb(237,104,104)
Definitions$DefinitionsClass.isTupleTypeDirect(Types$Type):677->rgb(216,74,74)
Definitions$DefinitionsClass.isUnimportable(Symbols$Symbol):230->rgb(241,110,110)
Definitions$DefinitionsClass.isUnimportable(Symbols$Symbol):231->rgb(203,55,55)
Definitions$DefinitionsClass.isUnimportable(Symbols$Symbol):232->rgb(254,129,129)
Definitions$DefinitionsClass.isVarArgTypes(Seq):401->rgb(224,86,86)
Definitions$DefinitionsClass.isVolatile(Types$Type):815->rgb(215,72,72)
Definitions$DefinitionsClass.isVolatile(Types$Type):816->rgb(203,55,55)
Definitions$DefinitionsClass.isVolatile(Types$Type):818->rgb(243,113,113)
Definitions$DefinitionsClass.samOf(Types$Type):850->rgb(201,52,52)
Definitions$DefinitionsClass.samOf(Types$Type):873->rgb(230,93,93)
Definitions$DefinitionsClass.seqType(Types$Type):893->rgb(241,109,109)
Definitions$DefinitionsClass.symbolsNotPresentInBytecode$lzycompute():1394->rgb(205,58,58)
Definitions$DefinitionsClass.symbolsNotPresentInBytecode():1394->rgb(223,84,84)
Definitions$DefinitionsClass.syntheticCoreClasses$lzycompute():1352->rgb(209,63,63)
Definitions$DefinitionsClass.syntheticCoreClasses$lzycompute():1353->rgb(214,70,70)
Definitions$DefinitionsClass.syntheticCoreClasses():1351->rgb(215,72,72)
Definitions$DefinitionsClass.syntheticCoreMethods$lzycompute():1382->rgb(214,70,70)
Definitions$DefinitionsClass.syntheticCoreMethods():1364->rgb(225,86,86)
Definitions$DefinitionsClass.tupleType(List):586->rgb(220,80,80)
Definitions$DefinitionsClass.unboxedValueClass(Symbols$Symbol):1414->rgb(243,113,113)
Definitions$DefinitionsClass.uncheckedVarianceClass():1161->rgb(249,121,121)
Definitions$ValueClassDefinitions.isGetClass$(Definitions$ValueClassDefinitions, Symbols$Symbol):113->rgb(246,117,117)
Definitions$ValueClassDefinitions.isNumericSubClass$(Definitions$ValueClassDefinitions, Symbols$Symbol, Symbols$Symbol):104->rgb(249,122,122)
Definitions$ValueClassDefinitions.isNumericSubClass(Symbols$Symbol, Symbols$Symbol):105->rgb(232,96,96)
Definitions$ValueClassDefinitions.isNumericSubClass(Symbols$Symbol, Symbols$Symbol):106->rgb(209,64,64)
Definitions$ValueClassDefinitions.isNumericSubClass(Symbols$Symbol, Symbols$Symbol):107->rgb(206,59,59)
Definitions$ValueClassDefinitions.isNumericValueClass$(Definitions$ValueClassDefinitions, Symbols$Symbol):111->rgb(208,62,62)
Definitions$ValueClassDefinitions.isNumericValueClass(Symbols$Symbol):111->rgb(245,116,116)
Definitions.scala$reflect$internal$Definitions$$enterNewClass(Symbols$Symbol, Names$TypeName, List, long):34->rgb(239,106,106)
Definitions.scala$reflect$internal$Definitions$$enterNewMethod(Symbols$Symbol, Names$TermName, List, Types$Type, long):43->rgb(218,76,76)
Delambdafy$DelambdafyTransformer.$anonfun$createBoxingBridgeMethodIfNeeded$3(Symbols$Symbol):135->rgb(231,95,95)
Delambdafy$DelambdafyTransformer.$anonfun$createBoxingBridgeMethodIfNeeded$5(Delambdafy$DelambdafyTransformer, Types$Type, Types$Type):157->rgb(217,75,75)
Delambdafy$DelambdafyTransformer.$anonfun$mkLambdaMetaFactoryCall$4(Delambdafy$DelambdafyTransformer, Symbols$Symbol, boolean):92->rgb(236,103,103)
Delambdafy$DelambdafyTransformer.$anonfun$mkLambdaMetaFactoryCall$4(Delambdafy$DelambdafyTransformer, Symbols$Symbol, boolean):93->rgb(246,117,117)
Delambdafy$DelambdafyTransformer.$anonfun$transform$2(Delambdafy$DelambdafyTransformer, List):279->rgb(227,90,90)
Delambdafy$DelambdafyTransformer.$anonfun$transform$3(Delambdafy$DelambdafyTransformer, Trees$Tree):279->rgb(248,120,120)
Delambdafy$DelambdafyTransformer.createBoxingBridgeMethodIfNeeded(Trees$Function, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):135->rgb(219,78,78)
Delambdafy$DelambdafyTransformer.createBoxingBridgeMethodIfNeeded(Trees$Function, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):156->rgb(220,79,79)
Delambdafy$DelambdafyTransformer.createBoxingBridgeMethodIfNeeded(Trees$Function, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):219->rgb(224,86,86)
Delambdafy$DelambdafyTransformer.createBoxingBridgeMethodIfNeeded(Trees$Function, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):222->rgb(231,95,95)
Delambdafy$DelambdafyTransformer.createBoxingBridgeMethodIfNeeded(Trees$Function, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):223->rgb(236,103,103)
Delambdafy$DelambdafyTransformer.isSelfParam$1(Symbols$Symbol):64->rgb(203,54,54)
Delambdafy$DelambdafyTransformer.methodReferencesThis$lzycompute():60->rgb(214,71,71)
Delambdafy$DelambdafyTransformer.methodReferencesThis():59->rgb(207,60,60)
Delambdafy$DelambdafyTransformer.mkLambdaMetaFactoryCall(Trees$Function, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol, boolean):65->rgb(251,124,124)
Delambdafy$DelambdafyTransformer.mkLambdaMetaFactoryCall(Trees$Function, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol, boolean):70->rgb(242,111,111)
Delambdafy$DelambdafyTransformer.mkLambdaMetaFactoryCall(Trees$Function, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol, boolean):88->rgb(221,81,81)
Delambdafy$DelambdafyTransformer.mkLambdaMetaFactoryCall(Trees$Function, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol, boolean):92->rgb(239,107,107)
Delambdafy$DelambdafyTransformer.mkLambdaMetaFactoryCall(Trees$Function, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol, boolean):97->rgb(244,114,114)
Delambdafy$DelambdafyTransformer.pretransform$1(Trees$Tree):269->rgb(228,91,91)
Delambdafy$DelambdafyTransformer.pretransform$1(Trees$Tree):270->rgb(200,50,50)
Delambdafy$DelambdafyTransformer.transform(Trees$Tree):265->rgb(205,58,58)
Delambdafy$DelambdafyTransformer.transform(Trees$Tree):279->rgb(227,89,89)
Delambdafy$DelambdafyTransformer.transform(Trees$Tree):289->rgb(252,126,126)
Delambdafy$DelambdafyTransformer.transform(Trees$Tree):290->rgb(241,109,109)
Delambdafy$DelambdafyTransformer.transform(Trees$Tree):293->rgb(239,107,107)
Delambdafy$DelambdafyTransformer.transform(Trees$TreeApi):56->rgb(219,78,78)
Delambdafy$DelambdafyTransformer.transformFunction(Trees$Function):232->rgb(211,66,66)
Delambdafy$DelambdafyTransformer.transformFunction(Trees$Function):243->rgb(231,95,95)
Delambdafy$DelambdafyTransformer.transformFunction(Trees$Function):250->rgb(235,101,101)
Delambdafy$DelambdafyTransformer.transformFunction(Trees$Function):252->rgb(238,105,105)
Delambdafy$DelambdafyTransformer.transformFunction(Trees$Function):258->rgb(232,97,97)
Delambdafy$FreeVarTraverser$.freeVarsOf(Trees$Function):327->rgb(248,120,120)
Delambdafy$FreeVarTraverser.$anonfun$traverse$1(Delambdafy$FreeVarTraverser, Trees$ValDef):310->rgb(248,120,120)
Delambdafy$FreeVarTraverser.traverse(Trees$Tree):310->rgb(254,129,129)
Delambdafy$FreeVarTraverser.traverse(Trees$Tree):320->rgb(228,92,92)
Delambdafy$FreeVarTraverser.traverse(Trees$TreeApi):303->rgb(245,116,116)
Delambdafy$ThisReferringMethodsTraverser.methodReferencesThisIn(Trees$Tree):341->rgb(202,53,53)
Delambdafy$ThisReferringMethodsTraverser.traverse(Trees$Tree):374->rgb(229,92,92)
Delambdafy$ThisReferringMethodsTraverser.traverse(Trees$Tree):395->rgb(242,112,112)
Delambdafy$ThisReferringMethodsTraverser.traverse(Trees$TreeApi):333->rgb(251,124,124)
Delambdafy.scala$tools$nsc$transform$Delambdafy$$shouldElideOuterArg(Symbols$Symbol, Trees$Tree):298->rgb(238,105,105)
DelegatingMethodAccessorImpl.invoke(Object, Object[]):43->rgb(203,54,54)
Depth.<init>(int):7->rgb(245,116,116)
DirectMethodHandle.internalMemberName(Object):270->rgb(234,100,100)
Driver.doCompile(Global):34->rgb(212,67,67)
Driver.doCompile(Global):35->rgb(220,79,79)
Driver.process(String[]):41->rgb(207,60,60)
Driver.process(String[]):42->rgb(236,103,103)
Driver.process(String[]):46->rgb(253,127,127)
Driver.process(String[]):47->rgb(220,79,79)
Driver.process(String[]):55->rgb(202,53,53)
Enumeration$Val.toString():246->rgb(227,89,89)
Enumeration$ValueSet.$anonfun$iterator$1$adapted(Enumeration$ValueSet, Object):282->rgb(235,101,101)
Enumeration$ValueSet.$anonfun$iterator$1(Enumeration$ValueSet, int):282->rgb(232,97,97)
Enumeration$ValueSet.contains(Enumeration$Value):279->rgb(209,64,64)
Enumeration.apply(int):137->rgb(224,85,85)
Enumeration.scala$Enumeration$$bottomId():129->rgb(224,85,85)
Enumeration.scala$Enumeration$$nameOf(int):203->rgb(209,64,64)
Equiv$$anon$2.equiv(Object, Object):50->rgb(249,121,121)
Erasure$ComputeBridges$BridgesCursor.<init>(Erasure$ComputeBridges, Symbols$Symbol):472->rgb(227,89,89)
Erasure$ComputeBridges$BridgesCursor.exclude(Symbols$Symbol):478->rgb(233,98,98)
Erasure$ComputeBridges.$anonfun$checkPair$1(Erasure$ComputeBridges, Symbols$Symbol, Symbols$Symbol, Types$Type):559->rgb(208,61,61)
Erasure$ComputeBridges.$anonfun$compute$1(Erasure$ComputeBridges):491->rgb(242,112,112)
Erasure$ComputeBridges.$anonfun$makeBridgeDefDef$1(Erasure$ComputeBridges, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):644->rgb(210,65,65)
Erasure$ComputeBridges.$anonfun$opc$1(Erasure$ComputeBridges):487->rgb(252,125,125)
Erasure$ComputeBridges.<init>(Erasure, CompilationUnits$CompilationUnit, Symbols$Symbol):484->rgb(218,76,76)
Erasure$ComputeBridges.<init>(Erasure, CompilationUnits$CompilationUnit, Symbols$Symbol):487->rgb(209,63,63)
Erasure$ComputeBridges.checkPair(SymbolPairs$SymbolPair):560->rgb(209,64,64)
Erasure$ComputeBridges.checkPair(SymbolPairs$SymbolPair):606->rgb(209,63,63)
Erasure$ComputeBridges.compute():491->rgb(206,59,59)
Erasure$ComputeBridges.compute():492->rgb(241,111,111)
Erasure$ComputeBridges.compute():494->rgb(221,80,80)
Erasure$ComputeBridges.makeBridgeDefDef(Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):610->rgb(220,80,80)
Erasure$Eraser$$anon$4.typedPos(Position, Trees$Tree):650->rgb(215,71,71)
Erasure$Eraser.adapt(Trees$Tree, int, Types$Type, Trees$Tree):765->rgb(224,85,85)
Erasure$Eraser.adaptMember(Trees$Tree):701->rgb(250,123,123)
Erasure$Eraser.adaptMember(Trees$Tree):704->rgb(240,108,108)
Erasure$Eraser.adaptMember(Trees$Tree):707->rgb(228,91,91)
Erasure$Eraser.adaptMember(Trees$Tree):709->rgb(226,88,88)
Erasure$Eraser.adaptMember(Trees$Tree):712->rgb(220,79,79)
Erasure$Eraser.adaptMember(Trees$Tree):714->rgb(226,87,87)
Erasure$Eraser.adaptMember(Trees$Tree):716->rgb(211,66,66)
Erasure$Eraser.adaptMember(Trees$Tree):717->rgb(206,59,59)
Erasure$Eraser.adaptMember(Trees$Tree):718->rgb(229,92,92)
Erasure$Eraser.adaptMember(Trees$Tree):723->rgb(218,76,76)
Erasure$Eraser.adaptMember(Trees$Tree):729->rgb(231,95,95)
Erasure$Eraser.adaptMember(Trees$Tree):750->rgb(215,73,73)
Erasure$Eraser.adaptMember(Trees$Tree):753->rgb(219,78,78)
Erasure$Eraser.scala$tools$nsc$transform$Erasure$Eraser$$$outer():649->rgb(220,80,80)
Erasure$Eraser.selectFrom$1(Trees$Tree, Trees$Tree, Names$Name):721->rgb(211,66,66)
Erasure$Eraser.typed1(Trees$Tree, int, Types$Type):784->rgb(247,119,119)
Erasure$Eraser.typed1(Trees$Tree, int, Types$Type):814->rgb(205,58,58)
Erasure$Eraser.typed1(Trees$Tree, int, Types$Type):817->rgb(245,116,116)
Erasure$Eraser.typed1(Trees$Tree, int, Types$Type):818->rgb(211,67,67)
Erasure$Eraser.typed1(Trees$Tree, int, Types$Type):820->rgb(240,109,109)
Erasure$ErasureMap.$anonfun$apply$1(Erasure$ErasureMap, Types$Type):127->rgb(225,87,87)
Erasure$ErasureMap.apply(Object):101->rgb(203,54,54)
Erasure$ErasureMap.apply(Types$Type):115->rgb(236,102,102)
Erasure$ErasureMap.apply(Types$Type):122->rgb(231,95,95)
Erasure$ErasureMap.apply(Types$Type):124->rgb(233,98,98)
Erasure$ErasureMap.apply(Types$Type):127->rgb(211,67,67)
Erasure$ErasureMap.apply(Types$Type):128->rgb(213,70,70)
Erasure$ErasureMap.apply(Types$Type):130->rgb(224,85,85)
Erasure$ErasureMap.apply(Types$Type):131->rgb(215,72,72)
Erasure$ErasureMap.apply(Types$Type):132->rgb(246,118,118)
Erasure$ErasureMap.apply(Types$Type):135->rgb(210,65,65)
Erasure$ErasureMap.apply(Types$Type):140->rgb(247,119,119)
Erasure$ErasureMap.apply(Types$Type):141->rgb(231,95,95)
Erasure$ErasureMap.apply(Types$Type):144->rgb(232,97,97)
Erasure$ErasureMap.apply(Types$Type):154->rgb(221,80,80)
Erasure$ErasureMap.apply(Types$Type):163->rgb(246,117,117)
Erasure$ErasureMap.apply(Types$Type):170->rgb(246,118,118)
Erasure$ErasureMap.applyInArray(Types$Type):174->rgb(247,118,118)
Erasure$ErasureMap.eraseNormalClassRef(Types$TypeRef):106->rgb(212,67,67)
Erasure$ErasureMap.eraseNormalClassRef(Types$TypeRef):109->rgb(218,77,77)
Erasure$ErasureTransformer$$anon$1.$anonfun$transform$3(Erasure$ErasureTransformer$$anon$1, Trees$Tree):1268->rgb(222,82,82)
Erasure$ErasureTransformer$$anon$1.<init>(Erasure$ErasureTransformer):962->rgb(233,99,99)
Erasure$ErasureTransformer$$anon$1.preErase(Trees$Tree):1148->rgb(230,94,94)
Erasure$ErasureTransformer$$anon$1.preErase(Trees$Tree):1157->rgb(222,82,82)
Erasure$ErasureTransformer$$anon$1.preErase(Trees$Tree):1211->rgb(250,122,122)
Erasure$ErasureTransformer$$anon$1.preErase(Trees$Tree):1223->rgb(248,119,119)
Erasure$ErasureTransformer$$anon$1.preErase(Trees$Tree):1224->rgb(242,111,111)
Erasure$ErasureTransformer$$anon$1.preErase(Trees$Tree):1241->rgb(212,67,67)
Erasure$ErasureTransformer$$anon$1.preErase(Trees$Tree):1242->rgb(205,58,58)
Erasure$ErasureTransformer$$anon$1.preEraseApply(Trees$Apply):1132->rgb(226,88,88)
Erasure$ErasureTransformer$$anon$1.preEraseApply(Trees$Apply):1138->rgb(200,51,51)
Erasure$ErasureTransformer$$anon$1.preEraseApply(Trees$Apply):1142->rgb(245,116,116)
Erasure$ErasureTransformer$$anon$1.preEraseAsInstanceOf$1(Trees$Apply, Trees$Tree):977->rgb(201,51,51)
Erasure$ErasureTransformer$$anon$1.preEraseNormalApply(Trees$Apply):1028->rgb(203,55,55)
Erasure$ErasureTransformer$$anon$1.preEraseNormalApply(Trees$Apply):1035->rgb(200,50,50)
Erasure$ErasureTransformer$$anon$1.preEraseNormalApply(Trees$Apply):1036->rgb(208,62,62)
Erasure$ErasureTransformer$$anon$1.transform(Trees$Tree):1256->rgb(244,115,115)
Erasure$ErasureTransformer$$anon$1.transform(Trees$Tree):1258->rgb(213,69,69)
Erasure$ErasureTransformer$$anon$1.transform(Trees$Tree):1265->rgb(238,106,106)
Erasure$ErasureTransformer$$anon$1.transform(Trees$Tree):1268->rgb(231,95,95)
Erasure$ErasureTransformer$$anon$1.transform(Trees$Tree):1274->rgb(249,122,122)
Erasure$ErasureTransformer$$anon$1.transform(Trees$Tree):1275->rgb(205,58,58)
Erasure$ErasureTransformer$$anon$1.transform(Trees$Tree):1279->rgb(212,68,68)
Erasure$ErasureTransformer$$anon$1.transform(Trees$TreeApi):962->rgb(222,82,82)
Erasure$ErasureTransformer$DoubleDefsCursor.<init>(Erasure$ErasureTransformer, Symbols$Symbol):895->rgb(246,117,117)
Erasure$ErasureTransformer$DoubleDefsCursor.exclude(Symbols$Symbol):899->rgb(215,72,72)
Erasure$ErasureTransformer.$anonfun$checkNoDeclaredDoubleDefs$1(Scopes$Scope):877->rgb(224,85,85)
Erasure$ErasureTransformer.$anonfun$checkNoDeclaredDoubleDefs$2(Symbols$Symbol):877->rgb(254,129,129)
Erasure$ErasureTransformer.$anonfun$checkNoDoubleDefs$2(SymbolPairs$SymbolPair):918->rgb(240,108,108)
Erasure$ErasureTransformer.$anonfun$checkNoDoubleDefs$3$adapted(Erasure$ErasureTransformer, SymbolPairs$SymbolPair):920->rgb(249,122,122)
Erasure$ErasureTransformer.$anonfun$checkNoDoubleDefs$3(Erasure$ErasureTransformer, SymbolPairs$SymbolPair):920->rgb(214,70,70)
Erasure$ErasureTransformer.$anonfun$transform$4(Erasure$ErasureTransformer, Trees$Tree, Trees$Tree):1292->rgb(217,76,76)
Erasure$ErasureTransformer.$anonfun$transform$4(Erasure$ErasureTransformer, Trees$Tree, Trees$Tree):1295->rgb(210,64,64)
Erasure$ErasureTransformer.<init>(Erasure, CompilationUnits$CompilationUnit):962->rgb(230,94,94)
Erasure$ErasureTransformer.addBridges(List, Symbols$Symbol):943->rgb(228,91,91)
Erasure$ErasureTransformer.bridgeDefs(Symbols$Symbol):937->rgb(218,77,77)
Erasure$ErasureTransformer.checkNoDeclaredDoubleDefs(Symbols$Symbol):877->rgb(235,101,101)
Erasure$ErasureTransformer.isErasureDoubleDef$1(SymbolPairs$SymbolPair):918->rgb(245,115,115)
Erasure$ErasureTransformer.scala$tools$nsc$transform$Erasure$ErasureTransformer$$checkNoDoubleDefs(Symbols$Symbol):914->rgb(205,57,57)
Erasure$ErasureTransformer.scala$tools$nsc$transform$Erasure$ErasureTransformer$$checkNoDoubleDefs(Symbols$Symbol):920->rgb(208,61,61)
Erasure$ErasureTransformer.transform(Trees$Tree):1289->rgb(207,60,60)
Erasure$ErasureTransformer.transform(Trees$Tree):1291->rgb(221,81,81)
Erasure$ErasureTransformer.transform(Trees$TreeApi):837->rgb(244,114,114)
Erasure$NeedsSigCollector$.$anonfun$traverse$3(Erasure$NeedsSigCollector$, Types$Type):62->rgb(212,68,68)
Erasure$NeedsSigCollector$.traverse(Types$Type):50->rgb(254,129,129)
Erasure$NeedsSigCollector$.traverse(Types$Type):53->rgb(217,76,76)
Erasure$NeedsSigCollector$.traverse(Types$Type):54->rgb(227,89,89)
Erasure$NeedsSigCollector$.traverse(Types$Type):62->rgb(241,110,110)
Erasure$mixinTransformer$.$anonfun$transform$1(Erasure$mixinTransformer$, Symbols$Symbol, Trees$Tree):435->rgb(247,119,119)
Erasure$mixinTransformer$.addMixinConstructorCalls(Trees$Tree, Symbols$Symbol):427->rgb(232,97,97)
Erasure$mixinTransformer$.mixinConstructorCalls$1(Trees$Tree, Symbols$Symbol):409->rgb(236,102,102)
Erasure$mixinTransformer$.transform(Trees$Tree):435->rgb(233,98,98)
Erasure$mixinTransformer$.transform(Trees$Tree):442->rgb(205,58,58)
Erasure$mixinTransformer$.transform(Trees$TreeApi):402->rgb(237,104,104)
Erasure$specialScalaErasure$.eraseDerivedValueClassRef(Types$TypeRef):283->rgb(249,121,121)
Erasure.$anonfun$isJvmAccessible$1(Symbols$Symbol, Contexts$Context):1347->rgb(252,127,127)
Erasure.$anonfun$isTypeParameterInSig$1(Symbols$Symbol, Symbols$Symbol):85->rgb(220,79,79)
Erasure.$anonfun$javaSig$1(Erasure, Symbols$Symbol, Types$Type, Function1):193->rgb(221,81,81)
Erasure.$anonfun$minimizeParents$2$adapted(Symbols$Symbol, Types$Type):175->rgb(253,128,128)
Erasure.$anonfun$minimizeParents$2(Symbols$Symbol, Types$Type):175->rgb(224,85,85)
Erasure.$anonfun$minimizeParents$3$adapted(Function1, Symbols$Symbol, Types$Type):179->rgb(240,108,108)
Erasure.erasedValueClassArg$(Erasure, Types$TypeRef):80->rgb(254,129,129)
Erasure.erasedValueClassArg(Types$TypeRef):15->rgb(222,82,82)
Erasure.erasedValueClassArg(Types$TypeRef):84->rgb(253,127,127)
Erasure.erasure$(Erasure, Symbols$Symbol):208->rgb(241,110,110)
Erasure.erasure(Symbols$Symbol):15->rgb(227,89,89)
Erasure.erasure(Symbols$Symbol):209->rgb(243,113,113)
Erasure.formalTypes$default$3():15->rgb(239,108,108)
Erasure.formalTypes(List, int, boolean, boolean):15->rgb(210,65,65)
Erasure.fullNameInSig$1(Symbols$Symbol, StringBuilder):246->rgb(237,104,104)
Erasure.hiBounds(Types$TypeBounds):158->rgb(209,64,64)
Erasure.isJvmAccessible(Symbols$Symbol, Contexts$Context):1347->rgb(243,113,113)
Erasure.isTypeParameterInSig(Symbols$Symbol, Symbols$Symbol):85->rgb(253,127,127)
Erasure.javaSig0(Symbols$Symbol, Types$Type, Function1):384->rgb(215,73,73)
Erasure.javaSig0(Symbols$Symbol, Types$Type, Function1):385->rgb(211,66,66)
Erasure.javaSig0(Symbols$Symbol, Types$Type, Function1):387->rgb(208,62,62)
Erasure.javaSig0(Symbols$Symbol, Types$Type, Function1):392->rgb(225,87,87)
Erasure.jsig$1(Types$Type, List, boolean, boolean, Symbols$Symbol, Function1, StringBuilder, boolean):219->rgb(216,73,73)
Erasure.jsig$1(Types$Type, List, boolean, boolean, Symbols$Symbol, Function1, StringBuilder, boolean):232->rgb(216,74,74)
Erasure.jsig$1(Types$Type, List, boolean, boolean, Symbols$Symbol, Function1, StringBuilder, boolean):233->rgb(251,124,124)
Erasure.jsig$1(Types$Type, List, boolean, boolean, Symbols$Symbol, Function1, StringBuilder, boolean):256->rgb(244,114,114)
Erasure.jsig$1(Types$Type, List, boolean, boolean, Symbols$Symbol, Function1, StringBuilder, boolean):276->rgb(240,109,109)
Erasure.jsig$1(Types$Type, List, boolean, boolean, Symbols$Symbol, Function1, StringBuilder, boolean):278->rgb(202,53,53)
Erasure.jsig$1(Types$Type, List, boolean, boolean, Symbols$Symbol, Function1, StringBuilder, boolean):297->rgb(238,105,105)
Erasure.jsig$1(Types$Type, List, boolean, boolean, Symbols$Symbol, Function1, StringBuilder, boolean):308->rgb(253,128,128)
Erasure.jsig$1(Types$Type, List, boolean, boolean, Symbols$Symbol, Function1, StringBuilder, boolean):315->rgb(243,112,112)
Erasure.jsig$1(Types$Type, List, boolean, boolean, Symbols$Symbol, Function1, StringBuilder, boolean):324->rgb(224,85,85)
Erasure.jsig$1(Types$Type, List, boolean, boolean, Symbols$Symbol, Function1, StringBuilder, boolean):332->rgb(214,70,70)
Erasure.jsig$1(Types$Type, List, boolean, boolean, Symbols$Symbol, Function1, StringBuilder, boolean):362->rgb(242,111,111)
Erasure.jsig$1(Types$Type, List, boolean, boolean, Symbols$Symbol, Function1, StringBuilder, boolean):364->rgb(229,93,93)
Erasure.minimizeParents(Symbols$Symbol, List):175->rgb(214,71,71)
Erasure.minimizeParents(Symbols$Symbol, List):177->rgb(213,69,69)
Erasure.minimizeParents(Symbols$Symbol, List):181->rgb(224,86,86)
Erasure.needs$1(Types$Type):74->rgb(206,59,59)
Erasure.needsJavaSig(Types$Type, List):73->rgb(200,50,50)
Erasure.needsJavaSig(Types$Type, List):75->rgb(215,72,72)
Erasure.newTransformer(CompilationUnits$CompilationUnit):31->rgb(224,85,85)
Erasure.newTyper(Contexts$Context):15->rgb(252,126,126)
Erasure.newTyper(Contexts$Context):468->rgb(220,80,80)
Erasure.pluginsEnterSym(Namers$Namer, Trees$Tree):15->rgb(226,87,87)
Erasure.pluginsTyped(Types$Type, Typers$Typer, Trees$Tree, int, Types$Type):15->rgb(227,89,89)
Erasure.rootContext(CompilationUnits$CompilationUnit, Trees$Tree, boolean, boolean):15->rgb(223,84,84)
Erasure.rootContextPostTyper(CompilationUnits$CompilationUnit, Trees$Tree):15->rgb(228,91,91)
Erasure.rootImports(CompilationUnits$CompilationUnit):15->rgb(200,51,51)
Erasure.scalaErasure():15->rgb(253,127,127)
Erasure.specialErasure$(Erasure, Symbols$Symbol, Types$Type):217->rgb(222,82,82)
Erasure.specialErasure(Symbols$Symbol, Types$Type):15->rgb(246,118,118)
Erasure.specialErasure(Symbols$Symbol, Types$Type):218->rgb(220,80,80)
Erasure.specialErasure(Symbols$Symbol, Types$Type):223->rgb(240,109,109)
Erasure.transformInfo$(Erasure, Symbols$Symbol, Types$Type):360->rgb(210,65,65)
Erasure.transformInfo(Symbols$Symbol, Types$Type):15->rgb(236,102,102)
Erasure.transformInfo(Symbols$Symbol, Types$Type):398->rgb(225,87,87)
Erasure.unsuppressMacroExpansion(Trees$Tree):15->rgb(231,95,95)
EtaExpansion.$anonfun$etaExpand$4(EtaExpansion, Symbols$Symbol):109->rgb(209,63,63)
EtaExpansion.etaExpand$(EtaExpansion, CompilationUnits$CompilationUnit, Trees$Tree, Typers$Typer):40->rgb(219,78,78)
EtaExpansion.etaExpand(CompilationUnits$CompilationUnit, Trees$Tree, Typers$Typer):123->rgb(235,101,101)
EtaExpansion.expand$1(Trees$Tree, Types$Type):103->rgb(223,84,84)
ExceptionThrownEvent.<init>(EventToken):18->rgb(202,54,54)
Executors$RunnableAdapter.call():511->rgb(224,86,86)
ExistentialsAndSkolems$Deskolemizer$1.complete(Symbols$Symbol):32->rgb(231,95,95)
ExistentialsAndSkolems.$anonfun$existentialBoundsExcludingHidden$2(ExistentialsAndSkolems, List, Symbols$Symbol):65->rgb(230,94,94)
ExistentialsAndSkolems.$anonfun$existentialTransform$1(ExistentialsAndSkolems, Symbols$Symbol, Map, Symbols$Symbol):89->rgb(205,57,57)
ExistentialsAndSkolems.$anonfun$packSymbols$1(ExistentialsAndSkolems, List, Types$Type):117->rgb(226,88,88)
ExistentialsAndSkolems.existentialBoundsExcludingHidden(List):64->rgb(208,62,62)
ExistentialsAndSkolems.hiBound$1(Symbols$Symbol, List):54->rgb(222,82,82)
ExistentialsAndSkolems.isRawParameter$(ExistentialsAndSkolems, Symbols$Symbol):42->rgb(200,51,51)
ExistentialsAndSkolems.isRawParameter(Symbols$Symbol):43->rgb(228,91,91)
ExistentialsAndSkolems.packSymbols$(ExistentialsAndSkolems, List, Types$Type, Symbols$Symbol):115->rgb(219,78,78)
ExistentialsAndSkolems.packSymbols(List, Types$Type, Symbols$Symbol):106->rgb(250,123,123)
ExistentialsAndSkolems.packSymbols(List, Types$Type, Symbols$Symbol):87->rgb(245,116,116)
ExistentialsAndSkolems.packSymbols(List, Types$Type, Symbols$Symbol):88->rgb(208,62,62)
ExplicitOuter$ExplicitOuterTransformer.$anonfun$transform$2(ExplicitOuter$ExplicitOuterTransformer, ListBuffer):374->rgb(200,50,50)
ExplicitOuter$ExplicitOuterTransformer.$anonfun$transform$2(ExplicitOuter$ExplicitOuterTransformer, ListBuffer):375->rgb(201,51,51)
ExplicitOuter$ExplicitOuterTransformer.$anonfun$transform$2(ExplicitOuter$ExplicitOuterTransformer, ListBuffer):378->rgb(230,93,93)
ExplicitOuter$ExplicitOuterTransformer.$anonfun$transformUnit$1(ExplicitOuter$ExplicitOuterTransformer, CompilationUnits$CompilationUnit):478->rgb(253,127,127)
ExplicitOuter$ExplicitOuterTransformer.<init>(ExplicitOuter, CompilationUnits$CompilationUnit):323->rgb(243,113,113)
ExplicitOuter$ExplicitOuterTransformer.outerAccessorDef():334->rgb(235,101,101)
ExplicitOuter$ExplicitOuterTransformer.outerAccessorDef():335->rgb(222,82,82)
ExplicitOuter$ExplicitOuterTransformer.outerFieldDef():328->rgb(244,114,114)
ExplicitOuter$ExplicitOuterTransformer.scala$tools$nsc$transform$ExplicitOuter$ExplicitOuterTransformer$$$outer():323->rgb(212,68,68)
ExplicitOuter$ExplicitOuterTransformer.super$transformUnit(CompilationUnits$CompilationUnit):478->rgb(203,55,55)
ExplicitOuter$ExplicitOuterTransformer.transform(Trees$Tree):364->rgb(242,112,112)
ExplicitOuter$ExplicitOuterTransformer.transform(Trees$Tree):371->rgb(243,113,113)
ExplicitOuter$ExplicitOuterTransformer.transform(Trees$Tree):384->rgb(218,76,76)
ExplicitOuter$ExplicitOuterTransformer.transform(Trees$Tree):390->rgb(204,56,56)
ExplicitOuter$ExplicitOuterTransformer.transform(Trees$Tree):408->rgb(253,128,128)
ExplicitOuter$ExplicitOuterTransformer.transform(Trees$Tree):423->rgb(203,55,55)
ExplicitOuter$ExplicitOuterTransformer.transform(Trees$Tree):426->rgb(202,53,53)
ExplicitOuter$ExplicitOuterTransformer.transform(Trees$Tree):430->rgb(242,112,112)
ExplicitOuter$ExplicitOuterTransformer.transform(Trees$Tree):470->rgb(226,89,89)
ExplicitOuter$ExplicitOuterTransformer.transform(Trees$Tree):472->rgb(219,78,78)
ExplicitOuter$ExplicitOuterTransformer.transform(Trees$TreeApi):323->rgb(206,58,58)
ExplicitOuter$ExplicitOuterTransformer.transformUnit(CompilationUnits$CompilationUnit):478->rgb(229,92,92)
ExplicitOuter$OuterPathTransformer.<init>(ExplicitOuter, CompilationUnits$CompilationUnit):205->rgb(249,122,122)
ExplicitOuter$OuterPathTransformer.outerParam_$eq(Symbols$Symbol):207->rgb(212,68,68)
ExplicitOuter$OuterPathTransformer.scala$reflect$internal$Trees$UnderConstructionTransformer$$$outer():-1->rgb(222,82,82)
ExplicitOuter$OuterPathTransformer.scala$reflect$internal$Trees$UnderConstructionTransformer$$super$transform(Trees$Tree):205->rgb(238,106,106)
ExplicitOuter$OuterPathTransformer.scala$tools$nsc$transform$ExplicitOuter$OuterPathTransformer$$$outer():205->rgb(200,51,51)
ExplicitOuter$OuterPathTransformer.transform(Trees$Tree):272->rgb(236,102,102)
ExplicitOuter$OuterPathTransformer.transform(Trees$Tree):282->rgb(243,113,113)
ExplicitOuter$OuterPathTransformer.transform(Trees$Tree):284->rgb(226,88,88)
ExplicitOuter.$anonfun$outerAccessor$1$adapted(Symbols$Symbol, Symbols$Symbol):80->rgb(240,108,108)
ExplicitOuter.$anonfun$outerAccessor$1(Symbols$Symbol, Symbols$Symbol):80->rgb(218,76,76)
ExplicitOuter.$anonfun$transformInfo$1(ExplicitOuter, Scopes$Scope, Symbols$Symbol, ObjectRef, Symbols$Symbol):179->rgb(243,113,113)
ExplicitOuter.$anonfun$transformInfo$2(ExplicitOuter, Symbols$Symbol):179->rgb(241,109,109)
ExplicitOuter.newTransformer(CompilationUnits$CompilationUnit):37->rgb(202,53,53)
ExplicitOuter.outerAccessor(Symbols$Symbol):80->rgb(228,90,90)
ExplicitOuter.scala$tools$nsc$transform$ExplicitOuter$$outerField(Symbols$Symbol):64->rgb(201,52,52)
ExplicitOuter.transformInfo(Symbols$Symbol, Types$Type):158->rgb(236,102,102)
ExplicitOuter.transformInfo(Symbols$Symbol, Types$Type):178->rgb(203,54,54)
ExplicitOuter.transformInfo(Symbols$Symbol, Types$Type):194->rgb(227,90,90)
ExtensionMethods$Extender.transform(Trees$Tree):198->rgb(219,78,78)
ExtensionMethods$Extender.transform(Trees$Tree):262->rgb(232,96,96)
ExtensionMethods$Extender.transform(Trees$TreeApi):125->rgb(220,80,80)
ExtensionMethods$Extender.transformStats(List, Symbols$Symbol):267->rgb(219,78,78)
ExtensionMethods$Extender.transformStats(List, Symbols$SymbolApi):125->rgb(210,65,65)
ExtensionMethods.$anonfun$extensionMethod$1(ExtensionMethods, Symbols$Symbol):70->rgb(210,65,65)
ExtensionMethods.companionModuleForce(Symbols$Symbol):65->rgb(209,63,63)
ExtensionMethods.extensionMethod(Symbols$Symbol):69->rgb(209,64,64)
FastTrack$$anonfun$$nestedInanonfun$fastTrackCache$1$1.$anonfun$applyOrElse$1(FastTrack$$anonfun$$nestedInanonfun$fastTrackCache$1$1, Trees$Tree, Context):49->rgb(247,118,118)
FastTrack$FastTrackEntry.apply(Macros$MacroArgs):40->rgb(248,120,120)
FastTrack$FastTrackEntry.apply(Object):35->rgb(253,127,127)
FastTrack.$anonfun$fastTrackCache$1(FastTrack):50->rgb(226,88,88)
FastTrack.$anonfun$fastTrackCache$1(FastTrack):52->rgb(208,62,62)
FastTrack.$anonfun$fastTrackCache$1(FastTrack):54->rgb(224,86,86)
FastTrack.get(Symbols$Symbol):22->rgb(216,73,73)
FieldInsnNode.accept(MethodVisitor):101->rgb(203,55,55)
Fields$FieldMemoization.<init>(Fields, Symbols$Symbol, Symbols$Symbol):155->rgb(206,59,59)
Fields$FieldsTransformer.$anonfun$fieldsAndAccessors$2(Fields$FieldsTransformer, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):657->rgb(216,74,74)
Fields$FieldsTransformer.$anonfun$fieldsAndAccessors$3(Symbols$Symbol):683->rgb(243,113,113)
Fields$FieldsTransformer.$anonfun$fieldsAndAccessors$4$adapted(Fields$FieldsTransformer, Symbols$Symbol):683->rgb(214,70,70)
Fields$FieldsTransformer.$anonfun$fieldsAndAccessors$4(Fields$FieldsTransformer, Symbols$Symbol):683->rgb(243,113,113)
Fields$FieldsTransformer.$anonfun$fieldsAndAccessors$5(Fields$FieldsTransformer, Symbols$Symbol, AccessorSynthesis$CheckedAccessorTreeSynthesis$SynthLazyAccessorsIn, Symbols$Symbol):684->rgb(207,60,60)
Fields$FieldsTransformer.$anonfun$fieldsAndAccessors$5(Fields$FieldsTransformer, Symbols$Symbol, AccessorSynthesis$CheckedAccessorTreeSynthesis$SynthLazyAccessorsIn, Symbols$Symbol):685->rgb(206,59,59)
Fields$FieldsTransformer.$anonfun$fieldsAndAccessors$5(Fields$FieldsTransformer, Symbols$Symbol, AccessorSynthesis$CheckedAccessorTreeSynthesis$SynthLazyAccessorsIn, Symbols$Symbol):686->rgb(216,73,73)
Fields$FieldsTransformer.$anonfun$fieldsAndAccessors$5(Fields$FieldsTransformer, Symbols$Symbol, AccessorSynthesis$CheckedAccessorTreeSynthesis$SynthLazyAccessorsIn, Symbols$Symbol):687->rgb(248,120,120)
Fields$FieldsTransformer.$anonfun$fieldsAndAccessors$5(Fields$FieldsTransformer, Symbols$Symbol, AccessorSynthesis$CheckedAccessorTreeSynthesis$SynthLazyAccessorsIn, Symbols$Symbol):688->rgb(210,64,64)
Fields$FieldsTransformer.$anonfun$transformStats$3(Fields$FieldsTransformer, Symbols$Symbol, Trees$Tree):776->rgb(209,63,63)
Fields$FieldsTransformer.$anonfun$transformStats$4(Fields$FieldsTransformer, Trees$Tree):776->rgb(220,79,79)
Fields$FieldsTransformer.fieldsAndAccessors(Symbols$Symbol):683->rgb(230,94,94)
Fields$FieldsTransformer.getterBody$1(Symbols$Symbol, Symbols$Symbol):643->rgb(229,92,92)
Fields$FieldsTransformer.mkAccessor(Symbols$Symbol, Trees$Tree):547->rgb(229,93,93)
Fields$FieldsTransformer.mkTypedValDef(Symbols$Symbol, Trees$Tree):552->rgb(228,90,90)
Fields$FieldsTransformer.moduleAccessorBody$1(Symbols$Symbol, Symbols$Symbol):667->rgb(214,71,71)
Fields$FieldsTransformer.setterBody$1(Symbols$Symbol, Symbols$Symbol):657->rgb(207,61,61)
Fields$FieldsTransformer.superLazy$1(Symbols$Symbol, Symbols$Symbol, AccessorSynthesis$CheckedAccessorTreeSynthesis$SynthLazyAccessorsIn):680->rgb(205,58,58)
Fields$FieldsTransformer.transform(Trees$Tree):718->rgb(251,125,125)
Fields$FieldsTransformer.transform(Trees$Tree):725->rgb(216,73,73)
Fields$FieldsTransformer.transform(Trees$Tree):736->rgb(235,101,101)
Fields$FieldsTransformer.transform(Trees$Tree):746->rgb(234,100,100)
Fields$FieldsTransformer.transform(Trees$Tree):755->rgb(238,105,105)
Fields$FieldsTransformer.transform(Trees$TreeApi):540->rgb(220,79,79)
Fields$FieldsTransformer.transformStats(List, Symbols$Symbol):769->rgb(240,108,108)
Fields$FieldsTransformer.transformStats(List, Symbols$Symbol):776->rgb(245,115,115)
Fields$FieldsTransformer.transformStats(List, Symbols$SymbolApi):540->rgb(237,104,104)
Fields$FieldsTransformer.transformTermsAtExprOwner(Symbols$Symbol, Trees$Tree):763->rgb(203,54,54)
Fields$FieldsTransformer.typedPos(Position, Trees$Tree):541->rgb(210,64,64)
Fields$synthFieldsAndAccessors$.$anonfun$apply$1(Fields$synthFieldsAndAccessors$, Symbols$Symbol, ListBuffer, Symbols$Symbol):321->rgb(203,54,54)
Fields$synthFieldsAndAccessors$.$anonfun$apply$1(Fields$synthFieldsAndAccessors$, Symbols$Symbol, ListBuffer, Symbols$Symbol):348->rgb(205,57,57)
Fields$synthFieldsAndAccessors$.$anonfun$apply$5(Fields$synthFieldsAndAccessors$, Symbols$Symbol, Types$Type, AccessorSynthesis$CheckedAccessorSymbolSynth, Symbols$Symbol):408->rgb(200,51,51)
Fields$synthFieldsAndAccessors$.apply(Types$Type):319->rgb(205,57,57)
Fields$synthFieldsAndAccessors$.apply(Types$Type):404->rgb(226,88,88)
Fields$synthFieldsAndAccessors$.apply(Types$Type):520->rgb(242,112,112)
Fields$synthFieldsAndAccessors$.newTraitSetter(Symbols$Symbol, Symbols$Symbol):261->rgb(216,74,74)
Fields.castHack(Trees$Tree, Types$Type):538->rgb(214,71,71)
Fields.checkAndClear(long, Symbols$Symbol):128->rgb(226,89,89)
Fields.checkAndClearNeedsTrees(Symbols$Symbol):126->rgb(212,68,68)
Fields.fieldMemoizationIn(Symbols$Symbol, Symbols$Symbol):177->rgb(219,77,77)
Fields.fieldTypeForSetterIn(Symbols$Symbol, Types$Type):165->rgb(203,55,55)
Fields.fieldTypeOfAccessorIn(Symbols$Symbol, Types$Type):169->rgb(218,77,77)
Fields.scala$tools$nsc$transform$Fields$$moduleInit(Symbols$Symbol, Symbols$Symbol):214->rgb(214,70,70)
Fields.transformInfo(Symbols$Symbol, Types$Type):84->rgb(206,58,58)
FileSystemProvider.newOutputStream(Path, OpenOption[]):434->rgb(250,124,124)
FileUtils$.stripClassExtension(String):59->rgb(205,58,58)
FileZipArchive$LeakyEntry.input():157->rgb(219,78,78)
FileZipArchive$LeakyEntry.sizeOption():158->rgb(208,62,62)
Files.newOutputStream(Path, OpenOption[]):216->rgb(241,109,109)
Files.write(Path, byte[], OpenOption[]):3292->rgb(203,55,55)
Files.write(Path, byte[], OpenOption[]):3300->rgb(254,129,129)
FindMembers$FindMember.<init>(SymbolTable, Types$Type, Names$Name, long, long, boolean):219->rgb(212,68,68)
FindMembers$FindMember.<init>(SymbolTable, Types$Type, Names$Name, long, long, boolean):224->rgb(202,53,53)
FindMembers$FindMember.addMemberIfNew(Symbols$Symbol):242->rgb(217,75,75)
FindMembers$FindMember.addMemberIfNew(Symbols$Symbol):254->rgb(201,52,52)
FindMembers$FindMember.member0Tpe():269->rgb(213,69,69)
FindMembers$FindMember.memberTypeLow(Symbols$Symbol):274->rgb(249,121,121)
FindMembers$FindMember.result():218->rgb(203,55,55)
FindMembers$FindMember.result():277->rgb(231,95,95)
FindMembers$FindMember.result():278->rgb(223,83,83)
FindMembers$FindMember.result():279->rgb(220,79,79)
FindMembers$FindMember.result():280->rgb(248,120,120)
FindMembers$FindMember.result():285->rgb(220,80,80)
FindMembers$FindMember.scala$reflect$internal$tpe$FindMembers$FindMember$$$outer():218->rgb(235,102,102)
FindMembers$FindMember.shortCircuit(Symbols$Symbol):232->rgb(238,105,105)
FindMembers$FindMemberBase.$anonfun$apply$1(FindMembers$FindMemberBase):47->rgb(241,109,109)
FindMembers$FindMemberBase.<init>(SymbolTable, Types$Type, Names$Name, long, long):17->rgb(240,108,108)
FindMembers$FindMemberBase.admitPrivate$1(Symbols$Symbol, Symbols$Symbol, boolean, List, boolean):141->rgb(201,51,51)
FindMembers$FindMemberBase.apply():46->rgb(202,53,53)
FindMembers$FindMemberBase.apply():47->rgb(248,119,119)
FindMembers$FindMemberBase.apply():48->rgb(232,97,97)
FindMembers$FindMemberBase.apply():49->rgb(236,103,103)
FindMembers$FindMemberBase.isNewMember(Symbols$Symbol, Symbols$Symbol):155->rgb(222,83,83)
FindMembers$FindMemberBase.isNewMember(Symbols$Symbol, Symbols$Symbol):156->rgb(238,106,106)
FindMembers$FindMemberBase.isNewMember(Symbols$Symbol, Symbols$Symbol):157->rgb(235,101,101)
FindMembers$FindMemberBase.isNewMember(Symbols$Symbol, Symbols$Symbol):158->rgb(248,120,120)
FindMembers$FindMemberBase.isPotentialMember(Symbols$Symbol, long, Symbols$Symbol, boolean, List):149->rgb(212,68,68)
FindMembers$FindMemberBase.memberTypeHi(Symbols$Symbol):170->rgb(206,59,59)
FindMembers$FindMemberBase.memberTypeLow(Symbols$Symbol):178->rgb(207,60,60)
FindMembers$FindMemberBase.narrowForFindMember(Types$Type):188->rgb(205,57,57)
FindMembers$FindMemberBase.narrowForFindMember(Types$Type):189->rgb(220,79,79)
FindMembers$FindMemberBase.searchConcreteThenDeferred():56->rgb(244,114,114)
FindMembers$FindMemberBase.searchConcreteThenDeferred():58->rgb(253,128,128)
FindMembers$FindMemberBase.searchConcreteThenDeferred():59->rgb(228,91,91)
FindMembers$FindMemberBase.selectorClass():26->rgb(201,51,51)
FindMembers$FindMemberBase.self():40->rgb(200,50,50)
FindMembers$FindMemberBase.walkBaseClasses(long, long):103->rgb(243,113,113)
FindMembers$FindMemberBase.walkBaseClasses(long, long):108->rgb(220,79,79)
FindMembers$FindMemberBase.walkBaseClasses(long, long):71->rgb(203,54,54)
FindMembers$FindMemberBase.walkBaseClasses(long, long):87->rgb(212,67,67)
FindMembers$FindMemberBase.walkBaseClasses(long, long):88->rgb(254,129,129)
FindMembers$FindMemberBase.walkBaseClasses(long, long):89->rgb(226,88,88)
FindMembers$FindMemberBase.walkBaseClasses(long, long):90->rgb(217,75,75)
FindMembers$FindMemberBase.walkBaseClasses(long, long):91->rgb(239,107,107)
FindMembers$FindMemberBase.walkBaseClasses(long, long):96->rgb(249,121,121)
FindMembers$FindMemberBase.walkBaseClasses(long, long):97->rgb(210,64,64)
FindMembers$FindMemberBase.walkBaseClasses(long, long):98->rgb(243,113,113)
FindMembers$FindMembers.<init>(SymbolTable, Types$Type, long, long):194->rgb(224,85,85)
FindMembers$FindMembers.addMemberIfNew(Symbols$Symbol):205->rgb(246,116,116)
FindMembers$FindMembers.addMemberIfNew(Symbols$Symbol):206->rgb(219,77,77)
FindMembers$FindMembers.addMemberIfNew(Symbols$Symbol):210->rgb(251,125,125)
FindMembers$FindMembers.addMemberIfNew(Symbols$Symbol):212->rgb(220,79,79)
FindMembers$FindMembers.addMemberIfNew(Symbols$Symbol):214->rgb(225,87,87)
FlatHashTable$$anon$1.hasNext():209->rgb(209,64,64)
FlatHashTable$$anon$1.i():206->rgb(219,78,78)
FlatHashTable$$anon$1.next():212->rgb(237,105,105)
FlatHashTable.$init$(FlatHashTable):34->rgb(209,63,63)
FlatHashTable.addElem$(FlatHashTable, Object):139->rgb(223,83,83)
FlatHashTable.addElem(Object):140->rgb(251,125,125)
FlatHashTable.addEntry$(FlatHashTable, Object):148->rgb(227,89,89)
FlatHashTable.addEntry(Object):149->rgb(251,125,125)
FlatHashTable.addEntry(Object):151->rgb(216,74,74)
FlatHashTable.addEntry(Object):160->rgb(226,88,88)
FlatHashTable.containsElem$(FlatHashTable, Object):121->rgb(249,121,121)
FlatHashTable.containsElem(Object):122->rgb(215,72,72)
FlatHashTable.findElemImpl(Object):129->rgb(249,122,122)
FlatHashTable.growTable():224->rgb(249,121,121)
Flatten$$anon$1.$anonfun$apply$2(Flatten$$anon$1, List, Scopes$Scope, Symbols$Symbol, ObjectRef):67->rgb(245,116,116)
Flatten$$anon$1.$anonfun$apply$2(Flatten$$anon$1, List, Scopes$Scope, Symbols$Symbol, ObjectRef):71->rgb(252,125,125)
Flatten$$anon$1.$anonfun$apply$2(Flatten$$anon$1, List, Scopes$Scope, Symbols$Symbol, ObjectRef):74->rgb(236,103,103)
Flatten$$anon$1.$anonfun$apply$3(Scopes$Scope, Scopes$Scope):67->rgb(231,95,95)
Flatten$$anon$1.$anonfun$apply$4(Scopes$Scope, Symbols$Symbol):67->rgb(234,99,99)
Flatten$$anon$1.$anonfun$apply$5(Symbols$Symbol):71->rgb(246,118,118)
Flatten$$anon$1.$anonfun$apply$6(Flatten$$anon$1, Scopes$Scope, Symbols$Symbol):76->rgb(250,123,123)
Flatten$$anon$1.apply(Types$Type):105->rgb(235,101,101)
Flatten$$anon$1.apply(Types$Type):59->rgb(202,53,53)
Flatten$$anon$1.apply(Types$Type):64->rgb(210,65,65)
Flatten$$anon$1.apply(Types$Type):98->rgb(230,94,94)
Flatten$$anon$1.apply(Types$Type):99->rgb(207,60,60)
Flatten$Flattener.postTransform(Trees$Tree):149->rgb(251,125,125)
Flatten$Flattener.postTransform(Trees$Tree):160->rgb(241,110,110)
Flatten$Flattener.transform(Trees$Tree):121->rgb(223,84,84)
Flatten$Flattener.transform(Trees$Tree):137->rgb(249,122,122)
Flatten$Flattener.transform(Trees$Tree):142->rgb(236,103,103)
Flatten$Flattener.transform(Trees$TreeApi):113->rgb(205,57,57)
Flatten$Flattener.transformStats(List, Symbols$Symbol):165->rgb(242,111,111)
Flatten$Flattener.transformStats(List, Symbols$SymbolApi):113->rgb(237,104,104)
Flatten.scala$tools$nsc$transform$Flatten$$isFlattenablePrefix(Types$Type):49->rgb(220,79,79)
Flatten.scala$tools$nsc$transform$Flatten$$isFlattenablePrefix(Types$Type):53->rgb(254,129,129)
Flatten.transformInfo(Symbols$Symbol, Types$Type):109->rgb(251,124,124)
ForkedMain.main(String[]):84->rgb(217,75,75)
ForkedRunner.run():72->rgb(249,121,121)
Frame.<init>(Frame):100->rgb(246,117,117)
Frame.<init>(Frame):99->rgb(234,100,100)
Frame.<init>(int, int):88->rgb(203,55,55)
Frame.execute(AbstractInsnNode, Interpreter):558->rgb(200,50,50)
Frame.execute(AbstractInsnNode, Interpreter):606->rgb(252,126,126)
Frame.execute(AbstractInsnNode, Interpreter):612->rgb(245,115,115)
Frame.execute(AbstractInsnNode, Interpreter):625->rgb(231,96,96)
Frame.execute(AbstractInsnNode, Interpreter):626->rgb(245,116,116)
Frame.execute(AbstractInsnNode, Interpreter):652->rgb(226,87,87)
Frame.execute(int, int, ClassWriter, Item):1181->rgb(231,95,95)
Frame.execute(int, int, ClassWriter, Item):1198->rgb(203,54,54)
Frame.execute(int, int, ClassWriter, Item):1210->rgb(226,88,88)
Frame.init(ClassWriter, int):779->rgb(233,98,98)
Frame.init(Frame):112->rgb(254,128,128)
Frame.merge(ClassWriter, Frame, int):1331->rgb(202,54,54)
Frame.merge(ClassWriter, Frame, int):1372->rgb(244,115,115)
Frame.pop(String):732->rgb(202,53,53)
Frame.pop(int):711->rgb(244,114,114)
Frame.push(ClassWriter, String):608->rgb(236,103,103)
Frame.push(int):580->rgb(231,95,95)
Frame.push(int):590->rgb(217,75,75)
FreshNameCreator.newName(String):25->rgb(223,84,84)
FreshNames.freshTermName$(FreshNames, String, FreshNameCreator):21->rgb(245,116,116)
FreshNames.freshTermName(String, FreshNameCreator):21->rgb(243,113,113)
Function$.$anonfun$untupled$1(Function1, Object, Object):108->rgb(214,70,70)
FutureTask.run():266->rgb(245,116,116)
GenBCode$BCodePhase.$anonfun$apply$1(GenBCode$BCodePhase, CompilationUnits$CompilationUnit):43->rgb(216,74,74)
GenBCode$BCodePhase.$anonfun$run$1(GenBCode$BCodePhase):52->rgb(219,78,78)
GenBCode$BCodePhase.$anonfun$run$1(GenBCode$BCodePhase):53->rgb(206,59,59)
GenBCode$BCodePhase.apply(CompilationUnits$CompilationUnit):43->rgb(246,116,116)
GenBCode$BCodePhase.apply(CompilationUnits$CompilationUnit):46->rgb(202,52,52)
GenBCode$BCodePhase.initialize():69->rgb(210,65,65)
GenBCode$BCodePhase.initialize():70->rgb(207,61,61)
GenBCode$BCodePhase.run():51->rgb(226,87,87)
GenBCode$BCodePhase.super$run():53->rgb(206,60,60)
GenBCode.phaseName():27->rgb(219,77,77)
GenMapFactory.apply(Seq):48->rgb(245,115,115)
GenMapFactory.newBuilder():54->rgb(235,102,102)
GenMapLike.equals$(GenMapLike, Object):113->rgb(250,123,123)
GenMapLike.equals(Object):118->rgb(203,54,54)
GenMapLike.hashCode$(GenMapLike):35->rgb(250,122,122)
GenMapLike.hashCode():35->rgb(222,82,82)
GenMapLike.liftedTree1$1(GenMap):119->rgb(230,94,94)
GenSeqLike.equals$(GenSeqLike, Object):476->rgb(228,91,91)
GenSeqLike.equals(Object):477->rgb(233,99,99)
GenSeqLike.indexWhere$(GenSeqLike, Function1):115->rgb(250,122,122)
GenSeqLike.indexWhere(Function1):115->rgb(234,99,99)
GenSetLike.apply$(GenSetLike, Object):44->rgb(245,116,116)
GenSetLike.apply(Object):44->rgb(247,118,118)
GenSetLike.hashCode$(GenSetLike):131->rgb(240,108,108)
GenSetLike.hashCode():131->rgb(228,90,90)
GenSetLike.intersect$(GenSetLike, GenSet):52->rgb(203,55,55)
GenSetLike.intersect(GenSet):52->rgb(208,62,62)
GenTraversableFactory$GenericCanBuildFrom.apply(GenTraversable):57->rgb(244,114,114)
GenTraversableFactory$GenericCanBuildFrom.apply(Object):52->rgb(212,68,68)
GenTraversableFactory.ReusableCBF():45->rgb(203,55,55)
GenTraversableFactory.range(Object, Object, Integral):206->rgb(212,68,68)
GenTraversableFactory.range(Object, Object, Object, Integral):222->rgb(249,121,121)
GeneratedMethodAccessor24.invoke(Object, Object[]):-1->rgb(241,109,109)
GenericCompanion.apply(Seq):46->rgb(214,71,71)
GenericCompanion.apply(Seq):49->rgb(254,129,129)
GenericSetTemplate.empty$(GenericSetTemplate):17->rgb(249,121,121)
GenericSetTemplate.empty():17->rgb(247,119,119)
GenericTraversableTemplate.$anonfun$flatten$1(Function1, Builder, Object):172->rgb(235,102,102)
GenericTraversableTemplate.$anonfun$transpose$2$adapted(Function1, int, IndexedSeq, Object):217->rgb(237,104,104)
GenericTraversableTemplate.$anonfun$transpose$2(Function1, int, IndexedSeq, Object):219->rgb(239,108,108)
GenericTraversableTemplate.$anonfun$transpose$3$adapted(int, IndexedSeq, IntRef, Object):219->rgb(204,56,56)
GenericTraversableTemplate.$anonfun$transpose$3(int, IndexedSeq, IntRef, Object):220->rgb(220,80,80)
GenericTraversableTemplate.$anonfun$unzip$1(Function1, Builder, Builder, Object):98->rgb(222,82,82)
GenericTraversableTemplate.$init$(GenericTraversableTemplate):30->rgb(241,110,110)
GenericTraversableTemplate.flatten$(GenericTraversableTemplate, Function1):169->rgb(212,67,67)
GenericTraversableTemplate.flatten(Function1):171->rgb(209,63,63)
GenericTraversableTemplate.genericBuilder$(GenericTraversableTemplate):70->rgb(236,103,103)
GenericTraversableTemplate.genericBuilder():70->rgb(200,50,50)
GenericTraversableTemplate.newBuilder$(GenericTraversableTemplate):65->rgb(224,86,86)
GenericTraversableTemplate.newBuilder():65->rgb(246,117,117)
GenericTraversableTemplate.transpose$(GenericTraversableTemplate, Function1):209->rgb(223,84,84)
GenericTraversableTemplate.transpose(Function1):217->rgb(244,114,114)
GenericTraversableTemplate.unzip$(GenericTraversableTemplate, Function1):93->rgb(254,128,128)
GenericTraversableTemplate.unzip(Function1):94->rgb(212,68,68)
GenericTraversableTemplate.unzip(Function1):96->rgb(217,74,74)
GlbLubs.$anonfun$elimSub$1$adapted(GlbLubs, int, Types$Type, Types$Type):201->rgb(240,109,109)
GlbLubs.$anonfun$elimSub$1(GlbLubs, int, Types$Type, Types$Type):201->rgb(251,124,124)
GlbLubs.$anonfun$elimSub$2(GlbLubs, int, Types$Type, Types$Type):202->rgb(252,126,126)
GlbLubs.$anonfun$elimSuper$1$adapted(Types$Type, Types$Type):190->rgb(214,71,71)
GlbLubs.$anonfun$elimSuper$1(Types$Type, Types$Type):190->rgb(228,91,91)
GlbLubs.$anonfun$lub$10(Types$Type, Symbols$Symbol, Types$Type, Types$Type):334->rgb(223,84,84)
GlbLubs.$anonfun$lub$17(GlbLubs, int, Types$Type, Types$Type, Symbols$Symbol, Symbols$Symbol):358->rgb(232,97,97)
GlbLubs.$anonfun$lub$18$adapted(GlbLubs, int, Types$Type, List, Symbols$Symbol):362->rgb(239,107,107)
GlbLubs.$anonfun$lub$18(GlbLubs, int, Types$Type, List, Symbols$Symbol):362->rgb(205,57,57)
GlbLubs.$anonfun$lub$19(GlbLubs, int, Types$Type, Types$Type, List, Symbols$Symbol):363->rgb(217,76,76)
GlbLubs.$anonfun$lub$21(GlbLubs, int, Types$Type, Types$Type, Types$Type):375->rgb(226,88,88)
GlbLubs.$anonfun$lub$8(Types$Type):320->rgb(229,92,92)
GlbLubs.$anonfun$lub$9(GlbLubs, int, Types$Type, Symbols$Symbol, Types$Type):327->rgb(230,94,94)
GlbLubs.$anonfun$lubList$12(Types$Type):164->rgb(206,59,59)
GlbLubs.$anonfun$matchingInstTypes$1(GlbLubs, List, List, Types$Type):580->rgb(205,58,58)
GlbLubs.elimSub(List, int):204->rgb(201,52,52)
GlbLubs.elimSub0$1(List, int):201->rgb(231,96,96)
GlbLubs.elimSub0$1(List, int):202->rgb(248,119,119)
GlbLubs.elimSuper(List):190->rgb(211,67,67)
GlbLubs.excludeFromLub$1(Symbols$Symbol, int, Types$Type, List):327->rgb(205,57,57)
GlbLubs.glb$(GlbLubs, List):421->rgb(212,67,67)
GlbLubs.glb$(GlbLubs, List, int):436->rgb(208,61,61)
GlbLubs.glb(List):421->rgb(210,65,65)
GlbLubs.glb(List, int):436->rgb(218,76,76)
GlbLubs.loop$1(List, List, List, int, IntRef):122->rgb(243,113,113)
GlbLubs.loop$1(List, List, List, int, IntRef):136->rgb(208,62,62)
GlbLubs.loop$1(List, List, List, int, IntRef):137->rgb(226,88,88)
GlbLubs.lub$(GlbLubs, List):254->rgb(240,109,109)
GlbLubs.lub$(GlbLubs, List, int):282->rgb(206,59,59)
GlbLubs.lub(List):261->rgb(241,110,110)
GlbLubs.lub(List):275->rgb(210,64,64)
GlbLubs.lub(List, int):401->rgb(207,60,60)
GlbLubs.lub0$1(List, int):283->rgb(218,77,77)
GlbLubs.lub0$1(List, int):289->rgb(243,113,113)
GlbLubs.lub0$1(List, int):293->rgb(224,85,85)
GlbLubs.lub0$1(List, int):304->rgb(228,91,91)
GlbLubs.lub0$1(List, int):305->rgb(231,95,95)
GlbLubs.lub1$1(List, int):311->rgb(231,96,96)
GlbLubs.lub1$1(List, int):314->rgb(223,84,84)
GlbLubs.lub1$1(List, int):320->rgb(237,105,105)
GlbLubs.lub1$1(List, int):362->rgb(208,62,62)
GlbLubs.lub1$1(List, int):374->rgb(244,114,114)
GlbLubs.lubList$(GlbLubs, List, int):100->rgb(216,73,73)
GlbLubs.lubList(List, int):164->rgb(230,94,94)
GlbLubs.lubList(List, int):168->rgb(236,103,103)
GlbLubs.lubsym$1(Symbols$Symbol, int, Types$Type, Types$Type, List):331->rgb(211,67,67)
GlbLubs.lubsym$1(Symbols$Symbol, int, Types$Type, Types$Type, List):342->rgb(247,118,118)
GlbLubs.matchingInstTypes(List, List):580->rgb(208,62,62)
GlbLubs.refines$1(Types$Type, Symbols$Symbol, int, Types$Type):354->rgb(213,69,69)
GlbLubs.refines$1(Types$Type, Symbols$Symbol, int, Types$Type):355->rgb(232,97,97)
GlbLubs.sameWeakLubAsLub$(GlbLubs, List):219->rgb(234,100,100)
GlbLubs.sameWeakLubAsLub(List):220->rgb(249,122,122)
GlbLubs.transformResultType$1(Types$Type, List, List):575->rgb(211,66,66)
Global$$anon$1.CODE():458->rgb(235,101,101)
Global$$anon$1.addSyntheticMethods(Trees$Template, Symbols$Symbol, Contexts$Context):458->rgb(241,110,110)
Global$$anon$1.caseClassCopyMeth(Trees$ClassDef):458->rgb(236,102,102)
Global$$anon$1.caseModuleApplyMeth(Trees$ClassDef):458->rgb(223,84,84)
Global$$anon$1.caseModuleDef(Trees$ClassDef):458->rgb(217,75,75)
Global$$anon$1.caseModuleUnapplyMeth(Trees$ClassDef):458->rgb(228,91,91)
Global$$anon$1.companionSymbolOf(Symbols$Symbol, Contexts$Context):458->rgb(236,103,103)
Global$$anon$1.directUnapplyMember(Types$Type):458->rgb(227,90,90)
Global$$anon$1.etaExpand(CompilationUnits$CompilationUnit, Trees$Tree, Typers$Typer):458->rgb(225,87,87)
Global$$anon$1.factoryMeth(Trees$Modifiers, Names$TermName, Trees$ClassDef):458->rgb(242,112,112)
Global$$anon$1.formalTypes(List, int, boolean, boolean):458->rgb(222,83,83)
Global$$anon$1.freshVar(Symbols$Symbol):458->rgb(209,63,63)
Global$$anon$1.global():459->rgb(216,73,73)
Global$$anon$1.inferImplicit(Trees$Tree, Types$Type, boolean, boolean, Contexts$Context, boolean, Position):458->rgb(212,67,67)
Global$$anon$1.inferImplicitByType(Types$Type, Contexts$Context, Position):458->rgb(243,112,112)
Global$$anon$1.inferImplicitFor(Types$Type, Trees$Tree, Contexts$Context, boolean):458->rgb(233,98,98)
Global$$anon$1.inferImplicitView(Types$Type, Types$Type, Trees$Tree, Contexts$Context, boolean, boolean):458->rgb(241,111,111)
Global$$anon$1.isBlackbox(Symbols$Symbol):458->rgb(213,70,70)
Global$$anon$1.isMacroImplRef(Trees$Tree):458->rgb(244,114,114)
Global$$anon$1.isNamedArg(Trees$Tree):458->rgb(245,115,115)
Global$$anon$1.loadMacroImplBinding(Symbols$Symbol):458->rgb(226,87,87)
Global$$anon$1.macroExpand(Typers$Typer, Trees$Tree, int, Types$Type):458->rgb(211,66,66)
Global$$anon$1.macroExpandWithRuntime(Typers$Typer, Trees$Tree, Function1):458->rgb(247,118,118)
Global$$anon$1.newNamer(Contexts$Context):458->rgb(240,108,108)
Global$$anon$1.newTyper(Contexts$Context):458->rgb(200,50,50)
Global$$anon$1.normalize(Types$Type):458->rgb(217,75,75)
Global$$anon$1.notifyUndetparamsAdded(List):458->rgb(234,100,100)
Global$$anon$1.notifyUndetparamsInferred(List, List):458->rgb(232,96,96)
Global$$anon$1.pluginsEnsureCompanionObject(Namers$Namer, Trees$ClassDef, Function1):458->rgb(228,91,91)
Global$$anon$1.pluginsEnterSym(Namers$Namer, Trees$Tree):458->rgb(236,102,102)
Global$$anon$1.pluginsIsBlackbox(Symbols$Symbol):458->rgb(222,83,83)
Global$$anon$1.pluginsMacroExpand(Typers$Typer, Trees$Tree, int, Types$Type):458->rgb(249,121,121)
Global$$anon$1.rootContext(CompilationUnits$CompilationUnit, Trees$Tree, boolean, boolean):458->rgb(254,128,128)
Global$$anon$1.rootContextPostTyper(CompilationUnits$CompilationUnit, Trees$Tree):458->rgb(224,85,85)
Global$$anon$1.solvedTypes(List, List, List, boolean, int):458->rgb(234,100,100)
Global$$anon$1.standardIsBlackbox(Symbols$Symbol):458->rgb(216,73,73)
Global$$anon$1.standardMacroExpand(Typers$Typer, Trees$Tree, int, Types$Type):458->rgb(235,101,101)
Global$$anon$1.typingInPattern(Function0):458->rgb(225,87,87)
Global$$anon$1.typingStack():458->rgb(235,101,101)
Global$$anon$1.unapplyMember(Types$Type):458->rgb(215,72,72)
Global$.apply(Settings, Reporter):1654->rgb(251,124,124)
Global$GlobalPhase.$anonfun$applyPhase$1(Global$GlobalPhase, CompilationUnits$CompilationUnit):436->rgb(228,92,92)
Global$GlobalPhase.$anonfun$run$1$adapted(Global$GlobalPhase, CompilationUnits$CompilationUnit):400->rgb(201,52,52)
Global$GlobalPhase.$anonfun$run$1(Global$GlobalPhase, CompilationUnits$CompilationUnit):400->rgb(220,79,79)
Global$GlobalPhase.applyPhase(CompilationUnits$CompilationUnit):421->rgb(225,87,87)
Global$GlobalPhase.applyPhase(CompilationUnits$CompilationUnit):429->rgb(250,124,124)
Global$GlobalPhase.run():400->rgb(249,121,121)
Global$GlobalPlatform.isMaybeBoxed(Symbols$Symbol):106->rgb(222,82,82)
Global$Run$SyncedCompilationBuffer$$anon$3.next():1113->rgb(237,105,105)
Global$Run$SyncedCompilationBuffer$$anon$3.next():1119->rgb(251,125,125)
Global$Run$SyncedCompilationBuffer.size():1109->rgb(249,122,122)
Global$Run.$anonfun$compileUnitsInternal$6$adapted(Global$Run, Symbols$Symbol):1503->rgb(249,121,121)
Global$Run.$anonfun$compileUnitsInternal$6(Global$Run, Symbols$Symbol):1503->rgb(213,69,69)
Global$Run.$anonfun$firstPhase$3(Phase, SubComponent):1194->rgb(221,81,81)
Global$Run.$anonfun$printStatisticsFor$5$adapted(Global$Run, Statistics$Quantity):1593->rgb(210,65,65)
Global$Run.$anonfun$printStatisticsFor$5(Global$Run, Statistics$Quantity):1593->rgb(236,103,103)
Global$Run.<init>(Global):1164->rgb(224,86,86)
Global$Run.<init>(Global):1194->rgb(208,63,63)
Global$Run.<init>(Global):1220->rgb(221,81,81)
Global$Run.<init>(Global):1230->rgb(213,69,69)
Global$Run.advanceUnit():1266->rgb(215,71,71)
Global$Run.compile(List):1532->rgb(226,88,88)
Global$Run.compileSources(List):1429->rgb(230,94,94)
Global$Run.compileUnits(List, Phase):1433->rgb(238,105,105)
Global$Run.compileUnitsInternal(List, Phase):1447->rgb(207,61,61)
Global$Run.compileUnitsInternal(List, Phase):1448->rgb(207,60,60)
Global$Run.compileUnitsInternal(List, Phase):1479->rgb(206,59,59)
Global$Run.compileUnitsInternal(List, Phase):1480->rgb(229,93,93)
Global$Run.compileUnitsInternal(List, Phase):1503->rgb(221,81,81)
Global$Run.compiles(Symbols$Symbol):1349->rgb(205,57,57)
Global$Run.compiles(Symbols$Symbol):1350->rgb(229,93,93)
Global$Run.compiles(Symbols$Symbol):1351->rgb(248,120,120)
Global$Run.currentProgress():1272->rgb(246,118,118)
Global$Run.erasurePhase():1297->rgb(254,128,128)
Global$Run.printStatisticsFor(Phase):1579->rgb(211,67,67)
Global$Run.printStatisticsFor(Phase):1593->rgb(247,119,119)
Global$Run.refreshProgress():1274->rgb(228,91,91)
Global$Run.resetPackageClass(Symbols$Symbol):1568->rgb(242,112,112)
Global$Run.size():1138->rgb(209,63,63)
Global$Run.typerPhase():1287->rgb(250,124,124)
Global$explicitOuter$.global():527->rgb(200,50,50)
Global$gen$.mkAttributedCast(Trees$Tree, Types$Type):126->rgb(248,120,120)
Global$patmat$.global():464->rgb(242,112,112)
Global$patmat$.instanceOfTpImplies(Types$Type, Types$Type):463->rgb(236,102,102)
Global$patmat$.newTransformer(CompilationUnits$CompilationUnit):463->rgb(242,111,111)
Global$postErasure$.newTransformer(CompilationUnits$CompilationUnit):547->rgb(228,91,91)
Global$postErasure$.transformInfo(Symbols$Symbol, Types$Type):547->rgb(228,92,92)
Global$statistics$.flagsCount():172->rgb(233,98,98)
Global$statistics$.phaseCounter():172->rgb(252,126,126)
Global$statistics$.typeOpsStack():172->rgb(203,54,54)
Global.<init>(Settings, Reporter):37->rgb(206,59,59)
Global.currentRun():973->rgb(233,99,99)
Global.currentRunId():1064->rgb(219,77,77)
Global.currentSettings():36->rgb(204,57,57)
Global.debuglog(Function0):319->rgb(202,54,54)
Global.enteringExplicitOuter(Function0):1002->rgb(207,61,61)
Global.enteringJVM(Function0):1006->rgb(248,120,120)
Global.exitingPickler(Function0):996->rgb(201,52,52)
Global.gen():122->rgb(211,66,66)
Global.isDeveloper():290->rgb(229,92,92)
Global.isGlobalInitialized():979->rgb(222,82,82)
Global.isGlobalInitialized():980->rgb(226,87,87)
Global.isPast(Phase):985->rgb(202,53,53)
Global.isPastTyper():982->rgb(213,69,69)
Global.newLazyTreeCopier():36->rgb(202,54,54)
Global.resetAttrs(Trees$Tree):36->rgb(245,116,116)
Global.rootMirror$lzycompute():65->rgb(202,53,53)
Global.rootMirror():36->rgb(250,123,123)
Global.rootMirror():63->rgb(249,121,121)
Global.scala$tools$nsc$Global$$curRun():952->rgb(210,64,64)
Global.scala$tools$nsc$Global$$curRunId():953->rgb(203,55,55)
Global.settings():76->rgb(247,119,119)
Global.statistics$lzycompute$1():172->rgb(200,50,50)
Global.statistics():172->rgb(201,51,51)
Global.statistics():36->rgb(206,59,59)
Global.treeInfo():36->rgb(224,85,85)
Global.withInfoLevel(Enumeration$Value, Function0):208->rgb(237,104,104)
GlobalSymbolLoaders.$anonfun$lookupMemberAtTyperPhaseIfPossible$1(Symbols$Symbol, Names$Name):25->rgb(233,98,98)
GlobalSymbolLoaders.lookup$1(Symbols$Symbol, Names$Name):19->rgb(213,69,69)
GlobalSymbolLoaders.lookupMemberAtTyperPhaseIfPossible(Symbols$Symbol, Names$Name):25->rgb(234,99,99)
Growable.$anonfun$$plus$plus$eq$1(Growable, Object):59->rgb(214,70,70)
Growable.$plus$plus$eq$(Growable, TraversableOnce):50->rgb(211,66,66)
Growable.$plus$plus$eq(TraversableOnce):58->rgb(219,77,77)
Growable.$plus$plus$eq(TraversableOnce):59->rgb(207,60,60)
Growable.loop$1(LinearSeq):52->rgb(211,67,67)
Growable.loop$1(LinearSeq):53->rgb(214,71,71)
GrowingBuilder.$plus$eq(Object):27->rgb(254,128,128)
HasFlags.hasAccessorFlag$(HasFlags):83->rgb(233,98,98)
HasFlags.hasAccessorFlag():83->rgb(228,91,91)
HasFlags.hasDefault$(HasFlags):84->rgb(214,71,71)
HasFlags.hasDefault():84->rgb(239,107,107)
HasFlags.hasJavaEnumFlag$(HasFlags):85->rgb(245,115,115)
HasFlags.hasJavaEnumFlag():85->rgb(217,75,75)
HasFlags.hasModuleFlag$(HasFlags):90->rgb(244,114,114)
HasFlags.hasModuleFlag():90->rgb(242,111,111)
HasFlags.hasNoFlags$(HasFlags, long):63->rgb(208,62,62)
HasFlags.hasNoFlags(long):63->rgb(214,71,71)
HasFlags.hasPackageFlag$(HasFlags):91->rgb(239,107,107)
HasFlags.hasPackageFlag():91->rgb(221,81,81)
HasFlags.isArtifact$(HasFlags):100->rgb(252,126,126)
HasFlags.isArtifact():100->rgb(221,81,81)
HasFlags.isCaseAccessor$(HasFlags):97->rgb(227,89,89)
HasFlags.isCaseAccessor():97->rgb(223,83,83)
HasFlags.isDeferred$(HasFlags):98->rgb(238,106,106)
HasFlags.isDeferred():98->rgb(206,59,59)
HasFlags.isFinal$(HasFlags):99->rgb(225,87,87)
HasFlags.isFinal():99->rgb(229,92,92)
HasFlags.isImplicit$(HasFlags):101->rgb(211,66,66)
HasFlags.isImplicit():101->rgb(249,121,121)
HasFlags.isInterface$(HasFlags):102->rgb(251,125,125)
HasFlags.isInterface():102->rgb(242,111,111)
HasFlags.isJavaDefined$(HasFlags):103->rgb(234,99,99)
HasFlags.isJavaDefined():103->rgb(223,84,84)
HasFlags.isLazy$(HasFlags):105->rgb(204,56,56)
HasFlags.isLazy():105->rgb(236,102,102)
HasFlags.isLocalToThis$(HasFlags):89->rgb(220,79,79)
HasFlags.isLocalToThis():89->rgb(246,117,117)
HasFlags.isMutable$(HasFlags):108->rgb(224,84,84)
HasFlags.isMutable():108->rgb(237,104,104)
HasFlags.isParamAccessor$(HasFlags):110->rgb(230,94,94)
HasFlags.isParamAccessor():110->rgb(244,114,114)
HasFlags.isParameter$(HasFlags):169->rgb(203,55,55)
HasFlags.isParameter():169->rgb(210,65,65)
HasFlags.isPrivate$(HasFlags):111->rgb(235,101,101)
HasFlags.isPrivate():111->rgb(201,51,51)
HasFlags.isPrivateLocal$(HasFlags):114->rgb(209,63,63)
HasFlags.isPrivateLocal():114->rgb(207,60,60)
HasFlags.isProtected$(HasFlags):115->rgb(245,116,116)
HasFlags.isProtected():115->rgb(211,67,67)
HasFlags.isPublic$(HasFlags):117->rgb(251,125,125)
HasFlags.isPublic():117->rgb(253,127,127)
HasFlags.isSealed$(HasFlags):118->rgb(216,73,73)
HasFlags.isSealed():118->rgb(216,73,73)
HasFlags.isSpecialized$(HasFlags):119->rgb(223,84,84)
HasFlags.isSpecialized():119->rgb(217,75,75)
HasFlags.isSuperAccessor$(HasFlags):120->rgb(235,102,102)
HasFlags.isSuperAccessor():120->rgb(200,50,50)
HasFlags.isTraitOrInterface$(HasFlags):123->rgb(222,82,82)
HasFlags.isTraitOrInterface():123->rgb(254,129,129)
HashMap$$anon$1.$anonfun$foreach$2(Function1, DefaultEntry):142->rgb(218,76,76)
HashMap$$anon$1.foreach(Function1):142->rgb(220,80,80)
HashMap$$anon$2.$anonfun$foreach$3(Function1, DefaultEntry):147->rgb(226,88,88)
HashMap$$anon$2.foreach(Function1):147->rgb(206,59,59)
HashMap$HashMap1.contains0(Object, int, int):203->rgb(207,60,60)
HashMap$HashMap1.get0(Object, int, int):200->rgb(226,88,88)
HashMap$HashTrieMap.contains0(Object, int, int):336->rgb(206,59,59)
HashMap$HashTrieMap.contains0(Object, int, int):338->rgb(221,81,81)
HashMap$HashTrieMap.get0(Object, int, int):327->rgb(231,96,96)
HashMap.$anonfun$foreach$1(Function1, DefaultEntry):138->rgb(212,67,67)
HashMap.$plus$eq(Tuple2):129->rgb(222,82,82)
HashMap.$plus$eq(Tuple2):40->rgb(208,63,63)
HashMap.<init>():56->rgb(246,117,117)
HashMap.<init>(HashTable$Contents):41->rgb(254,129,129)
HashMap.computeHash(Object):93->rgb(225,86,86)
HashMap.contains(Object):56->rgb(254,129,129)
HashMap.contains(Object):61->rgb(231,95,95)
HashMap.elemEquals(Object, Object):40->rgb(206,59,59)
HashMap.elemHashCode(Object):40->rgb(200,51,51)
HashMap.elemHashCode(Object):84->rgb(241,110,110)
HashMap.findEntry(Object):40->rgb(221,80,80)
HashMap.findEntry(Object, int):93->rgb(236,103,103)
HashMap.findOrAddEntry(Object, Object):40->rgb(223,84,84)
HashMap.foreach(Function1):138->rgb(227,89,89)
HashMap.foreachEntry(Function1):40->rgb(214,71,71)
HashMap.get(Object):53->rgb(251,125,125)
HashMap.get(Object):70->rgb(232,97,97)
HashMap.getOrElseUpdate(Object, Function0):76->rgb(214,70,70)
HashMap.getOrElseUpdate(Object, Function0):78->rgb(253,127,127)
HashMap.getOrElseUpdate(Object, Function0):82->rgb(245,115,115)
HashMap.index(int):40->rgb(216,74,74)
HashMap.notFound(Object, DefaultEntry):97->rgb(220,79,79)
HashMap.put(Object, Object):115->rgb(226,88,88)
HashMap.update(Object, Object):120->rgb(242,111,111)
HashSet$.apply(String, int):13->rgb(231,95,95)
HashSet$.apply(int):11->rgb(212,68,68)
HashSet$.empty():105->rgb(214,70,70)
HashSet$.empty():107->rgb(204,57,57)
HashSet$.scala$collection$immutable$HashSet$$makeHashTrieSet(int, HashSet, int, HashSet, int):227->rgb(230,94,94)
HashSet$HashSet1.<init>(Object, int):254->rgb(224,86,86)
HashSet$HashSet1.filter0(Function1, boolean, int, HashSet[], int):317->rgb(242,111,111)
HashSet$HashSet1.foreach(Function1):320->rgb(237,105,105)
HashSet$HashSet1.updated0(Object, int, int):269->rgb(242,111,111)
HashSet$HashSet1.updated0(Object, int, int):272->rgb(214,70,70)
HashSet$HashTrieSet$$anon$1.<init>(HashSet$HashTrieSet):969->rgb(213,69,69)
HashSet$HashTrieSet.filter0(Function1, boolean, int, HashSet[], int):933->rgb(211,66,66)
HashSet$HashTrieSet.foreach(Function1):976->rgb(250,123,123)
HashSet$HashTrieSet.iterator():521->rgb(207,61,61)
HashSet$HashTrieSet.iterator():969->rgb(253,127,127)
HashSet$HashTrieSet.updated0(Object, int, int):547->rgb(242,111,111)
HashSet$LeafHashSet.<init>():250->rgb(242,111,111)
HashSet.$plus$eq(Object):40->rgb(253,127,127)
HashSet.$plus$eq(Object):59->rgb(253,127,127)
HashSet.$plus(Object):34->rgb(240,109,109)
HashSet.$plus(Object):83->rgb(254,129,129)
HashSet.<init>():34->rgb(252,126,126)
HashSet.<init>():51->rgb(247,118,118)
HashSet.<init>(FlatHashTable$Contents):41->rgb(200,50,50)
HashSet.<init>(String, int):18->rgb(228,90,90)
HashSet.addElem(Object):40->rgb(247,118,118)
HashSet.addEntry(Object):40->rgb(214,71,71)
HashSet.addEntry(Object):54->rgb(218,76,76)
HashSet.addEntry(Object):63->rgb(217,75,75)
HashSet.addOldEntry(Object):81->rgb(232,97,97)
HashSet.contains(Object):57->rgb(237,104,104)
HashSet.containsElem(Object):40->rgb(240,109,109)
HashSet.empty():40->rgb(246,117,117)
HashSet.filter(Function1):168->rgb(222,82,82)
HashSet.filter(Function1):34->rgb(237,104,104)
HashSet.findEntry(Object):44->rgb(247,119,119)
HashSet.foreach(Function1):78->rgb(229,92,92)
HashSet.growTable():101->rgb(212,68,68)
HashSet.index(int):19->rgb(233,98,98)
HashTable$HashUtils.elemHashCode$(HashTable$HashUtils, Object):415->rgb(232,96,96)
HashTable$HashUtils.elemHashCode(Object):415->rgb(247,119,119)
HashTable$HashUtils.improve$(HashTable$HashUtils, int, int):430->rgb(252,126,126)
HashTable$HashUtils.improve(int, int):430->rgb(245,116,116)
HashTable.$init$(HashTable):44->rgb(227,90,90)
HashTable.$init$(HashTable):48->rgb(253,128,128)
HashTable.$init$(HashTable):62->rgb(215,72,72)
HashTable.addEntry0(HashEntry, int):152->rgb(230,94,94)
HashTable.addEntry0(HashEntry, int):157->rgb(218,77,77)
HashTable.elemEquals$(HashTable, Object, Object):364->rgb(234,99,99)
HashTable.elemEquals(Object, Object):364->rgb(234,100,100)
HashTable.findEntry$(HashTable, Object):134->rgb(202,52,52)
HashTable.findEntry(Object):135->rgb(209,63,63)
HashTable.findEntry0(Object, int):139->rgb(214,71,71)
HashTable.findOrAddEntry$(HashTable, Object, Object):166->rgb(234,100,100)
HashTable.findOrAddEntry(Object, Object):167->rgb(208,62,62)
HashTable.findOrAddEntry(Object, Object):168->rgb(243,113,113)
HashTable.findOrAddEntry(Object, Object):169->rgb(211,67,67)
HashTable.foreachEntry$(HashTable, Function1):229->rgb(222,82,82)
HashTable.foreachEntry(Function1):236->rgb(201,51,51)
HashTable.index$(HashTable, int):370->rgb(251,124,124)
HashTable.index(int):373->rgb(206,59,59)
HashTable.resize(int):262->rgb(244,115,115)
HashTable.resize(int):263->rgb(222,82,82)
HeapCharBuffer.<init>(int, int):57->rgb(222,83,83)
HotScalacBenchmark.compile():140->rgb(234,100,100)
HotScalacBenchmark_compile_jmhTest.compile_SampleTime(InfraControl, ThreadParams):269->rgb(236,102,102)
HotScalacBenchmark_compile_jmhTest.compile_sample_jmhStub(InfraControl, RawResults, BenchmarkParams, IterationParams, ThreadParams, Blackhole, Control, int, SampleBuffer, int, long, int, HotScalacBenchmark_jmhType):336->rgb(235,101,101)
I2C/C2I adapters->rgb(222,82,82)
INode.GCAS_READ(TrieMap):34->rgb(205,57,57)
INode.equal(Object, Object, TrieMap):80->rgb(219,79,79)
INode.rec_lookup(Object, int, int, INode, Gen, TrieMap):236->rgb(251,124,124)
INode.rec_lookup(Object, int, int, INode, Gen, TrieMap):246->rgb(212,68,68)
INode.rec_lookup(Object, int, int, INode, Gen, TrieMap):249->rgb(235,102,102)
INode.rec_lookup(Object, int, int, INode, Gen, TrieMap):255->rgb(237,103,103)
Implicits$Function1$.apply(Types$Type, Types$Type):345->rgb(252,125,125)
Implicits$ImplicitAnnotationMsg.check(Symbols$Symbol):1517->rgb(206,59,59)
Implicits$ImplicitInfo.computeErroneous():228->rgb(238,106,106)
Implicits$ImplicitInfo.containsError(Types$Type):243->rgb(204,56,56)
Implicits$ImplicitInfo.containsError(Types$Type):245->rgb(240,109,109)
Implicits$ImplicitInfo.equals(Object):253->rgb(247,119,119)
Implicits$ImplicitInfo.isCyclicOrErroneous():220->rgb(200,51,51)
Implicits$ImplicitInfo.isCyclicOrErroneous():222->rgb(215,72,72)
Implicits$ImplicitInfo.isCyclicOrErroneous():223->rgb(247,119,119)
Implicits$ImplicitInfo.tpe():215->rgb(251,125,125)
Implicits$ImplicitSearch$ImplicitComputation$DivergentImplicitRecovery$.apply(Implicits$SearchResult, Implicits$ImplicitInfo, Seq):896->rgb(209,63,63)
Implicits$ImplicitSearch$ImplicitComputation$LocalShadower$1.$anonfun$addInfos$1(Implicits$ImplicitSearch$ImplicitComputation$LocalShadower$1, Implicits$ImplicitInfo):842->rgb(232,97,97)
Implicits$ImplicitSearch$ImplicitComputation$LocalShadower$1.<init>(Implicits$ImplicitSearch$ImplicitComputation):840->rgb(247,118,118)
Implicits$ImplicitSearch$ImplicitComputation$LocalShadower$1.addInfos(List):842->rgb(227,89,89)
Implicits$ImplicitSearch$ImplicitComputation.$anonfun$eligible$1(Implicits$ImplicitSearch$ImplicitComputation, List):922->rgb(253,127,127)
Implicits$ImplicitSearch$ImplicitComputation.$anonfun$eligible$1(Implicits$ImplicitSearch$ImplicitComputation, List):923->rgb(225,87,87)
Implicits$ImplicitSearch$ImplicitComputation.$anonfun$eligible$2$adapted(Implicits$ImplicitSearch$ImplicitComputation, Implicits$ImplicitInfo):922->rgb(233,98,98)
Implicits$ImplicitSearch$ImplicitComputation.$anonfun$eligible$2(Implicits$ImplicitSearch$ImplicitComputation, Implicits$ImplicitInfo):922->rgb(241,110,110)
Implicits$ImplicitSearch$ImplicitComputation.$anonfun$rankImplicits$2(Implicits$ImplicitSearch$ImplicitComputation, Implicits$ImplicitInfo, List):963->rgb(210,65,65)
Implicits$ImplicitSearch$ImplicitComputation.$anonfun$rankImplicits$3$adapted(Implicits$ImplicitSearch$ImplicitComputation, Implicits$ImplicitInfo, Implicits$ImplicitInfo):963->rgb(209,63,63)
Implicits$ImplicitSearch$ImplicitComputation.$anonfun$rankImplicits$3(Implicits$ImplicitSearch$ImplicitComputation, Implicits$ImplicitInfo, Implicits$ImplicitInfo):963->rgb(205,58,58)
Implicits$ImplicitSearch$ImplicitComputation.<init>(Implicits$ImplicitSearch, List, boolean):851->rgb(250,123,123)
Implicits$ImplicitSearch$ImplicitComputation.<init>(Implicits$ImplicitSearch, List, boolean):921->rgb(217,74,74)
Implicits$ImplicitSearch$ImplicitComputation.<init>(Implicits$ImplicitSearch, List, boolean):928->rgb(219,78,78)
Implicits$ImplicitSearch$ImplicitComputation.findBest():979->rgb(243,113,113)
Implicits$ImplicitSearch$ImplicitComputation.findBest():980->rgb(214,70,70)
Implicits$ImplicitSearch$ImplicitComputation.firstPendingImproves$1(Implicits$ImplicitInfo, Implicits$ImplicitInfo):942->rgb(216,74,74)
Implicits$ImplicitSearch$ImplicitComputation.firstPendingImproves$1(Implicits$ImplicitInfo, Implicits$ImplicitInfo):943->rgb(204,55,55)
Implicits$ImplicitSearch$ImplicitComputation.isIneligible(Implicits$ImplicitInfo):857->rgb(246,117,117)
Implicits$ImplicitSearch$ImplicitComputation.liftedTree1$1(Implicits$ImplicitInfo, Implicits$ImplicitInfo):943->rgb(216,74,74)
Implicits$ImplicitSearch$ImplicitComputation.rankImplicits(List, List):940->rgb(227,90,90)
Implicits$ImplicitSearch$ImplicitComputation.rankImplicits(List, List):951->rgb(203,54,54)
Implicits$ImplicitSearch$ImplicitComputation.rankImplicits(List, List):957->rgb(212,67,67)
Implicits$ImplicitSearch$ImplicitComputation.rankImplicits(List, List):963->rgb(248,120,120)
Implicits$ImplicitSearch$ImplicitComputation.survives(Implicits$ImplicitInfo):865->rgb(210,64,64)
Implicits$ImplicitSearch$ImplicitComputation.survives(Implicits$ImplicitInfo):866->rgb(206,59,59)
Implicits$ImplicitSearch$ImplicitComputation.survives(Implicits$ImplicitInfo):868->rgb(213,70,70)
Implicits$ImplicitSearch.$anonfun$companionImplicitMap$3(Implicits$ImplicitSearch, LinkedHashMap, Set, Set, Types$Type):1111->rgb(247,119,119)
Implicits$ImplicitSearch.$anonfun$isImpossibleSubType$1(Names$Name, Symbols$Symbol):615->rgb(232,97,97)
Implicits$ImplicitSearch.<init>(Analyzer, Trees$Tree, Types$Type, boolean, Contexts$Context, Position):366->rgb(254,129,129)
Implicits$ImplicitSearch.<init>(Analyzer, Trees$Tree, Types$Type, boolean, Contexts$Context, Position):380->rgb(207,61,61)
Implicits$ImplicitSearch.bestImplicit():1396->rgb(231,95,95)
Implicits$ImplicitSearch.bestImplicit():1417->rgb(206,59,59)
Implicits$ImplicitSearch.bestImplicit():1422->rgb(200,50,50)
Implicits$ImplicitSearch.checkCompatibility(boolean, Types$Type, Types$Type):603->rgb(209,63,63)
Implicits$ImplicitSearch.companionImplicitMap(Types$Type):1138->rgb(216,74,74)
Implicits$ImplicitSearch.fallback$1(Trees$Tree):657->rgb(240,109,109)
Implicits$ImplicitSearch.getClassParts$1(Types$Type, LinkedHashMap, Set, Set):1067->rgb(217,75,75)
Implicits$ImplicitSearch.getClassParts$1(Types$Type, LinkedHashMap, Set, Set):1068->rgb(234,100,100)
Implicits$ImplicitSearch.getClassParts$1(Types$Type, LinkedHashMap, Set, Set):1072->rgb(226,88,88)
Implicits$ImplicitSearch.getClassParts$1(Types$Type, LinkedHashMap, Set, Set):1075->rgb(219,78,78)
Implicits$ImplicitSearch.getParts$1(Types$Type, LinkedHashMap, Set, Set):1098->rgb(218,77,77)
Implicits$ImplicitSearch.getParts$1(Types$Type, LinkedHashMap, Set, Set):1104->rgb(219,79,79)
Implicits$ImplicitSearch.getParts$1(Types$Type, LinkedHashMap, Set, Set):1110->rgb(205,57,57)
Implicits$ImplicitSearch.getParts$1(Types$Type, LinkedHashMap, Set, Set):1111->rgb(225,87,87)
Implicits$ImplicitSearch.getParts$1(Types$Type, LinkedHashMap, Set, Set):1116->rgb(215,72,72)
Implicits$ImplicitSearch.implicitsOfExpectedType():1151->rgb(210,65,65)
Implicits$ImplicitSearch.implicitsOfExpectedType():1158->rgb(200,50,50)
Implicits$ImplicitSearch.improves(Implicits$ImplicitInfo, Implicits$ImplicitInfo):404->rgb(252,126,126)
Implicits$ImplicitSearch.improves(Implicits$ImplicitInfo, Implicits$ImplicitInfo):408->rgb(251,125,125)
Implicits$ImplicitSearch.improves(Implicits$ImplicitInfo, Implicits$ImplicitInfo):412->rgb(225,87,87)
Implicits$ImplicitSearch.isImpossibleSubType(Types$Type, Types$Type):610->rgb(212,68,68)
Implicits$ImplicitSearch.isImpossibleSubType(Types$Type, Types$Type):613->rgb(235,100,100)
Implicits$ImplicitSearch.isImpossibleSubType(Types$Type, Types$Type):617->rgb(221,80,80)
Implicits$ImplicitSearch.isImpossibleSubType(Types$Type, Types$Type):618->rgb(214,71,71)
Implicits$ImplicitSearch.isImpossibleSubType(Types$Type, Types$Type):619->rgb(211,67,67)
Implicits$ImplicitSearch.isPlausiblyCompatible(Types$Type, Types$Type):415->rgb(200,50,50)
Implicits$ImplicitSearch.isPlausiblySubType(Types$Type, Types$Type):609->rgb(237,104,104)
Implicits$ImplicitSearch.loop$1(Types$Type, Types$Type, boolean):563->rgb(252,126,126)
Implicits$ImplicitSearch.loop$1(Types$Type, Types$Type, boolean):564->rgb(242,111,111)
Implicits$ImplicitSearch.loop$1(Types$Type, Types$Type, boolean):567->rgb(222,83,83)
Implicits$ImplicitSearch.loop$1(Types$Type, Types$Type, boolean):568->rgb(217,75,75)
Implicits$ImplicitSearch.loop$1(Types$Type, Types$Type, boolean):571->rgb(235,101,101)
Implicits$ImplicitSearch.loop$1(Types$Type, Types$Type, boolean):575->rgb(229,92,92)
Implicits$ImplicitSearch.loop$1(Types$Type, Types$Type, boolean):576->rgb(240,108,108)
Implicits$ImplicitSearch.loop$1(Types$Type, Types$Type, boolean):583->rgb(226,88,88)
Implicits$ImplicitSearch.loop$1(Types$Type, Types$Type, boolean):601->rgb(235,101,101)
Implicits$ImplicitSearch.matchesArgRes(Types$Type, Types$Type, Types$Type, Types$Type, List):545->rgb(200,50,50)
Implicits$ImplicitSearch.matchesPt(Types$Type, Types$Type, List):523->rgb(208,62,62)
Implicits$ImplicitSearch.matchesPt(Types$Type, Types$Type, List):525->rgb(250,123,123)
Implicits$ImplicitSearch.matchesPtView(Types$Type, Types$Type, Types$Type, List):538->rgb(210,64,64)
Implicits$ImplicitSearch.materializeImplicit(Types$Type):1364->rgb(207,61,61)
Implicits$ImplicitSearch.normSubType(Types$Type, Types$Type):416->rgb(218,76,76)
Implicits$ImplicitSearch.scala$tools$nsc$typechecker$Implicits$ImplicitSearch$$matchesPt(Implicits$ImplicitInfo):533->rgb(251,124,124)
Implicits$ImplicitSearch.scala$tools$nsc$typechecker$Implicits$ImplicitSearch$$typedImplicit(Implicits$ImplicitInfo, boolean, boolean):500->rgb(219,78,78)
Implicits$ImplicitSearch.searchImplicit(List, boolean):1036->rgb(209,63,63)
Implicits$ImplicitSearch.success$1(Trees$Tree):1190->rgb(227,89,89)
Implicits$ImplicitSearch.tagOfType(Types$Type, Types$Type, Symbols$Symbol):1227->rgb(208,62,62)
Implicits$ImplicitSearch.typeRefHasMember$1(Types$TypeRef, Names$Name):615->rgb(245,116,116)
Implicits$ImplicitSearch.typedImplicit0(Implicits$ImplicitInfo, boolean, boolean):632->rgb(229,93,93)
Implicits$ImplicitSearch.typedImplicit1(Implicits$ImplicitInfo, boolean):653->rgb(222,82,82)
Implicits$ImplicitSearch.typedImplicit1(Implicits$ImplicitInfo, boolean):659->rgb(244,114,114)
Implicits$ImplicitSearch.typedImplicit1(Implicits$ImplicitInfo, boolean):664->rgb(209,63,63)
Implicits$ImplicitSearch.typedImplicit1(Implicits$ImplicitInfo, boolean):695->rgb(254,129,129)
Implicits$ImplicitSearch.typedImplicit1(Implicits$ImplicitInfo, boolean):710->rgb(211,67,67)
Implicits$ImplicitSearch.typedImplicit1(Implicits$ImplicitInfo, boolean):719->rgb(225,87,87)
Implicits$ImplicitSearch.typedImplicit1(Implicits$ImplicitInfo, boolean):723->rgb(233,98,98)
Implicits$ImplicitSearch.typedImplicit1(Implicits$ImplicitInfo, boolean):736->rgb(208,62,62)
Implicits$ImplicitSearch.typedImplicit1(Implicits$ImplicitInfo, boolean):769->rgb(205,57,57)
Implicits.inferImplicit$(Implicits, Trees$Tree, Types$Type, boolean, boolean, Contexts$Context, boolean, Position):82->rgb(237,104,104)
Implicits.inferImplicit(Trees$Tree, Types$Type, boolean, boolean, Contexts$Context, boolean, Position):102->rgb(254,128,128)
Implicits.inferImplicit(Trees$Tree, Types$Type, boolean, boolean, Contexts$Context, boolean, Position):104->rgb(206,59,59)
Implicits.inferImplicit(Trees$Tree, Types$Type, boolean, boolean, Contexts$Context, boolean, Position):106->rgb(211,66,66)
Implicits.inferImplicit(Trees$Tree, Types$Type, boolean, boolean, Contexts$Context, boolean, Position):107->rgb(235,102,102)
Implicits.inferImplicit(Trees$Tree, Types$Type, boolean, boolean, Contexts$Context, boolean, Position):86->rgb(214,71,71)
Implicits.inferImplicit(Trees$Tree, Types$Type, boolean, boolean, Contexts$Context, boolean, Position):87->rgb(240,109,109)
Implicits.inferImplicit(Trees$Tree, Types$Type, boolean, boolean, Contexts$Context, boolean, Position):88->rgb(202,53,53)
Implicits.inferImplicit(Trees$Tree, Types$Type, boolean, boolean, Contexts$Context, boolean, Position):92->rgb(202,53,53)
Implicits.inferImplicit(Trees$Tree, Types$Type, boolean, boolean, Contexts$Context, boolean, Position):93->rgb(238,106,106)
Implicits.inferImplicit(Trees$Tree, Types$Type, boolean, boolean, Contexts$Context, boolean, Position):95->rgb(220,80,80)
Implicits.inferImplicitByType$(Implicits, Types$Type, Contexts$Context, Position):47->rgb(220,80,80)
Implicits.inferImplicitByType(Types$Type, Contexts$Context, Position):48->rgb(225,86,86)
Implicits.inferImplicitFor$(Implicits, Types$Type, Trees$Tree, Contexts$Context, boolean):39->rgb(203,55,55)
Implicits.inferImplicitFor(Types$Type, Trees$Tree, Contexts$Context, boolean):40->rgb(218,76,76)
Implicits.inferImplicitView$(Implicits, Types$Type, Types$Type, Trees$Tree, Contexts$Context, boolean, boolean):43->rgb(229,93,93)
Implicits.inferImplicitView(Types$Type, Types$Type, Trees$Tree, Contexts$Context, boolean, boolean):44->rgb(243,112,112)
IndexedSeq$.newBuilder():46->rgb(252,126,126)
IndexedSeqLike$Elements.<init>(IndexedSeqLike, int, int):53->rgb(210,64,64)
IndexedSeqLike.iterator$(IndexedSeqLike):87->rgb(248,120,120)
IndexedSeqLike.iterator():87->rgb(244,115,115)
IndexedSeqLike.sizeHintIfCheap$(IndexedSeqLike):96->rgb(237,105,105)
IndexedSeqLike.sizeHintIfCheap():96->rgb(229,92,92)
IndexedSeqOptimized.drop$(IndexedSeqOptimized, int):140->rgb(253,127,127)
IndexedSeqOptimized.drop(int):140->rgb(249,121,121)
IndexedSeqOptimized.exists$(IndexedSeqOptimized, Function1):45->rgb(227,89,89)
IndexedSeqOptimized.exists(Function1):45->rgb(240,108,108)
IndexedSeqOptimized.foldLeft$(IndexedSeqOptimized, Object, Function2):64->rgb(220,79,79)
IndexedSeqOptimized.foldLeft(Object, Function2):56->rgb(235,102,102)
IndexedSeqOptimized.foreach$(IndexedSeqOptimized, Function1):29->rgb(211,66,66)
IndexedSeqOptimized.foreach(Function1):32->rgb(251,124,124)
IndexedSeqOptimized.init$(IndexedSeqOptimized):134->rgb(220,80,80)
IndexedSeqOptimized.init():134->rgb(253,128,128)
IndexedSeqOptimized.prefixLengthImpl(Function1, boolean):37->rgb(205,58,58)
IndexedSeqOptimized.slice$(IndexedSeqOptimized, int, int):109->rgb(208,62,62)
IndexedSeqOptimized.slice(int, int):114->rgb(241,110,110)
IndexedSeqOptimized.splitAt$(IndexedSeqOptimized, int):149->rgb(210,64,64)
IndexedSeqOptimized.splitAt(int):149->rgb(219,77,77)
Infer$Inferencer$$anonfun$1.isDefinedAt(Object):1257->rgb(225,87,87)
Infer$Inferencer$AdjustedTypeArgs$.AllArgsAndUndets$lzycompute$1():446->rgb(245,115,115)
Infer$Inferencer$AdjustedTypeArgs$.AllArgsAndUndets():446->rgb(235,101,101)
Infer$Inferencer$AdjustedTypeArgs$.scala$tools$nsc$typechecker$Infer$Inferencer$AdjustedTypeArgs$$toLists(Tuple4):456->rgb(207,61,61)
Infer$Inferencer$AdjustedTypeArgs$.toLists(Tuple2):454->rgb(252,127,127)
Infer$Inferencer$AdjustedTypeArgs$.unapply(LinkedHashMap):436->rgb(203,55,55)
Infer$Inferencer$AdjustedTypeArgs$AllArgsAndUndets$.unapply(LinkedHashMap):449->rgb(252,126,126)
Infer$Inferencer$AdjustedTypeArgs$AllArgsAndUndets$.unapply(LinkedHashMap):450->rgb(221,81,81)
Infer$Inferencer$AdjustedTypeArgs$Undets$.unapply(LinkedHashMap):439->rgb(219,78,78)
Infer$Inferencer$AdjustedTypeArgs$Undets$.unapply(LinkedHashMap):441->rgb(243,113,113)
Infer$Inferencer$InferMethodAlternativeTwice$1.$anonfun$bestForExpectedType$1$adapted(Infer$Inferencer$InferMethodAlternativeTwice$1, Types$Type, Symbols$Symbol):1395->rgb(253,127,127)
Infer$Inferencer$InferMethodAlternativeTwice$1.$anonfun$bestForExpectedType$1(Infer$Inferencer$InferMethodAlternativeTwice$1, Types$Type, Symbols$Symbol):1395->rgb(237,104,104)
Infer$Inferencer$InferMethodAlternativeTwice$1.$anonfun$bestForExpectedType$2$adapted(Infer$Inferencer$InferMethodAlternativeTwice$1, Symbols$Symbol, Symbols$Symbol):1396->rgb(247,119,119)
Infer$Inferencer$InferMethodAlternativeTwice$1.$anonfun$bestForExpectedType$2(Infer$Inferencer$InferMethodAlternativeTwice$1, Symbols$Symbol, Symbols$Symbol):1396->rgb(206,59,59)
Infer$Inferencer$InferMethodAlternativeTwice$1.$anonfun$isAltApplicable$1(Infer$Inferencer$InferMethodAlternativeTwice$1, Types$Type, Symbols$Symbol):1392->rgb(235,102,102)
Infer$Inferencer$InferMethodAlternativeTwice$1.bestForExpectedType(Types$Type, boolean):1395->rgb(225,86,86)
Infer$Inferencer$InferMethodAlternativeTwice$1.bestForExpectedType(Types$Type, boolean):1396->rgb(202,53,53)
Infer$Inferencer$InferMethodAlternativeTwice$1.bestForExpectedType(Types$Type, boolean):65->rgb(249,121,121)
Infer$Inferencer$InferMethodAlternativeTwice$1.bestForExpectedType(Types$Type, boolean):66->rgb(244,115,115)
Infer$Inferencer$InferMethodAlternativeTwice$1.followType(Symbols$Symbol):1390->rgb(247,119,119)
Infer$Inferencer$InferMethodAlternativeTwice$1.isAltApplicable(Types$Type, Symbols$Symbol):1392->rgb(231,95,95)
Infer$Inferencer$InferMethodAlternativeTwice$1.rankAlternatives(Symbols$Symbol, Symbols$Symbol):1393->rgb(215,73,73)
Infer$Inferencer$InferMethodAlternativeTwice$1.tryOnce(boolean):1408->rgb(223,83,83)
Infer$Inferencer$InferTwice$1.$anonfun$tryOnce$1$adapted(Infer$Inferencer$InferTwice$1, Symbols$Symbol):1274->rgb(230,93,93)
Infer$Inferencer$InferTwice$1.$anonfun$tryOnce$1(Infer$Inferencer$InferTwice$1, Symbols$Symbol):1274->rgb(251,124,124)
Infer$Inferencer$InferTwice$1.tryOnce(boolean):1274->rgb(204,57,57)
Infer$Inferencer.$anonfun$adjustTypeArgs$1(Infer$Inferencer, Types$Type, Builder, Symbols$Symbol, Types$TypeVar, Types$Type):490->rgb(222,82,82)
Infer$Inferencer.$anonfun$checkAccessible$1$adapted(Infer$Inferencer, Types$Type, Trees$Tree, Symbols$Symbol):258->rgb(206,58,58)
Infer$Inferencer.$anonfun$checkAccessible$1(Infer$Inferencer, Types$Type, Trees$Tree, Symbols$Symbol):258->rgb(230,94,94)
Infer$Inferencer.$anonfun$checkBounds$1(Types$Type):891->rgb(207,61,61)
Infer$Inferencer.$anonfun$checkBounds$2(Symbols$Symbol):891->rgb(248,121,121)
Infer$Inferencer.$anonfun$isApplicable$1(Infer$Inferencer, List, List, Types$Type, Types$Type, Symbols$Symbol):768->rgb(207,61,61)
Infer$Inferencer.$anonfun$isApplicable$2$adapted(Infer$Inferencer, List, List, Types$Type, List, Types$Type):772->rgb(239,107,107)
Infer$Inferencer.$anonfun$isApplicable$2(Infer$Inferencer, List, List, Types$Type, List, Types$Type):772->rgb(244,114,114)
Infer$Inferencer.$anonfun$isApplicableToMethod$3(Infer$Inferencer, List, Types$MethodType, Types$Type, List, List):730->rgb(210,65,65)
Infer$Inferencer.$anonfun$isApplicableToMethod$3(Infer$Inferencer, List, Types$MethodType, Types$Type, List, List):733->rgb(219,77,77)
Infer$Inferencer.$anonfun$isCompatibleArgs$1(Infer$Inferencer, Types$Type, Types$Type):313->rgb(212,68,68)
Infer$Inferencer.$anonfun$isConservativelyCompatible$1(Infer$Inferencer, Types$Type, Types$Type):330->rgb(224,85,85)
Infer$Inferencer.$anonfun$methTypeArgs$1(Infer$Inferencer, Symbols$Symbol):515->rgb(240,108,108)
Infer$Inferencer.$anonfun$methTypeArgs$2(Infer$Inferencer, Types$TypeVar):539->rgb(237,103,103)
Infer$Inferencer.$anonfun$methTypeArgs$3(Infer$Inferencer, List, List, Types$Type, Types$Type):544->rgb(223,84,84)
Infer$Inferencer.$anonfun$methTypeArgs$3(Infer$Inferencer, List, List, Types$Type, Types$Type):548->rgb(250,123,123)
Infer$Inferencer.$anonfun$methTypeArgs$5(Infer$Inferencer, List, Symbols$Symbol):553->rgb(209,63,63)
Infer$Inferencer.$anonfun$overloadsToConsiderBySpecificity$4$adapted(Infer$Inferencer, List, boolean, Symbols$Symbol):1357->rgb(214,70,70)
Infer$Inferencer.$anonfun$overloadsToConsiderBySpecificity$4(Infer$Inferencer, List, boolean, Symbols$Symbol):1357->rgb(243,112,112)
Infer$Inferencer.$anonfun$protoTypeArgs$2(Infer$Inferencer, Symbols$Symbol):418->rgb(229,92,92)
Infer$Inferencer.accessible$1(Symbols$Symbol, Types$Type, Trees$Tree):258->rgb(227,89,89)
Infer$Inferencer.adjustTypeArgs(List, List, List, Types$Type):475->rgb(213,69,69)
Infer$Inferencer.adjustTypeArgs(List, List, List, Types$Type):477->rgb(204,56,56)
Infer$Inferencer.applicableExpectingPt$1(Types$Type, List, Types$Type, List):786->rgb(221,81,81)
Infer$Inferencer.applicableExpectingPt$1(Types$Type, List, Types$Type, List):787->rgb(202,53,53)
Infer$Inferencer.applicableExpectingPt$1(Types$Type, List, Types$Type, List):788->rgb(247,119,119)
Infer$Inferencer.argsTupled$1(Types$MethodType, List):718->rgb(242,111,111)
Infer$Inferencer.check$1(Trees$Tree, Types$Type, Symbols$Symbol, List, List, String):886->rgb(251,124,124)
Infer$Inferencer.check$1(Trees$Tree, Types$Type, Symbols$Symbol, List, List, String):887->rgb(210,65,65)
Infer$Inferencer.checkAccessible(Trees$Tree, Symbols$Symbol, Types$Type, Trees$Tree):263->rgb(241,110,110)
Infer$Inferencer.checkAccessible(Trees$Tree, Symbols$Symbol, Types$Type, Trees$Tree):264->rgb(232,97,97)
Infer$Inferencer.checkAccessible(Trees$Tree, Symbols$Symbol, Types$Type, Trees$Tree):266->rgb(241,110,110)
Infer$Inferencer.checkAccessible(Trees$Tree, Symbols$Symbol, Types$Type, Trees$Tree):268->rgb(248,121,121)
Infer$Inferencer.checkAccessible(Trees$Tree, Symbols$Symbol, Types$Type, Trees$Tree):270->rgb(237,104,104)
Infer$Inferencer.checkAccessible(Trees$Tree, Symbols$Symbol, Types$Type, Trees$Tree):272->rgb(214,71,71)
Infer$Inferencer.checkAccessible(Trees$Tree, Symbols$Symbol, Types$Type, Trees$Tree):274->rgb(238,106,106)
Infer$Inferencer.checkAccessible(Trees$Tree, Symbols$Symbol, Types$Type, Trees$Tree):280->rgb(215,72,72)
Infer$Inferencer.checkBounds(Trees$Tree, Types$Type, Symbols$Symbol, List, List, String):891->rgb(218,76,76)
Infer$Inferencer.checkIsApplicable$1(List, Types$Type):801->rgb(233,99,99)
Infer$Inferencer.checkKindBounds(List, List, Types$Type, Symbols$Symbol):895->rgb(225,87,87)
Infer$Inferencer.containsNamedType(List):1311->rgb(251,124,124)
Infer$Inferencer.exprTypeArgs(List, List, Types$Type, Types$Type, boolean):375->rgb(213,69,69)
Infer$Inferencer.exprTypeArgs(List, Types$Type, Types$Type, boolean):384->rgb(224,85,85)
Infer$Inferencer.followApply(Types$Type):611->rgb(239,107,107)
Infer$Inferencer.followApply(Types$Type):618->rgb(244,115,115)
Infer$Inferencer.followApply(Types$Type):619->rgb(253,127,127)
Infer$Inferencer.freeTypeParamsOfTerms(Types$Type):1257->rgb(210,65,65)
Infer$Inferencer.inferConstructorInstance(Trees$Tree, List, Types$Type):1078->rgb(224,85,85)
Infer$Inferencer.inferExprAlternative(Trees$Tree, Types$Type):1300->rgb(253,127,127)
Infer$Inferencer.inferExprInstance(Trees$Tree, List, Types$Type, Types$Type, boolean, boolean):927->rgb(247,118,118)
Infer$Inferencer.inferFor$1(Types$Type, Trees$Tree, List, Types$Type, Types$Type):1028->rgb(248,121,121)
Infer$Inferencer.inferFor$1(Types$Type, Trees$Tree, List, Types$Type, Types$Type):1038->rgb(241,110,110)
Infer$Inferencer.inferMethodAlternative(Trees$Tree, List, List, Types$Type):1412->rgb(232,96,96)
Infer$Inferencer.inferMethodInstance(Trees$Tree, List, List, Types$Type):979->rgb(221,80,80)
Infer$Inferencer.inferMethodInstance(Trees$Tree, List, List, Types$Type):981->rgb(208,62,62)
Infer$Inferencer.inferMethodInstance(Trees$Tree, List, List, Types$Type):983->rgb(206,59,59)
Infer$Inferencer.inferMethodInstance(Trees$Tree, List, List, Types$Type):984->rgb(234,99,99)
Infer$Inferencer.inferMethodInstance(Trees$Tree, List, List, Types$Type):986->rgb(248,120,120)
Infer$Inferencer.inferMethodInstance(Trees$Tree, List, List, Types$Type):988->rgb(220,79,79)
Infer$Inferencer.inferMethodInstance(Trees$Tree, List, List, Types$Type):989->rgb(201,51,51)
Infer$Inferencer.inferTypedPattern(Trees$Tree, Types$Type, Types$Type, boolean):1159->rgb(224,85,85)
Infer$Inferencer.isApplicableBasedOnArity(Types$Type, int, boolean, boolean):583->rgb(208,62,62)
Infer$Inferencer.isApplicableBasedOnArity(Types$Type, int, boolean, boolean):607->rgb(222,82,82)
Infer$Inferencer.isApplicableSafe(List, Types$Type, List, Types$Type):793->rgb(226,88,88)
Infer$Inferencer.isApplicableToMethod(List, Types$MethodType, List, Types$Type):750->rgb(207,61,61)
Infer$Inferencer.isApplicableToMethod(List, Types$MethodType, List, Types$Type):751->rgb(233,99,99)
Infer$Inferencer.isApplicableToMethod(List, Types$MethodType, List, Types$Type):752->rgb(224,85,85)
Infer$Inferencer.isApplicableToMethod(List, Types$MethodType, List, Types$Type):753->rgb(247,119,119)
Infer$Inferencer.isAsSpecific(Types$Type, Types$Type):818->rgb(237,103,103)
Infer$Inferencer.isAsSpecific(Types$Type, Types$Type):819->rgb(254,129,129)
Infer$Inferencer.isAsSpecific(Types$Type, Types$Type):820->rgb(230,94,94)
Infer$Inferencer.isAsSpecific(Types$Type, Types$Type):821->rgb(213,69,69)
Infer$Inferencer.isAsSpecific(Types$Type, Types$Type):823->rgb(206,59,59)
Infer$Inferencer.isAsSpecificValueType(Types$Type, Types$Type, List, List):832->rgb(226,88,88)
Infer$Inferencer.isCheckable(Types$Type):179->rgb(223,84,84)
Infer$Inferencer.isCompatible(Types$Type, Types$Type):305->rgb(247,118,118)
Infer$Inferencer.isCompatible(Types$Type, Types$Type):307->rgb(221,81,81)
Infer$Inferencer.isCompatible(Types$Type, Types$Type):308->rgb(251,124,124)
Infer$Inferencer.isCompatible(Types$Type, Types$Type):310->rgb(253,127,127)
Infer$Inferencer.isCompatibleArgs(List, List):313->rgb(221,81,81)
Infer$Inferencer.isCompatibleSam$1(Types$Type, Types$Type):300->rgb(232,96,96)
Infer$Inferencer.isCompatibleSam$1(Types$Type, Types$Type):301->rgb(252,126,126)
Infer$Inferencer.isConservativelyCompatible(Types$Type, Types$Type):330->rgb(246,117,117)
Infer$Inferencer.isStrictlyMoreSpecific(Types$Type, Types$Type, Symbols$Symbol, Symbols$Symbol):859->rgb(228,92,92)
Infer$Inferencer.isStrictlyMoreSpecific(Types$Type, Types$Type, Symbols$Symbol, Symbols$Symbol):860->rgb(227,89,89)
Infer$Inferencer.isWeaklyCompatible(Types$Type, Types$Type):320->rgb(204,56,56)
Infer$Inferencer.isWeaklyCompatible(Types$Type, Types$Type):321->rgb(204,56,56)
Infer$Inferencer.methTypeArgs(Trees$Tree, List, List, Types$Type, List, Types$Type):515->rgb(242,111,111)
Infer$Inferencer.methTypeArgs(Trees$Tree, List, List, Types$Type, List, Types$Type):519->rgb(231,95,95)
Infer$Inferencer.methTypeArgs(Trees$Tree, List, List, Types$Type, List, Types$Type):525->rgb(249,121,121)
Infer$Inferencer.methTypeArgs(Trees$Tree, List, List, Types$Type, List, Types$Type):538->rgb(224,85,85)
Infer$Inferencer.methTypeArgs(Trees$Tree, List, List, Types$Type, List, Types$Type):542->rgb(253,127,127)
Infer$Inferencer.methTypeArgs(Trees$Tree, List, List, Types$Type, List, Types$Type):553->rgb(205,58,58)
Infer$Inferencer.methTypeArgs(Trees$Tree, List, List, Types$Type, List, Types$Type):570->rgb(221,81,81)
Infer$Inferencer.onRight$1(Types$Type, Types$Type):808->rgb(210,64,64)
Infer$Inferencer.onRight$1(Types$Type, Types$Type):809->rgb(218,76,76)
Infer$Inferencer.onRight$1(Types$Type, Types$Type):810->rgb(244,114,114)
Infer$Inferencer.protoTypeArgs(List, List, Types$Type, Types$Type):418->rgb(247,119,119)
Infer$Inferencer.protoTypeArgs(List, List, Types$Type, Types$Type):419->rgb(226,88,88)
Infer$Inferencer.protoTypeArgs(List, List, Types$Type, Types$Type):420->rgb(229,93,93)
Infer$Inferencer.scala$tools$nsc$typechecker$Infer$Inferencer$$isApplicable(List, Types$Type, List, Types$Type):768->rgb(202,54,54)
Infer$Inferencer.scala$tools$nsc$typechecker$Infer$Inferencer$$isApplicable(List, Types$Type, List, Types$Type):770->rgb(239,107,107)
Infer$Inferencer.scala$tools$nsc$typechecker$Infer$Inferencer$$isApplicable(List, Types$Type, List, Types$Type):772->rgb(243,112,112)
Infer$Inferencer.scala$tools$nsc$typechecker$Infer$Inferencer$$overloadsToConsiderBySpecificity(List, List, boolean):1357->rgb(226,88,88)
Infer$Inferencer.solve$1(List, List, Types$Type, Types$Type):372->rgb(222,83,83)
Infer$Inferencer.tryInstantiating$1(List, List, Types$MethodType, Types$Type, List):114->rgb(225,86,86)
Infer$Inferencer.tryWithArgs$1(List, List, Types$MethodType, List, Types$Type):726->rgb(219,78,78)
Infer$Inferencer.tupleIfNecessary(List, List):710->rgb(226,88,88)
Infer$Inferencer.typeAfterTupleConversion(List):697->rgb(216,73,73)
Infer$Inferencer.typesCompatible$1(List, List, Types$MethodType, Types$Type, List):739->rgb(208,62,62)
Infer$Inferencer.typesCompatible$1(List, List, Types$MethodType, Types$Type, List):740->rgb(219,78,78)
Infer$instantiate$.apply(Object):96->rgb(206,59,59)
Infer$instantiate$.apply(Types$Type):108->rgb(240,108,108)
Infer$instantiate$.apply(Types$Type):109->rgb(225,86,86)
Infer$instantiate$.applyTypeVar(Types$TypeVar):103->rgb(247,118,118)
Infer$instantiate$.applyTypeVar(Types$TypeVar):104->rgb(204,56,56)
Infer.$anonfun$bestAlternatives$1$adapted(Infer, Function2, Symbols$Symbol, Symbols$Symbol):62->rgb(227,90,90)
Infer.$anonfun$bestAlternatives$2$adapted(Infer, Function2, Symbols$Symbol, Symbols$Symbol):62->rgb(219,78,78)
Infer.$anonfun$formalTypes$1(Infer, Types$Type):39->rgb(226,88,88)
Infer.formalTypes$(Infer, List, int, boolean, boolean):37->rgb(207,60,60)
Infer.formalTypes(List, int, boolean, boolean):39->rgb(237,103,103)
Infer.formalTypes(List, int, boolean, boolean):42->rgb(234,100,100)
Infer.freshVar$(Infer, Symbols$Symbol):83->rgb(252,125,125)
Infer.freshVar(Symbols$Symbol):83->rgb(245,116,116)
Infer.normalize$(Infer, Types$Type):161->rgb(222,82,82)
Infer.normalize(Types$Type):162->rgb(233,98,98)
Infer.normalize(Types$Type):166->rgb(204,56,56)
Infer.solvedTypes$(Infer, List, List, List, boolean, int):137->rgb(251,124,124)
Infer.solvedTypes(List, List, List, boolean, int):139->rgb(219,79,79)
Infer.solvedTypes(List, List, List, boolean, int):145->rgb(220,79,79)
Infer.solvedTypes(List, List, List, boolean, int):146->rgb(251,124,124)
Inflater.needsInput():205->rgb(237,104,104)
InflaterInputStream.read(byte[], int, int):157->rgb(235,100,100)
InfoTransform$Phase$$anon$1.transform(Symbols$Symbol, Types$Type):38->rgb(208,62,62)
InfoTransformers$InfoTransformer.nextFrom(int):48->rgb(242,111,111)
InfoTransformers$InfoTransformer.nextFrom(int):49->rgb(245,115,115)
InlineInfoAttribute.$anonfun$write$3(Tuple2):66->rgb(239,107,107)
InlineInfoAttribute.$anonfun$write$5(ClassWriter, ByteVector, Tuple2):67->rgb(229,92,92)
InlineInfoAttribute.$anonfun$write$5(ClassWriter, ByteVector, Tuple2):70->rgb(243,113,113)
InlineInfoAttribute.write(ClassWriter, byte[], int, int, int):66->rgb(253,127,127)
InsnList$InsnListIterator.hasNext():555->rgb(200,51,51)
InsnList.accept(MethodVisitor):162->rgb(204,56,56)
InsnList.get(int):112->rgb(221,81,81)
InsnList.indexOf(AbstractInsnNode):148->rgb(245,116,116)
InsnList.toArray():201->rgb(215,72,72)
InstantEvent.<init>(EventToken):107->rgb(239,107,107)
InstructionStackEffect$.computeConsProd(AbstractInsnNode, boolean, boolean, Frame):169->rgb(230,94,94)
InstructionStackEffect$.computeConsProd(AbstractInsnNode, boolean, boolean, Frame):314->rgb(200,50,50)
InstructionStackEffect$.computeConsProd(AbstractInsnNode, boolean, boolean, Frame):316->rgb(206,59,59)
InstructionStackEffect$.invokeConsProd(String, AbstractInsnNode, boolean):64->rgb(232,97,97)
InstructionStackEffect$.maxStackGrowth(AbstractInsnNode):44->rgb(247,119,119)
IntRef.create(int):21->rgb(235,101,101)
Integer.rotateLeft(int, int):1475->rgb(232,97,97)
Interface$TypedSubstitution$Substitution$substIdentsForTrees$2$.$anonfun$toTypes$1(Interface$TypedSubstitution$Substitution$substIdentsForTrees$2$, Trees$Tree):230->rgb(215,71,71)
Interface$TypedSubstitution$Substitution$substIdentsForTrees$2$.$anonfun$transform$2(Interface$TypedSubstitution$Substitution$substIdentsForTrees$2$, Types$Type):247->rgb(207,60,60)
Interface$TypedSubstitution$Substitution$substIdentsForTrees$2$.subst$1(List, List, Trees$Tree):235->rgb(204,57,57)
Interface$TypedSubstitution$Substitution$substIdentsForTrees$2$.toTypes$lzycompute():230->rgb(248,120,120)
Interface$TypedSubstitution$Substitution$substIdentsForTrees$2$.toTypes():230->rgb(246,116,116)
Interface$TypedSubstitution$Substitution$substIdentsForTrees$2$.transform(Trees$Tree):239->rgb(236,103,103)
Interface$TypedSubstitution$Substitution$substIdentsForTrees$2$.transform(Trees$Tree):240->rgb(223,83,83)
Interface$TypedSubstitution$Substitution$substIdentsForTrees$2$.transform(Trees$Tree):247->rgb(245,116,116)
Interface$TypedSubstitution$Substitution$substIdentsForTrees$2$.transform(Trees$TreeApi):222->rgb(202,54,54)
Interface$TypedSubstitution$Substitution$substIdentsForTrees$2$.typedStable(Trees$Tree):229->rgb(243,113,113)
Interface$TypedSubstitution$Substitution.$anonfun$$greater$greater$2(Interface$TypedSubstitution$Substitution, Trees$Tree):264->rgb(241,109,109)
Interface$TypedSubstitution$Substitution.$greater$greater(Interface$TypedSubstitution$Substitution):263->rgb(239,106,106)
Interface$TypedSubstitution$Substitution.$greater$greater(Interface$TypedSubstitution$Substitution):264->rgb(204,56,56)
Interface$TypedSubstitution$Substitution.apply(Trees$Tree):221->rgb(243,112,112)
Interface$TypedSubstitution$Substitution.apply(Trees$Tree):252->rgb(209,64,64)
Interface$TypedSubstitution$Substitution.apply(Trees$Tree):254->rgb(204,56,56)
Interface$vpmName$.counted(String, int):131->rgb(233,99,99)
InternalPositionImpl.line$(InternalPositionImpl):166->rgb(221,80,80)
InternalPositionImpl.line():166->rgb(243,112,112)
InvokeDynamicInsnNode.accept(MethodVisitor):93->rgb(225,86,86)
Invokers.checkCustomized(Object):396->rgb(203,55,55)
Invokers.checkCustomized(Object):397->rgb(222,82,82)
Invokers.checkExactType(Object, Object):305->rgb(200,51,51)
Invokers.checkExactType(Object, Object):307->rgb(253,128,128)
Invokers.checkExactType(Object, Object):308->rgb(220,79,79)
Item.set(int, String, String, String):218->rgb(208,61,61)
Item.set(int, String, String, String):230->rgb(238,105,105)
Iterable$.canBuildFrom():48->rgb(253,128,128)
Iterable$.newBuilder():37->rgb(219,77,77)
Iterable$.newBuilder():44->rgb(214,71,71)
Iterable$.newBuilder():50->rgb(232,96,96)
IterableLike.copyToArray$(IterableLike, Object, int, int):248->rgb(232,97,97)
IterableLike.copyToArray(Object, int, int):253->rgb(212,68,68)
IterableLike.exists$(IterableLike, Function1):75->rgb(225,86,86)
IterableLike.exists(Function1):76->rgb(229,93,93)
IterableLike.find$(IterableLike, Function1):77->rgb(226,89,89)
IterableLike.find(Function1):78->rgb(229,93,93)
IterableLike.forall$(IterableLike, Function1):73->rgb(237,104,104)
IterableLike.forall(Function1):74->rgb(228,90,90)
IterableLike.foreach$(IterableLike, Function1):70->rgb(243,112,112)
IterableLike.foreach(Function1):71->rgb(246,117,117)
Iterator$$anon$10.next():448->rgb(215,73,73)
Iterator$$anon$11.hasNext():478->rgb(206,59,59)
Iterator$$anon$11.hasNext():479->rgb(241,109,109)
Iterator$$anon$11.nextCur():473->rgb(215,71,71)
Iterator$$anon$12.hasNext():502->rgb(220,79,79)
Iterator$.apply(Seq):62->rgb(212,67,67)
Iterator$.empty():36->rgb(248,120,120)
Iterator$ConcatIterator.foreach(Function1):167->rgb(232,96,96)
Iterator.exists$(Iterator, Function1):953->rgb(206,59,59)
Iterator.exists(Function1):955->rgb(225,86,86)
Iterator.find$(Iterator, Function1):978->rgb(221,80,80)
Iterator.find(Function1):979->rgb(224,85,85)
Iterator.find(Function1):981->rgb(216,73,73)
Iterator.forall$(Iterator, Function1):939->rgb(220,80,80)
Iterator.forall(Function1):941->rgb(213,69,69)
Iterator.foreach$(Iterator, Function1):929->rgb(241,109,109)
Iterator.foreach(Function1):929->rgb(225,87,87)
JFunction0$mcV$sp.apply():12->rgb(225,87,87)
JFunction0$mcZ$sp.apply():12->rgb(225,87,87)
JavaAccFlags$.annInfo$1(Symbols$ClassSymbol, SymbolTable):65->rgb(222,82,82)
JavaAccFlags$.has$extension(int, int):23->rgb(207,60,60)
JavaAccFlags$.isTransient$extension(int):42->rgb(250,123,123)
JavaAccFlags$.isVarargs$extension(int):43->rgb(245,116,116)
JavaAccFlags$.toScalaAnnotations$extension(int, SymbolTable):68->rgb(221,81,81)
JavaAccFlags$.toScalaAnnotations$extension(int, SymbolTable):69->rgb(231,96,96)
JavaAccFlags$.toScalaFlags$extension(int):55->rgb(245,115,115)
JavaConverters$.asScalaIterator(Iterator):73->rgb(231,95,95)
JavaPlatform.isMaybeBoxed$(JavaPlatform, Symbols$Symbol):51->rgb(254,129,129)
JavaPlatform.isMaybeBoxed(Symbols$Symbol):55->rgb(235,101,101)
JumpInsnNode.accept(MethodVisitor):88->rgb(228,91,91)
Kinds.$anonfun$checkKindBounds0$10(Kinds, List, List, Types$Type, Symbols$Symbol, boolean, Object, Symbols$Symbol, Types$Type):214->rgb(217,75,75)
Kinds.$anonfun$checkKindBounds0$10(Kinds, List, List, Types$Type, Symbols$Symbol, boolean, Object, Symbols$Symbol, Types$Type):216->rgb(206,59,59)
Kinds.checkKindBounds0$(Kinds, List, List, Types$Type, Symbols$Symbol, boolean):115->rgb(202,53,53)
Kinds.checkKindBounds0(List, List, Types$Type, Symbols$Symbol, boolean):205->rgb(249,121,121)
Kinds.checkKindBounds0(List, List, Types$Type, Symbols$Symbol, boolean):210->rgb(223,84,84)
Label.addReference(int, int):338->rgb(224,86,86)
Label.put(MethodWriter, ByteVector, int, boolean):311->rgb(237,104,104)
LambdaFormEditor.bindArgumentL(BoundMethodHandle, int, Object):402->rgb(229,92,92)
LambdaFormEditor.bindArgumentType(BoundMethodHandle, int, LambdaForm$BasicType):442->rgb(209,64,64)
LambdaLift$$anon$1.apply(Types$Type):23->rgb(216,74,74)
LambdaLift$$anon$1.apply(Types$Type):30->rgb(220,79,79)
LambdaLift$LambdaLifter$$anon$2.traverse(Trees$Tree):192->rgb(226,87,87)
LambdaLift$LambdaLifter$$anon$2.traverse(Trees$Tree):201->rgb(250,124,124)
LambdaLift$LambdaLifter$$anon$2.traverse(Trees$Tree):204->rgb(210,65,65)
LambdaLift$LambdaLifter$$anon$2.traverse(Trees$Tree):207->rgb(202,54,54)
LambdaLift$LambdaLifter$$anon$2.traverse(Trees$Tree):211->rgb(237,104,104)
LambdaLift$LambdaLifter$$anon$2.traverse(Trees$Tree):212->rgb(216,73,73)
LambdaLift$LambdaLifter$$anon$2.traverse(Trees$Tree):220->rgb(202,53,53)
LambdaLift$LambdaLifter$$anon$2.traverse(Trees$TreeApi):189->rgb(234,100,100)
LambdaLift$LambdaLifter.$anonfun$transformUnit$1(LambdaLift$LambdaLifter, CompilationUnits$CompilationUnit):573->rgb(207,61,61)
LambdaLift$LambdaLifter.<init>(LambdaLift, CompilationUnits$CompilationUnit):51->rgb(245,115,115)
LambdaLift$LambdaLifter.addFreeParams(Trees$Tree, Symbols$Symbol):394->rgb(224,85,85)
LambdaLift$LambdaLifter.addFreeParams(Trees$Tree, Symbols$Symbol):399->rgb(228,91,91)
LambdaLift$LambdaLifter.computeFreeVars():235->rgb(244,114,114)
LambdaLift$LambdaLifter.liftDef(Trees$Tree):464->rgb(249,122,122)
LambdaLift$LambdaLifter.liftDef(Trees$Tree):469->rgb(217,75,75)
LambdaLift$LambdaLifter.memberRef(Symbols$Symbol):357->rgb(230,94,94)
LambdaLift$LambdaLifter.memberRef(Symbols$Symbol):359->rgb(245,115,115)
LambdaLift$LambdaLifter.postTransform(Trees$Tree, boolean):475->rgb(241,110,110)
LambdaLift$LambdaLifter.postTransform(Trees$Tree, boolean):478->rgb(232,97,97)
LambdaLift$LambdaLifter.postTransform(Trees$Tree, boolean):479->rgb(217,75,75)
LambdaLift$LambdaLifter.postTransform(Trees$Tree, boolean):494->rgb(207,61,61)
LambdaLift$LambdaLifter.postTransform(Trees$Tree, boolean):507->rgb(244,114,114)
LambdaLift$LambdaLifter.postTransform(Trees$Tree, boolean):516->rgb(238,105,105)
LambdaLift$LambdaLifter.postTransform(Trees$Tree, boolean):517->rgb(202,54,54)
LambdaLift$LambdaLifter.postTransform(Trees$Tree, boolean):519->rgb(245,116,116)
LambdaLift$LambdaLifter.postTransform(Trees$Tree, boolean):537->rgb(202,54,54)
LambdaLift$LambdaLifter.preTransform(Trees$Tree):541->rgb(220,79,79)
LambdaLift$LambdaLifter.proxy(Symbols$Symbol):324->rgb(204,56,56)
LambdaLift$LambdaLifter.proxyRef(Symbols$Symbol):364->rgb(252,125,125)
LambdaLift$LambdaLifter.qual$1(Symbols$Symbol, Symbols$Symbol):343->rgb(205,58,58)
LambdaLift$LambdaLifter.scala$tools$nsc$transform$LambdaLift$LambdaLifter$$markCalled(Symbols$Symbol, Symbols$Symbol):184->rgb(227,89,89)
LambdaLift$LambdaLifter.scala$tools$nsc$transform$LambdaLift$LambdaLifter$$symSet(LinkedHashMap, Symbols$Symbol):71->rgb(209,64,64)
LambdaLift$LambdaLifter.searchIn$1(Symbols$Symbol, Symbols$Symbol):313->rgb(217,75,75)
LambdaLift$LambdaLifter.searchIn$1(Symbols$Symbol, Symbols$Symbol):314->rgb(251,124,124)
LambdaLift$LambdaLifter.super$transformUnit(CompilationUnits$CompilationUnit):573->rgb(244,114,114)
LambdaLift$LambdaLifter.transform(Trees$Tree):549->rgb(224,86,86)
LambdaLift$LambdaLifter.transform(Trees$TreeApi):51->rgb(221,80,80)
LambdaLift$LambdaLifter.transformStats(List, Symbols$Symbol):567->rgb(240,108,108)
LambdaLift$LambdaLifter.transformStats(List, Symbols$SymbolApi):51->rgb(208,62,62)
LambdaLift$LambdaLifter.transformUnit(CompilationUnits$CompilationUnit):571->rgb(235,101,101)
LambdaLift$LambdaLifter.transformUnit(CompilationUnits$CompilationUnit):573->rgb(205,57,57)
LambdaLift.$anonfun$refCreateMethod$1(LambdaLift, Symbols$Symbol):36->rgb(203,55,55)
LambdaLift.newPhase(Phase):14->rgb(203,55,55)
LambdaLift.newTransformer(CompilationUnits$CompilationUnit):49->rgb(247,119,119)
LambdaLift.refCreateMethod$lzycompute():36->rgb(204,56,56)
LambdaLift.scala$tools$nsc$transform$LambdaLift$$refCreateMethod():35->rgb(241,110,110)
LambdaLift.transformInfo(Symbols$Symbol, Types$Type):45->rgb(203,55,55)
LinearSeqLike$$anon$1.next():46->rgb(249,121,121)
LinearSeqLike.corresponds$(LinearSeqLike, GenSeq, Function2):65->rgb(225,87,87)
LinearSeqLike.corresponds(GenSeq, Function2):67->rgb(200,50,50)
LinearSeqOptimized.contains$(LinearSeqOptimized, Object):98->rgb(204,56,56)
LinearSeqOptimized.contains(Object):100->rgb(243,113,113)
LinearSeqOptimized.contains(Object):101->rgb(208,62,62)
LinearSeqOptimized.dropRight$(LinearSeqOptimized, int):192->rgb(200,50,50)
LinearSeqOptimized.dropRight(int):199->rgb(248,120,120)
LinearSeqOptimized.exists$(LinearSeqOptimized, Function1):88->rgb(251,125,125)
LinearSeqOptimized.exists(Function1):91->rgb(222,82,82)
LinearSeqOptimized.foldLeft$(LinearSeqOptimized, Object, Function2):118->rgb(227,90,90)
LinearSeqOptimized.foldLeft(Object, Function2):122->rgb(223,84,84)
LinearSeqOptimized.forall$(LinearSeqOptimized, Function1):78->rgb(253,128,128)
LinearSeqOptimized.forall(Function1):81->rgb(237,104,104)
LinearSeqOptimized.indexWhere$(LinearSeqOptimized, Function1, int):293->rgb(230,94,94)
LinearSeqOptimized.indexWhere(Function1, int):297->rgb(209,63,63)
LinearSeqOptimized.length$(LinearSeqOptimized):47->rgb(202,53,53)
LinearSeqOptimized.sameElements$(LinearSeqOptimized, GenIterable):248->rgb(211,67,67)
LinearSeqOptimized.sameElements(GenIterable):249->rgb(215,72,72)
LinearSeqOptimized.sameElements(GenIterable):254->rgb(248,120,120)
LinkedHashMap$.empty():21->rgb(202,53,53)
LinkedHashMap$.empty():23->rgb(244,115,115)
LinkedHashMap.$plus$eq(Object):49->rgb(204,56,56)
LinkedHashMap.$plus$eq(Tuple2):49->rgb(236,103,103)
LinkedHashMap.$plus$eq(Tuple2):91->rgb(231,95,95)
LinkedHashMap.<init>():49->rgb(202,54,54)
LinkedHashMap.createNewEntry(Object, Object):155->rgb(202,53,53)
LinkedHashMap.createNewEntry(Object, Object):49->rgb(208,63,63)
LinkedHashMap.findEntry(Object):49->rgb(242,111,111)
LinkedHashMap.findOrAddEntry(Object, Object):49->rgb(216,74,74)
LinkedHashMap.foreach(Function1):141->rgb(249,122,122)
LinkedHashMap.get(Object):65->rgb(237,104,104)
LinkedHashMap.index(int):49->rgb(204,55,55)
LinkedHashMap.put(Object, Object):71->rgb(235,101,101)
LinkedHashSet$.empty():137->rgb(209,63,63)
LinkedHashSet.$plus$eq(Object):61->rgb(252,126,126)
LinkedHashSet.<init>():42->rgb(227,90,90)
LinkedHashSet.add(Object):66->rgb(230,94,94)
LinkedHashSet.createNewEntry(Object, Object):107->rgb(232,97,97)
LinkedHashSet.createNewEntry(Object, Object):42->rgb(217,75,75)
LinkedHashSet.findOrAddEntry(Object, Object):42->rgb(235,101,101)
LinkedHashSet.improve(int, int):42->rgb(207,60,60)
LinkedHashSet.index(int):42->rgb(201,52,52)
LinkedHashSet.size():56->rgb(242,111,111)
LinkedHashSet.tableSize():42->rgb(214,70,70)
List$.apply(Seq):465->rgb(242,111,111)
List$.canBuildFrom():459->rgb(211,67,67)
List$.newBuilder():461->rgb(221,81,81)
List.$anonfun$foldRight$1(Function2, Object, Object):405->rgb(237,105,105)
List.$colon$colon$colon(List):128->rgb(213,69,69)
List.$colon$colon(Object):112->rgb(225,87,87)
List.<init>():86->rgb(225,86,86)
List.collect(PartialFunction, CanBuildFrom):305->rgb(208,61,61)
List.collect(PartialFunction, CanBuildFrom):313->rgb(218,77,77)
List.contains(Object):86->rgb(229,92,92)
List.corresponds(GenSeq, Function2):86->rgb(228,92,92)
List.dropRight(int):86->rgb(251,124,124)
List.dropWhile(Function1):371->rgb(227,90,90)
List.exists(Function1):86->rgb(234,99,99)
List.foldLeft(Object, Function2):86->rgb(230,94,94)
List.forall(Function1):86->rgb(215,72,72)
List.foreach(Function1):389->rgb(211,66,66)
List.indexWhere(Function1, int):86->rgb(226,87,87)
List.length():86->rgb(242,112,112)
List.loop$3(List, Function1):368->rgb(212,68,68)
List.map(Function1, CanBuildFrom):283->rgb(253,127,127)
List.sameElements(GenIterable):86->rgb(212,68,68)
List.thisCollection():86->rgb(215,72,72)
ListBuffer.$plus$eq(Object):173->rgb(212,68,68)
ListBuffer.$plus$eq(Object):177->rgb(226,88,88)
ListBuffer.$plus$eq(Object):178->rgb(231,95,95)
ListBuffer.$plus$eq(Object):44->rgb(222,83,83)
ListBuffer.$plus$plus$eq(TraversableOnce):186->rgb(201,52,52)
ListBuffer.$plus$plus$eq(TraversableOnce):44->rgb(214,71,71)
ListBuffer.<init>():45->rgb(214,71,71)
ListBuffer.copyToArray(Object, int):44->rgb(233,98,98)
ListBuffer.foreach(Function1):44->rgb(246,117,117)
ListBuffer.isEmpty():123->rgb(212,68,68)
ListBuffer.len():67->rgb(241,110,110)
ListBuffer.prependToList(List):325->rgb(215,72,72)
ListBuffer.result():308->rgb(236,103,103)
ListBuffer.result():44->rgb(215,73,73)
ListBuffer.sizeHint(TraversableLike):44->rgb(236,103,103)
ListBuffer.toList():314->rgb(202,54,54)
LocalOpt.$anonfun$methodOptimizations$1$adapted(LocalOpt, ClassNode, Object, MethodNode):214->rgb(206,60,60)
LocalOpt.$anonfun$methodOptimizations$1(LocalOpt, ClassNode, boolean, MethodNode):215->rgb(221,81,81)
LocalOpt.methodOptimizations(ClassNode):214->rgb(200,51,51)
LocalOpt.methodOptimizations(MethodNode, String):379->rgb(218,77,77)
LocalOpt.methodOptimizations(MethodNode, String):387->rgb(218,76,76)
LocalOpt.methodOptimizations(MethodNode, String):398->rgb(228,91,91)
LocalOpt.methodOptimizations(MethodNode, String):401->rgb(246,117,117)
LocalOpt.removalRound$2(boolean, boolean, boolean, boolean, boolean, boolean, boolean, int, MethodNode, String, ObjectRef, boolean):300->rgb(223,83,83)
LocalOpt.removalRound$2(boolean, boolean, boolean, boolean, boolean, boolean, boolean, int, MethodNode, String, ObjectRef, boolean):309->rgb(223,83,83)
LocalOpt.removalRound$2(boolean, boolean, boolean, boolean, boolean, boolean, boolean, int, MethodNode, String, ObjectRef, boolean):336->rgb(239,107,107)
LocalOpt.removalRound$2(boolean, boolean, boolean, boolean, boolean, boolean, boolean, int, MethodNode, String, ObjectRef, boolean):348->rgb(240,108,108)
LocalOpt.removeUnreachableCodeImpl(MethodNode, String):513->rgb(219,78,78)
LocalOpt.removeUnreachableCodeImpl(MethodNode, String):519->rgb(253,128,128)
LocalOpt.removeUnreachableCodeImpl(MethodNode, String):530->rgb(239,107,107)
LocalOptImpls$.$anonfun$removeEmptyLabelNodes$1$adapted(ObjectRef, LabelNode, Object):779->rgb(244,115,115)
LocalOptImpls$.$anonfun$removeEmptyLabelNodes$1(ObjectRef, LabelNode, Object):779->rgb(234,99,99)
LocalOptImpls$.removeEmptyLabelNodes(MethodNode):769->rgb(224,85,85)
LocalOptImpls$.removeEmptyLabelNodes(MethodNode):777->rgb(234,99,99)
LocalOptImpls$.removeEmptyLabelNodes(MethodNode):779->rgb(236,103,103)
LocalOptImpls$.removeEmptyLineNumbers(MethodNode):752->rgb(201,52,52)
LocalVariableNode.accept(MethodVisitor):109->rgb(252,125,125)
Logic$PropositionalLogic$$anon$2.apply(Logic$PropositionalLogic$Prop):279->rgb(254,129,129)
Logic$PropositionalLogic$Or$.apply(Seq):118->rgb(221,81,81)
Logic$PropositionalLogic$Or.hashCode():116->rgb(207,60,60)
Logic$PropositionalLogic$PropTraverser.$anonfun$apply$1$adapted(Logic$PropositionalLogic$PropTraverser, Logic$PropositionalLogic$Prop):256->rgb(227,90,90)
Logic$PropositionalLogic$PropTraverser.$anonfun$apply$1(Logic$PropositionalLogic$PropTraverser, Logic$PropositionalLogic$Prop):256->rgb(208,63,63)
Logic$PropositionalLogic$PropTraverser.apply$(Logic$PropositionalLogic$PropTraverser, Logic$PropositionalLogic$Prop):255->rgb(232,97,97)
Logic$PropositionalLogic$PropTraverser.apply(Logic$PropositionalLogic$Prop):256->rgb(231,95,95)
Logic$PropositionalLogic.$anonfun$removeVarEq$10(Logic$PropositionalLogic, ArrayBuffer, Logic$PropositionalLogic$Sym, Logic$PropositionalLogic$AbsVar, Logic$PropositionalLogic$Sym):387->rgb(209,63,63)
Logic$PropositionalLogic.$anonfun$removeVarEq$11(Logic$PropositionalLogic$Sym, Logic$PropositionalLogic$Sym, Set):387->rgb(211,67,67)
Logic$PropositionalLogic.$anonfun$removeVarEq$2$adapted(Logic$PropositionalLogic$AbsVar):357->rgb(212,68,68)
Logic$PropositionalLogic.$anonfun$removeVarEq$2(Logic$PropositionalLogic$AbsVar):357->rgb(213,70,70)
Logic$PropositionalLogic.$anonfun$removeVarEq$5$adapted(Logic$PropositionalLogic, ArrayBuffer, Logic$PropositionalLogic$AbsVar):365->rgb(237,104,104)
Logic$PropositionalLogic.$anonfun$removeVarEq$5(Logic$PropositionalLogic, ArrayBuffer, Logic$PropositionalLogic$AbsVar):371->rgb(250,123,123)
Logic$PropositionalLogic.$anonfun$removeVarEq$5(Logic$PropositionalLogic, ArrayBuffer, Logic$PropositionalLogic$AbsVar):375->rgb(248,120,120)
Logic$PropositionalLogic.$anonfun$removeVarEq$5(Logic$PropositionalLogic, ArrayBuffer, Logic$PropositionalLogic$AbsVar):380->rgb(244,114,114)
Logic$PropositionalLogic.$anonfun$removeVarEq$5(Logic$PropositionalLogic, ArrayBuffer, Logic$PropositionalLogic$AbsVar):398->rgb(214,70,70)
Logic$PropositionalLogic.$anonfun$removeVarEq$8(Logic$PropositionalLogic, ArrayBuffer, Logic$PropositionalLogic$AbsVar, Tuple3):385->rgb(213,70,70)
Logic$PropositionalLogic.$anonfun$simplify$6(Logic$PropositionalLogic, Logic$PropositionalLogic$Prop):207->rgb(202,52,52)
Logic$PropositionalLogic.$anonfun$simplify$8(Logic$PropositionalLogic, Logic$PropositionalLogic$Prop):226->rgb(203,54,54)
Logic$PropositionalLogic.$init$(Logic$PropositionalLogic):313->rgb(229,92,92)
Logic$PropositionalLogic.gatherSymbols$(Logic$PropositionalLogic, Logic$PropositionalLogic$Prop):277->rgb(202,53,53)
Logic$PropositionalLogic.gatherSymbols(Logic$PropositionalLogic$Prop):281->rgb(216,74,74)
Logic$PropositionalLogic.hasImpureAtom$1(Seq):178->rgb(206,60,60)
Logic$PropositionalLogic.propToSolvable$(Logic$PropositionalLogic, Logic$PropositionalLogic$Prop):413->rgb(232,97,97)
Logic$PropositionalLogic.propToSolvable(Logic$PropositionalLogic$Prop):414->rgb(203,55,55)
Logic$PropositionalLogic.removeVarEq$(Logic$PropositionalLogic, List, boolean):335->rgb(205,58,58)
Logic$PropositionalLogic.removeVarEq(List, boolean):338->rgb(221,80,80)
Logic$PropositionalLogic.removeVarEq(List, boolean):357->rgb(239,108,108)
Logic$PropositionalLogic.removeVarEq(List, boolean):365->rgb(208,61,61)
Logic$PropositionalLogic.simplify$(Logic$PropositionalLogic, Logic$PropositionalLogic$Prop):174->rgb(247,119,119)
Logic$PropositionalLogic.simplify(Logic$PropositionalLogic$Prop):251->rgb(216,73,73)
Logic$PropositionalLogic.simplifyProp$1(Logic$PropositionalLogic$Prop):207->rgb(250,123,123)
Logic$PropositionalLogic.simplifyProp$1(Logic$PropositionalLogic$Prop):210->rgb(247,119,119)
Logic$PropositionalLogic.simplifyProp$1(Logic$PropositionalLogic$Prop):215->rgb(240,108,108)
Logic$PropositionalLogic.simplifyProp$1(Logic$PropositionalLogic$Prop):226->rgb(245,116,116)
Logic$PropositionalLogic.simplifyProp$1(Logic$PropositionalLogic$Prop):228->rgb(242,111,111)
Logic$PropositionalLogic.simplifyProp$1(Logic$PropositionalLogic$Prop):233->rgb(214,71,71)
Logic$PropositionalLogic.simplifyProp$1(Logic$PropositionalLogic$Prop):239->rgb(210,64,64)
Long.getChars(long, int, char[]):441->rgb(213,68,68)
Long.longValue():1000->rgb(239,107,107)
Long.stringSize(long):478->rgb(208,62,62)
Long.valueOf(long):837->rgb(249,121,121)
Long.valueOf(long):838->rgb(209,64,64)
Long.valueOf(long):840->rgb(232,96,96)
LowPriorityImplicits$$anon$4.apply():640->rgb(240,109,109)
LowPriorityImplicits.wrapRefArray(Object[]):608->rgb(212,68,68)
LowPriorityImplicits.wrapRefArray(Object[]):610->rgb(213,69,69)
MacOSXFileSystem.normalizeJavaPath(String):62->rgb(227,89,89)
Macros$DefMacroExpander.$anonfun$onSuccess$1(Macros$DefMacroExpander, Trees$Tree, Types$Type):644->rgb(247,119,119)
Macros$DefMacroExpander.onSuccess(Trees$Tree):652->rgb(205,58,58)
Macros$DefMacroExpander.super$typer():644->rgb(208,62,62)
Macros$DefMacroExpander.typecheck$1(String, Trees$Tree, Types$Type):644->rgb(226,87,87)
Macros$MacroExpander.$anonfun$expand$1(Macros$MacroExpander):589->rgb(212,67,67)
Macros$MacroExpander.$anonfun$expand$1(Macros$MacroExpander):595->rgb(243,113,113)
Macros$MacroExpander.apply(Trees$Tree):569->rgb(253,127,127)
Macros$MacroExpander.expand(Trees$Tree):582->rgb(214,70,70)
Macros.isBlackbox$(Macros, Symbols$Symbol):284->rgb(240,108,108)
Macros.isBlackbox(Symbols$Symbol):284->rgb(237,104,104)
Macros.loadMacroImplBinding$(Macros, Symbols$Symbol):278->rgb(249,122,122)
Macros.loadMacroImplBinding(Symbols$Symbol):279->rgb(238,105,105)
Macros.macroExpand$(Macros, Typers$Typer, Trees$Tree, int, Types$Type):726->rgb(236,103,103)
Macros.macroExpand(Typers$Typer, Trees$Tree, int, Types$Type):726->rgb(223,83,83)
Macros.macroExpandWithRuntime$(Macros, Typers$Typer, Trees$Tree, Function1):748->rgb(248,120,120)
Macros.macroExpandWithRuntime(Typers$Typer, Trees$Tree, Function1):772->rgb(222,82,82)
Macros.notifyUndetparamsAdded$(Macros, List):873->rgb(210,65,65)
Macros.notifyUndetparamsAdded(List):874->rgb(212,68,68)
Macros.notifyUndetparamsInferred$(Macros, List, List):877->rgb(228,91,91)
Macros.notifyUndetparamsInferred(List, List):880->rgb(228,92,92)
Macros.standardIsBlackbox$(Macros, Symbols$Symbol):289->rgb(204,56,56)
Macros.standardIsBlackbox(Symbols$Symbol):290->rgb(239,107,107)
Macros.standardIsBlackbox(Symbols$Symbol):291->rgb(249,121,121)
Macros.standardMacroExpand$(Macros, Typers$Typer, Trees$Tree, int, Types$Type):731->rgb(233,98,98)
Macros.standardMacroExpand(Typers$Typer, Trees$Tree, int, Types$Type):733->rgb(200,50,50)
Map$EmptyMap$.$plus(Tuple2):102->rgb(228,91,91)
Map$Map1.$plus(Tuple2):106->rgb(235,101,101)
Map$Map1.foreach(Function1):120->rgb(230,93,93)
Map$Map1.iterator():112->rgb(229,92,92)
Map$Map2.$plus(Tuple2):124->rgb(233,98,98)
Map$Map2.$plus(Tuple2):140->rgb(216,74,74)
Map$Map2.updated(Object, Object):139->rgb(228,90,90)
Map$Map3.<init>(Object, Object, Object, Object, Object, Object):150->rgb(206,58,58)
Map$Map3.foreach(Function1):176->rgb(234,100,100)
Map$WithDefault.$plus$eq(Tuple2):63->rgb(250,123,123)
Map$WithDefault.$plus$eq(Tuple2):64->rgb(248,120,120)
Map$WithDefault.get(Object):51->rgb(241,109,109)
Map$WithDefault.update(Object, Object):63->rgb(254,128,128)
MapBuilder.$plus$eq(Object):25->rgb(231,96,96)
MapBuilder.$plus$eq(Tuple2):29->rgb(215,72,72)
MapBuilder.$plus$plus$eq(TraversableOnce):25->rgb(229,92,92)
MapLike$$anon$1.next():188->rgb(236,102,102)
MapLike.$anonfun$$plus$plus$1(Map, Tuple2):88->rgb(247,119,119)
MapLike.$plus$plus$(MapLike, GenTraversableOnce):87->rgb(200,51,51)
MapLike.$plus$plus(GenTraversableOnce):88->rgb(233,98,98)
MapLike.apply$(MapLike, Object):140->rgb(227,89,89)
MapLike.apply(Object):140->rgb(207,61,61)
MapLike.clear$(MapLike):187->rgb(201,52,52)
MapLike.clear():187->rgb(216,74,74)
MapLike.contains$(MapLike, Object):150->rgb(232,97,97)
MapLike.contains(Object):150->rgb(231,96,96)
MapLike.getOrElse$(MapLike, Object, Function0):126->rgb(247,118,118)
MapLike.getOrElse(Object, Function0):126->rgb(201,51,51)
MapLike.getOrElse(Object, Function0):128->rgb(251,124,124)
MapLike.getOrElseUpdate$(MapLike, Object, Function0):203->rgb(216,73,73)
MapLike.getOrElseUpdate(Object, Function0):205->rgb(232,96,96)
MapLike.isDefinedAt$(MapLike, Object):159->rgb(206,59,59)
MapLike.isDefinedAt(Object):159->rgb(212,68,68)
MapLike.update$(MapLike, Object, Object):100->rgb(216,74,74)
MapLike.update(Object, Object):100->rgb(218,76,76)
MatchAnalysis$MatchAnalyzer.analyzeCases$(MatchAnalysis$MatchAnalyzer, Symbols$Symbol, List, Types$Type, MatchTreeMaking$Suppression):909->rgb(244,114,114)
MatchAnalysis$MatchAnalyzer.analyzeCases(Symbols$Symbol, List, Types$Type, MatchTreeMaking$Suppression):911->rgb(205,58,58)
MatchAnalysis$MatchAnalyzer.analyzeCases(Symbols$Symbol, List, Types$Type, MatchTreeMaking$Suppression):916->rgb(244,114,114)
MatchAnalysis$MatchAnalyzer.approximate$1(Logic$PropositionalLogic$Prop, List, MatchApproximation$MatchApproximator$TreeMakersToProps):458->rgb(200,50,50)
MatchAnalysis$MatchAnalyzer.exhaustive$(MatchAnalysis$MatchAnalyzer, Symbols$Symbol, List, Types$Type):513->rgb(220,79,79)
MatchAnalysis$MatchAnalyzer.exhaustive(Symbols$Symbol, List, Types$Type):513->rgb(230,93,93)
MatchAnalysis$MatchAnalyzer.exhaustive(Symbols$Symbol, List, Types$Type):524->rgb(222,82,82)
MatchAnalysis$MatchAnalyzer.exhaustive(Symbols$Symbol, List, Types$Type):551->rgb(245,116,116)
MatchAnalysis$MatchAnalyzer.exhaustive(Symbols$Symbol, List, Types$Type):558->rgb(219,78,78)
MatchAnalysis$MatchAnalyzer.unreachableCase$(MatchAnalysis$MatchAnalyzer, Symbols$Symbol, List, Types$Type):451->rgb(211,66,66)
MatchAnalysis$MatchAnalyzer.unreachableCase(Symbols$Symbol, List, Types$Type):457->rgb(208,62,62)
MatchAnalysis$MatchAnalyzer.unreachableCase(Symbols$Symbol, List, Types$Type):462->rgb(235,101,101)
MatchAnalysis$MatchAnalyzer.unreachableCase(Symbols$Symbol, List, Types$Type):463->rgb(215,73,73)
MatchAnalysis$MatchAnalyzer.unreachableCase(Symbols$Symbol, List, Types$Type):466->rgb(216,73,73)
MatchAnalysis$MatchAnalyzer.unreachableCase(Symbols$Symbol, List, Types$Type):468->rgb(254,129,129)
MatchAnalysis$MatchAnalyzer.unreachableCase(Symbols$Symbol, List, Types$Type):491->rgb(210,65,65)
MatchAnalysis$MatchAnalyzer.unreachableCase(Symbols$Symbol, List, Types$Type):492->rgb(203,55,55)
MatchApproximation$MatchApproximator$TreeMakersToProps$TreeMakerToProp$condStrategy$2$.typeTest(Symbols$Symbol, Types$Type):349->rgb(245,116,116)
MatchApproximation$MatchApproximator$TreeMakersToProps$TreeMakerToProp$condStrategy$2$.typeTest(Symbols$Symbol, Types$Type):354->rgb(241,110,110)
MatchApproximation$MatchApproximator$TreeMakersToProps$TreeMakerToProp.$anonfun$updateSubstitution$5$adapted(MatchApproximation$MatchApproximator$TreeMakersToProps$TreeMakerToProp, Symbols$Symbol, Trees$Tree):326->rgb(243,112,112)
MatchApproximation$MatchApproximator$TreeMakersToProps$TreeMakerToProp.$anonfun$updateSubstitution$5(MatchApproximation$MatchApproximator$TreeMakersToProps$TreeMakerToProp, Symbols$Symbol, Trees$Tree):326->rgb(207,60,60)
MatchApproximation$MatchApproximator$TreeMakersToProps$TreeMakerToProp.apply(MatchTreeMaking$TreeMakers$TreeMaker):345->rgb(248,121,121)
MatchApproximation$MatchApproximator$TreeMakersToProps$TreeMakerToProp.apply(MatchTreeMaking$TreeMakers$TreeMaker):362->rgb(221,80,80)
MatchApproximation$MatchApproximator$TreeMakersToProps$TreeMakerToProp.apply(MatchTreeMaking$TreeMakers$TreeMaker):363->rgb(221,81,81)
MatchApproximation$MatchApproximator$TreeMakersToProps$TreeMakerToProp.apply(MatchTreeMaking$TreeMakers$TreeMaker):365->rgb(232,97,97)
MatchApproximation$MatchApproximator$TreeMakersToProps$TreeMakerToProp.updateSubstitution(Interface$TypedSubstitution$Substitution):322->rgb(207,60,60)
MatchApproximation$MatchApproximator$TreeMakersToProps$TreeMakerToProp.updateSubstitution(Interface$TypedSubstitution$Substitution):326->rgb(248,120,120)
MatchApproximation$MatchApproximator$TreeMakersToProps$TreeMakerToProp.updateSubstitution(Interface$TypedSubstitution$Substitution):329->rgb(223,84,84)
MatchApproximation$MatchApproximator$TreeMakersToProps.$anonfun$approximateMatch$1(MatchApproximation$MatchApproximator$TreeMakersToProps, MatchApproximation$MatchApproximator$TreeMakersToProps$TreeMakerToProp, List):407->rgb(221,81,81)
MatchApproximation$MatchApproximator$TreeMakersToProps.$anonfun$approximateMatch$2(MatchApproximation$MatchApproximator$TreeMakersToProps, MatchApproximation$MatchApproximator$TreeMakersToProps$TreeMakerToProp, MatchTreeMaking$TreeMakers$TreeMaker):407->rgb(241,110,110)
MatchApproximation$MatchApproximator$TreeMakersToProps.$anonfun$uniqueTypeProp$1(MatchApproximation$MatchApproximator$TreeMakersToProps, Trees$Tree, Types$Type):263->rgb(234,99,99)
MatchApproximation$MatchApproximator$TreeMakersToProps.<init>(MatchApproximation$MatchApproximator, Symbols$Symbol):249->rgb(214,71,71)
MatchApproximation$MatchApproximator$TreeMakersToProps.approximateMatch(List, MatchApproximation$MatchApproximator$TreeMakersToProps$TreeMakerToProp):407->rgb(232,97,97)
MatchApproximation$MatchApproximator$TreeMakersToProps.binderToUniqueTree(Symbols$Symbol):304->rgb(207,60,60)
MatchApproximation$MatchApproximator$TreeMakersToProps.unique(Trees$Tree, Types$Type):283->rgb(245,115,115)
MatchApproximation$MatchApproximator$TreeMakersToProps.uniqueTypeProp(Trees$Tree, Types$Type):263->rgb(222,82,82)
MatchApproximation$MatchApproximator.approximateMatchConservative$(MatchApproximation$MatchApproximator, Symbols$Symbol, List):413->rgb(210,65,65)
MatchApproximation$MatchApproximator.approximateMatchConservative(Symbols$Symbol, List):414->rgb(233,99,99)
MatchApproximation$MatchApproximator.showTreeMakers$(MatchApproximation$MatchApproximator, List):421->rgb(229,92,92)
MatchApproximation$MatchApproximator.showTreeMakers(List):422->rgb(251,125,125)
MatchCodeGen$CodegenCore$CommonCodegen._equals(Trees$Tree, Symbols$Symbol):90->rgb(252,126,126)
MatchCodeGen$CodegenCore$CommonCodegen._isInstanceOf(Symbols$Symbol, Types$Type):94->rgb(201,52,52)
MatchCodeGen$CodegenCore.freshName$(MatchCodeGen$CodegenCore, String):28->rgb(251,125,125)
MatchCodeGen$CodegenCore.freshName(String):28->rgb(205,58,58)
MatchCodeGen$CodegenCore.newSynthCaseLabel$(MatchCodeGen$CodegenCore, String):34->rgb(236,103,103)
MatchCodeGen$CodegenCore.newSynthCaseLabel(String):35->rgb(209,64,64)
MatchCodeGen$OptimizedCodegen$optimizedCodegen$.$anonfun$matcher$3(MatchCodeGen$OptimizedCodegen$optimizedCodegen$, Types$Type, Symbols$MethodSymbol, ObjectRef, Function1):169->rgb(248,120,120)
MatchCodeGen$OptimizedCodegen$optimizedCodegen$.matcher(Trees$Tree, Symbols$Symbol, Types$Type, List, Option):162->rgb(242,111,111)
MatchCodeGen$OptimizedCodegen$optimizedCodegen$.matcher(Trees$Tree, Symbols$Symbol, Types$Type, List, Option):164->rgb(217,75,75)
MatchCodeGen$OptimizedCodegen$optimizedCodegen$.matcher(Trees$Tree, Symbols$Symbol, Types$Type, List, Option):187->rgb(245,116,116)
MatchCodeGen$OptimizedCodegen$optimizedCodegen$.newCaseSym$1(Types$Type):161->rgb(216,73,73)
MatchOptimization$CommonSubconditionElimination.$anonfun$doCSE$5(MatchOptimization$CommonSubconditionElimination, LinkedHashMap, HashSet, List):83->rgb(245,116,116)
MatchOptimization$CommonSubconditionElimination.$anonfun$doCSE$6$adapted(MatchOptimization$CommonSubconditionElimination, LinkedHashMap, HashSet, MatchApproximation$MatchApproximator$Test):83->rgb(218,76,76)
MatchOptimization$CommonSubconditionElimination.$anonfun$doCSE$6(MatchOptimization$CommonSubconditionElimination, LinkedHashMap, HashSet, MatchApproximation$MatchApproximator$Test):83->rgb(203,54,54)
MatchOptimization$CommonSubconditionElimination.doCSE$(MatchOptimization$CommonSubconditionElimination, Symbols$Symbol, List, Types$Type):34->rgb(204,56,56)
MatchOptimization$CommonSubconditionElimination.doCSE(Symbols$Symbol, List, Types$Type):38->rgb(230,94,94)
MatchOptimization$CommonSubconditionElimination.doCSE(Symbols$Symbol, List, Types$Type):81->rgb(241,109,109)
MatchOptimization$CommonSubconditionElimination.storeDependencies$1(MatchApproximation$MatchApproximator$Test, LinkedHashMap, HashSet):60->rgb(243,112,112)
MatchOptimization$CommonSubconditionElimination.storeDependencies$1(MatchApproximation$MatchApproximator$Test, LinkedHashMap, HashSet):74->rgb(218,77,77)
MatchOptimization$MatchOptimizer.optimizeCases$(MatchOptimization$MatchOptimizer, Symbols$Symbol, List, Types$Type):587->rgb(239,107,107)
MatchOptimization$MatchOptimizer.optimizeCases(Symbols$Symbol, List, Types$Type):589->rgb(248,120,120)
MatchOptimization$SwitchEmission$SwitchMaker.apply(List, Types$Type):455->rgb(247,119,119)
MatchOptimization$SwitchEmission.emitSwitch$(MatchOptimization$SwitchEmission, Trees$Tree, Symbols$Symbol, List, Types$Type, Option, boolean):526->rgb(210,65,65)
MatchOptimization$SwitchEmission.emitSwitch(Trees$Tree, Symbols$Symbol, List, Types$Type, Option, boolean):530->rgb(251,124,124)
MatchTranslation$MatchTranslator$BoundTree.$anonfun$translate$1(MatchTranslation$MatchTranslator$BoundTree):161->rgb(201,52,52)
MatchTranslation$MatchTranslator$BoundTree.equalityTestStep():99->rgb(236,103,103)
MatchTranslation$MatchTranslator$BoundTree.extractor$lzycompute():69->rgb(253,127,127)
MatchTranslation$MatchTranslator$BoundTree.extractor():69->rgb(252,125,125)
MatchTranslation$MatchTranslator$BoundTree.extractorStep():116->rgb(219,78,78)
MatchTranslation$MatchTranslator$BoundTree.extractorStep():118->rgb(208,61,61)
MatchTranslation$MatchTranslator$BoundTree.extractorStep():124->rgb(210,64,64)
MatchTranslation$MatchTranslator$BoundTree.extractorStep():130->rgb(201,51,51)
MatchTranslation$MatchTranslator$BoundTree.glbWith(Types$Type):78->rgb(232,97,97)
MatchTranslation$MatchTranslator$BoundTree.nextStep():153->rgb(205,58,58)
MatchTranslation$MatchTranslator$BoundTree.nextStep():154->rgb(202,53,53)
MatchTranslation$MatchTranslator$BoundTree.nextStep():157->rgb(224,85,85)
MatchTranslation$MatchTranslator$BoundTree.translate():161->rgb(217,76,76)
MatchTranslation$MatchTranslator$BoundTree.translate():181->rgb(222,83,83)
MatchTranslation$MatchTranslator$BoundTree.typeTestStep(Symbols$Symbol, Types$Type):100->rgb(201,52,52)
MatchTranslation$MatchTranslator$ExtractorCall$.apply(Trees$Tree):376->rgb(247,118,118)
MatchTranslation$MatchTranslator$ExtractorCall.$anonfun$productElemsToN$1$adapted(MatchTranslation$MatchTranslator$ExtractorCall, Symbols$Symbol, Object):419->rgb(247,119,119)
MatchTranslation$MatchTranslator$ExtractorCall.$anonfun$productElemsToN$1(MatchTranslation$MatchTranslator$ExtractorCall, Symbols$Symbol, int):419->rgb(217,75,75)
MatchTranslation$MatchTranslator$ExtractorCall.$anonfun$subBoundTrees$1(MatchTranslation$MatchTranslator$ExtractorCall, Trees$Tree, Types$Type):404->rgb(227,90,90)
MatchTranslation$MatchTranslator$ExtractorCall.productElemsToN(Symbols$Symbol, int):419->rgb(222,83,83)
MatchTranslation$MatchTranslator$ExtractorCall.subBoundTrees$lzycompute():404->rgb(229,93,93)
MatchTranslation$MatchTranslator$ExtractorCall.subBoundTrees():404->rgb(216,74,74)
MatchTranslation$MatchTranslator$ExtractorCall.subPatBinders():403->rgb(233,99,99)
MatchTranslation$MatchTranslator$ExtractorCall.subPatRefs(Symbols$Symbol):452->rgb(202,53,53)
MatchTranslation$MatchTranslator$ExtractorCall.subPatTypes():412->rgb(236,102,102)
MatchTranslation$MatchTranslator$ExtractorCallProd.treeMaker(Symbols$Symbol, boolean, Position):497->rgb(237,104,104)
MatchTranslation$MatchTranslator$ExtractorCallProd.treeMaker(Symbols$Symbol, boolean, Position):521->rgb(250,122,122)
MatchTranslation$MatchTranslator$ExtractorCallProd.tupleSel(Symbols$Symbol, int):526->rgb(228,90,90)
MatchTranslation$MatchTranslator$SymbolBound$.unapply(Trees$Tree):58->rgb(232,96,96)
MatchTranslation$MatchTranslator.$anonfun$translateMatch$4(MatchTranslation$MatchTranslator, Types$Type, Symbols$TermSymbol, Trees$CaseDef):227->rgb(253,127,127)
MatchTranslation$MatchTranslator.newBoundTree$(MatchTranslation$MatchTranslator, Trees$Tree, Types$Type):63->rgb(249,121,121)
MatchTranslation$MatchTranslator.newBoundTree(Trees$Tree, Types$Type):64->rgb(234,100,100)
MatchTranslation$MatchTranslator.translateBody$(MatchTranslation$MatchTranslator, Trees$Tree, Types$Type):322->rgb(206,59,59)
MatchTranslation$MatchTranslator.translateBody(Trees$Tree, Types$Type):323->rgb(249,122,122)
MatchTranslation$MatchTranslator.translateCase$(MatchTranslation$MatchTranslator, Symbols$Symbol, Types$Type, Trees$CaseDef):305->rgb(212,68,68)
MatchTranslation$MatchTranslator.translateCase(Symbols$Symbol, Types$Type, Trees$CaseDef):307->rgb(235,101,101)
MatchTranslation$MatchTranslator.translateMatch$(MatchTranslation$MatchTranslator, Trees$Match):195->rgb(204,56,56)
MatchTranslation$MatchTranslator.translateMatch(Trees$Match):199->rgb(237,104,104)
MatchTranslation$MatchTranslator.translateMatch(Trees$Match):227->rgb(213,69,69)
MatchTranslation$MatchTranslator.translateMatch(Trees$Match):229->rgb(225,87,87)
MatchTranslation$MatchTranslator.translatePattern$(MatchTranslation$MatchTranslator, MatchTranslation$MatchTranslator$BoundTree):310->rgb(212,68,68)
MatchTranslation$MatchTranslator.translatePattern(MatchTranslation$MatchTranslator$BoundTree):310->rgb(240,108,108)
MatchTranslation.scala$tools$nsc$transform$patmat$MatchTranslation$$hasSym(Trees$Tree):27->rgb(208,63,63)
MatchTreeMaking$TreeMakers$$anon$2.traverse(Trees$Tree):630->rgb(234,99,99)
MatchTreeMaking$TreeMakers$$anon$2.traverse(Trees$Tree):649->rgb(236,102,102)
MatchTreeMaking$TreeMakers$$anon$2.traverse(Trees$TreeApi):626->rgb(235,101,101)
MatchTreeMaking$TreeMakers$BodyTreeMaker.<init>(MatchTreeMaking$TreeMakers, Trees$Tree, Types$Type):93->rgb(247,118,118)
MatchTreeMaking$TreeMakers$BodyTreeMaker.chainBefore(Trees$Tree, MatchCodeGen$CodegenCore$Casegen):97->rgb(239,106,106)
MatchTreeMaking$TreeMakers$BodyTreeMaker.scala$tools$nsc$transform$patmat$MatchTreeMaking$TreeMakers$NoNewBinders$_setter_$localSubstitution_$eq(Interface$TypedSubstitution$Substitution):93->rgb(221,80,80)
MatchTreeMaking$TreeMakers$CondTreeMaker.localSubstitution$lzycompute():121->rgb(210,65,65)
MatchTreeMaking$TreeMakers$CondTreeMaker.localSubstitution():121->rgb(240,108,108)
MatchTreeMaking$TreeMakers$EqualityTestTreeMaker.<init>(MatchTreeMaking$TreeMakers, Symbols$Symbol, Trees$Tree, Position):495->rgb(215,72,72)
MatchTreeMaking$TreeMakers$EqualityTestTreeMaker.<init>(MatchTreeMaking$TreeMakers, Symbols$Symbol, Trees$Tree, Position):496->rgb(225,87,87)
MatchTreeMaking$TreeMakers$NoNewBinders.$init$(MatchTreeMaking$TreeMakers$NoNewBinders):84->rgb(233,99,99)
MatchTreeMaking$TreeMakers$PreserveSubPatBinders.$anonfun$bindSubPats$3$adapted(HashSet, Tuple2):185->rgb(216,73,73)
MatchTreeMaking$TreeMakers$PreserveSubPatBinders.$anonfun$bindSubPats$3(HashSet, Tuple2):185->rgb(230,94,94)
MatchTreeMaking$TreeMakers$PreserveSubPatBinders.bindSubPats$(MatchTreeMaking$TreeMakers$PreserveSubPatBinders, Trees$Tree):163->rgb(245,116,116)
MatchTreeMaking$TreeMakers$PreserveSubPatBinders.bindSubPats(Trees$Tree):185->rgb(203,54,54)
MatchTreeMaking$TreeMakers$PreserveSubPatBinders.localSubstitution$(MatchTreeMaking$TreeMakers$PreserveSubPatBinders):149->rgb(244,115,115)
MatchTreeMaking$TreeMakers$PreserveSubPatBinders.localSubstitution():151->rgb(223,84,84)
MatchTreeMaking$TreeMakers$PreserveSubPatBinders.scala$tools$nsc$transform$patmat$MatchTreeMaking$TreeMakers$PreserveSubPatBinders$$substed$(MatchTreeMaking$TreeMakers$PreserveSubPatBinders):147->rgb(208,61,61)
MatchTreeMaking$TreeMakers$PreserveSubPatBinders.scala$tools$nsc$transform$patmat$MatchTreeMaking$TreeMakers$PreserveSubPatBinders$$substed():147->rgb(208,62,62)
MatchTreeMaking$TreeMakers$PreserveSubPatBinders.scala$tools$nsc$transform$patmat$MatchTreeMaking$TreeMakers$PreserveSubPatBinders$$x$1$(MatchTreeMaking$TreeMakers$PreserveSubPatBinders):147->rgb(254,129,129)
MatchTreeMaking$TreeMakers$PreserveSubPatBinders.scala$tools$nsc$transform$patmat$MatchTreeMaking$TreeMakers$PreserveSubPatBinders$$x$1():147->rgb(252,125,125)
MatchTreeMaking$TreeMakers$ProductExtractorTreeMaker.bindSubPats(Trees$Tree):262->rgb(240,108,108)
MatchTreeMaking$TreeMakers$ProductExtractorTreeMaker.chainBefore(Trees$Tree, MatchCodeGen$CodegenCore$Casegen):285->rgb(247,118,118)
MatchTreeMaking$TreeMakers$ProductExtractorTreeMaker.chainBefore(Trees$Tree, MatchCodeGen$CodegenCore$Casegen):287->rgb(206,58,58)
MatchTreeMaking$TreeMakers$ProductExtractorTreeMaker.localSubstitution$lzycompute():262->rgb(244,115,115)
MatchTreeMaking$TreeMakers$ProductExtractorTreeMaker.localSubstitution():262->rgb(225,87,87)
MatchTreeMaking$TreeMakers$ProductExtractorTreeMaker.scala$tools$nsc$transform$patmat$MatchTreeMaking$TreeMakers$PreserveSubPatBinders$$substed$lzycompute():262->rgb(241,110,110)
MatchTreeMaking$TreeMakers$ProductExtractorTreeMaker.scala$tools$nsc$transform$patmat$MatchTreeMaking$TreeMakers$PreserveSubPatBinders$$substed():262->rgb(243,113,113)
MatchTreeMaking$TreeMakers$ProductExtractorTreeMaker.scala$tools$nsc$transform$patmat$MatchTreeMaking$TreeMakers$PreserveSubPatBinders$$x$1$lzycompute():262->rgb(242,111,111)
MatchTreeMaking$TreeMakers$ProductExtractorTreeMaker.scala$tools$nsc$transform$patmat$MatchTreeMaking$TreeMakers$PreserveSubPatBinders$$x$1():262->rgb(238,105,105)
MatchTreeMaking$TreeMakers$TreeMaker.scala$tools$nsc$transform$patmat$MatchTreeMaking$TreeMakers$$incorporateOuterSubstitution(Interface$TypedSubstitution$Substitution):61->rgb(232,97,97)
MatchTreeMaking$TreeMakers$TreeMaker.substitution():51->rgb(202,54,54)
MatchTreeMaking$TreeMakers$TypeTestTreeMaker$treeCondStrategy$.typeTest(Symbols$Symbol, Types$Type):329->rgb(244,114,114)
MatchTreeMaking$TreeMakers$TypeTestTreeMaker$treeCondStrategy$.typeTest(Symbols$Symbol, Types$Type):334->rgb(219,77,77)
MatchTreeMaking$TreeMakers$TypeTestTreeMaker.<init>(MatchTreeMaking$TreeMakers, Symbols$Symbol, Symbols$Symbol, Types$Type, Types$Type, Position, boolean):478->rgb(244,115,115)
MatchTreeMaking$TreeMakers$TypeTestTreeMaker.mkDefault$1(MatchTreeMaking$TreeMakers$TypeTestTreeMaker$TypeTestCondStrategy):457->rgb(240,108,108)
MatchTreeMaking$TreeMakers$TypeTestTreeMaker.mkTypeTest$1(MatchTreeMaking$TreeMakers$TypeTestTreeMaker$TypeTestCondStrategy):441->rgb(246,117,117)
MatchTreeMaking$TreeMakers$TypeTestTreeMaker.renderCondition(MatchTreeMaking$TreeMakers$TypeTestTreeMaker$TypeTestCondStrategy):467->rgb(200,50,50)
MatchTreeMaking$TreeMakers$TypeTestTreeMaker.renderCondition(MatchTreeMaking$TreeMakers$TypeTestTreeMaker$TypeTestCondStrategy):474->rgb(241,110,110)
MatchTreeMaking$TreeMakers.$anonfun$combineCases$1(MatchTreeMaking$TreeMakers, List):551->rgb(223,84,84)
MatchTreeMaking$TreeMakers.$anonfun$combineCasesNoSubstOnly$6(MatchTreeMaking$TreeMakers, Trees$Tree, Symbols$Symbol, List, Types$Type, Option, MatchTreeMaking$Suppression, boolean):610->rgb(208,62,62)
MatchTreeMaking$TreeMakers.$anonfun$combineCasesNoSubstOnly$6(MatchTreeMaking$TreeMakers, Trees$Tree, Symbols$Symbol, List, Types$Type, Option, MatchTreeMaking$Suppression, boolean):612->rgb(215,73,73)
MatchTreeMaking$TreeMakers.$anonfun$combineCasesNoSubstOnly$6(MatchTreeMaking$TreeMakers, Trees$Tree, Symbols$Symbol, List, Types$Type, Option, MatchTreeMaking$Suppression, boolean):614->rgb(209,64,64)
MatchTreeMaking$TreeMakers.$anonfun$combineCasesNoSubstOnly$8(MatchTreeMaking$TreeMakers, List, MatchCodeGen$CodegenCore$Casegen):614->rgb(248,120,120)
MatchTreeMaking$TreeMakers.$anonfun$combineExtractors$1(MatchCodeGen$CodegenCore$Casegen, MatchTreeMaking$TreeMakers$TreeMaker, Trees$Tree):532->rgb(200,50,50)
MatchTreeMaking$TreeMakers.$anonfun$propagateSubstitution$1(ObjectRef, MatchTreeMaking$TreeMakers$TreeMaker):542->rgb(247,118,118)
MatchTreeMaking$TreeMakers.combineCases$(MatchTreeMaking$TreeMakers, Trees$Tree, Symbols$Symbol, List, Types$Type, Symbols$Symbol, Option):549->rgb(215,72,72)
MatchTreeMaking$TreeMakers.combineCases(Trees$Tree, Symbols$Symbol, List, Types$Type, Symbols$Symbol, Option):551->rgb(200,50,50)
MatchTreeMaking$TreeMakers.combineCases(Trees$Tree, Symbols$Symbol, List, Types$Type, Symbols$Symbol, Option):552->rgb(247,119,119)
MatchTreeMaking$TreeMakers.combineCasesNoSubstOnly$(MatchTreeMaking$TreeMakers, Trees$Tree, Symbols$Symbol, List, Types$Type, Symbols$Symbol, Option):556->rgb(217,75,75)
MatchTreeMaking$TreeMakers.combineCasesNoSubstOnly(Trees$Tree, Symbols$Symbol, List, Types$Type, Symbols$Symbol, Option):593->rgb(207,61,61)
MatchTreeMaking$TreeMakers.combineExtractors$(MatchTreeMaking$TreeMakers, List, MatchCodeGen$CodegenCore$Casegen):531->rgb(222,82,82)
MatchTreeMaking$TreeMakers.combineExtractors(List, MatchCodeGen$CodegenCore$Casegen):532->rgb(229,92,92)
MatchTreeMaking$TreeMakers.propagateSubstitution$(MatchTreeMaking$TreeMakers, List, Interface$TypedSubstitution$Substitution):539->rgb(205,58,58)
MatchTreeMaking$TreeMakers.propagateSubstitution(List, Interface$TypedSubstitution$Substitution):541->rgb(246,117,117)
Math.addExact(int, int):789->rgb(221,80,80)
Math.max(int, int):1252->rgb(238,106,106)
Method.invoke(Object, Object[]):498->rgb(212,68,68)
MethodHandle.bindArgumentL(int, Object):1317->rgb(201,51,51)
MethodHandle.bindTo(Object):1277->rgb(224,85,85)
MethodHandle.type():446->rgb(221,81,81)
MethodHandles.constant(Class, Object):2279->rgb(226,89,89)
MethodInsnNode.accept(MethodVisitor):134->rgb(212,68,68)
MethodNode.<init>(int, String, String, String, String[]):265->rgb(216,74,74)
MethodNode.<init>(int, int, String, String, String, String[]):307->rgb(230,94,94)
MethodNode.accept(ClassVisitor):724->rgb(242,112,112)
MethodNode.accept(ClassVisitor):727->rgb(215,72,72)
MethodNode.accept(MethodVisitor):743->rgb(211,67,67)
MethodNode.accept(MethodVisitor):817->rgb(216,74,74)
MethodNode.accept(MethodVisitor):821->rgb(213,69,69)
MethodNode.accept(MethodVisitor):835->rgb(221,81,81)
MethodNode.accept(MethodVisitor):838->rgb(236,103,103)
MethodNode.visitJumpInsn(int, Label):476->rgb(230,94,94)
MethodSynthesis$ClassMethodSynthesis.$anonfun$createSwitchMethod$1(MethodSynthesis$ClassMethodSynthesis, Seq, Function1, Symbols$Symbol):85->rgb(225,87,87)
MethodSynthesis$ClassMethodSynthesis.$anonfun$createSwitchMethod$2$adapted(MethodSynthesis$ClassMethodSynthesis, Function1, Object):85->rgb(232,96,96)
MethodSynthesis$ClassMethodSynthesis.constantNullary(Names$Name, Object):99->rgb(211,66,66)
MethodSynthesis$ClassMethodSynthesis.createMethod(Names$Name, List, Types$Type, Function1):45->rgb(249,121,121)
MethodSynthesis$ClassMethodSynthesis.createMethod(Names$Name, List, Types$Type, Function1):55->rgb(236,103,103)
MethodSynthesis$ClassMethodSynthesis.createMethod(Names$Name, Types$Type, Function1):45->rgb(226,88,88)
MethodSynthesis$ClassMethodSynthesis.createMethod(Symbols$Symbol, Function1):45->rgb(202,53,53)
MethodSynthesis$ClassMethodSynthesis.createSwitchMethod(Names$Name, Seq, Types$Type, Function1):82->rgb(236,102,102)
MethodSynthesis$ClassMethodSynthesis.forwardMethod(Symbols$Symbol, Symbols$Symbol, Function1):79->rgb(204,56,56)
MethodSynthesis$ClassMethodSynthesis.isOverride(Names$TermName):31->rgb(243,113,113)
MethodSynthesis$ClassMethodSynthesis.newMethodFlags(Names$TermName):34->rgb(208,62,62)
MethodSynthesis$MethodSynth$Getter.derivedTree(Symbols$Symbol):251->rgb(243,113,113)
MethodSynthesis$MethodSynth.enterGetterSetter$(MethodSynthesis$MethodSynth, Trees$ValDef):125->rgb(213,69,69)
MethodSynthesis$MethodSynth.enterGetterSetter(Trees$ValDef):148->rgb(240,109,109)
MethodSynthesis$MethodSynth.enterGetterSetter(Trees$ValDef):155->rgb(222,83,83)
MethodType$ConcurrentWeakInternSet.get(Object):1230->rgb(201,52,52)
MethodType.dropParameterTypes(int, int):572->rgb(212,68,68)
MethodType.makeImpl(Class, Class[], boolean):301->rgb(250,122,122)
MethodWriter.<init>(ClassWriter, int, String, String, String, String[], boolean, boolean):231->rgb(236,103,103)
MethodWriter.<init>(ClassWriter, int, String, String, String, String[], boolean, boolean):476->rgb(229,93,93)
MethodWriter.<init>(ClassWriter, int, String, String, String, String[], boolean, boolean):477->rgb(212,68,68)
MethodWriter.endFrame():1853->rgb(211,67,67)
MethodWriter.getSize():2063->rgb(200,51,51)
MethodWriter.getSize():2098->rgb(222,83,83)
MethodWriter.put(ByteVector):2157->rgb(249,121,121)
MethodWriter.visitFieldInsn(int, String, String, String):861->rgb(246,117,117)
MethodWriter.visitFrame(Frame):1758->rgb(243,113,113)
MethodWriter.visitInvokeDynamicInsn(String, String, Handle, Object[]):948->rgb(220,79,79)
MethodWriter.visitJumpInsn(int, Label):1060->rgb(249,122,122)
MethodWriter.visitLocalVariable(String, String, String, Label, Label, int):1351->rgb(232,97,97)
MethodWriter.visitMaxs(int, int):1450->rgb(253,127,127)
MethodWriter.visitMaxs(int, int):1483->rgb(243,113,113)
MethodWriter.visitMaxs(int, int):1499->rgb(252,126,126)
MethodWriter.visitMethodInsn(int, String, String, String, boolean):896->rgb(205,58,58)
MethodWriter.visitParameter(String, int):515->rgb(215,73,73)
MethodWriter.visitVarInsn(int, int):778->rgb(233,99,99)
MethodWriter.writeFrame():1942->rgb(242,111,111)
MethodWriter.writeFrameTypes(int, int):1960->rgb(205,58,58)
Mirrors$Roots$EmptyPackageClass.<init>(Mirrors$Roots):299->rgb(236,103,103)
Mirrors$Roots$RootClass.typeOfThis():275->rgb(214,70,70)
Mirrors$Roots$RootSymbol.typeOfThis$(Mirrors$Roots$RootSymbol):261->rgb(237,105,105)
Mirrors$Roots$RootSymbol.typeOfThis():261->rgb(220,80,80)
Mirrors$Roots$WellKnownSymbol.$init$(Mirrors$Roots$WellKnownSymbol):254->rgb(245,116,116)
Mirrors$Roots.EmptyPackageClass$lzycompute():305->rgb(254,129,129)
Mirrors$Roots.EmptyPackageClass():245->rgb(221,80,80)
Mirrors$Roots.EmptyPackageClass():305->rgb(235,101,101)
Mirrors$Roots.RootClass():245->rgb(226,89,89)
Mirrors$Roots.RootClass():290->rgb(200,50,50)
Mirrors$RootsBase.$anonfun$getClassIfDefined$1(Mirrors$RootsBase, Names$Name):113->rgb(247,118,118)
Mirrors$RootsBase.$anonfun$getModuleOrClass$1$adapted(Symbols$Symbol):49->rgb(247,118,118)
Mirrors$RootsBase.$anonfun$getModuleOrClass$1(Symbols$Symbol):49->rgb(246,117,117)
Mirrors$RootsBase.$anonfun$getPackageObjectIfDefined$1(Mirrors$RootsBase, Names$TermName):191->rgb(217,75,75)
Mirrors$RootsBase.getClassByName(Names$Name):101->rgb(220,79,79)
Mirrors$RootsBase.getClassIfDefined(Names$Name):211->rgb(247,119,119)
Mirrors$RootsBase.getClassIfDefined(String):110->rgb(228,91,91)
Mirrors$RootsBase.getModuleByName(Names$Name):133->rgb(229,93,93)
Mirrors$RootsBase.getModuleOrClass(Names$Name):66->rgb(247,118,118)
Mirrors$RootsBase.getModuleOrClass(Names$Name, int):43->rgb(205,58,58)
Mirrors$RootsBase.getModuleOrClass(Names$Name, int):45->rgb(235,101,101)
Mirrors$RootsBase.getModuleOrClass(Names$Name, int):46->rgb(206,59,59)
Mirrors$RootsBase.getModuleOrClass(Names$Name, int):47->rgb(218,76,76)
Mirrors$RootsBase.getModuleOrClass(Names$Name, int):48->rgb(220,80,80)
Mirrors$RootsBase.getModuleOrClass(Names$Name, int):49->rgb(207,61,61)
Mirrors$RootsBase.getPackageObject(Names$TermName):182->rgb(225,86,86)
Mirrors$RootsBase.getPackageObjectIfDefined(Names$TermName):211->rgb(217,75,75)
Mirrors$RootsBase.getPackageObjectIfDefined(String):188->rgb(226,89,89)
Mirrors$RootsBase.getRequiredClass(String):104->rgb(213,69,69)
Mirrors$RootsBase.getRequiredModule(String):136->rgb(246,117,117)
Mirrors$RootsBase.init():219->rgb(252,126,126)
Mirrors$RootsBase.init():225->rgb(251,125,125)
Mirrors$RootsBase.requiredClass(ClassTag):107->rgb(203,54,54)
Mirrors$RootsBase.requiredModule(ClassTag):146->rgb(245,115,115)
Mixin$MixinTransformer$SingleUseTraverser$2$.traverse(Trees$Tree):448->rgb(254,129,129)
Mixin$MixinTransformer$SingleUseTraverser$2$.traverse(Trees$Tree):449->rgb(228,91,91)
Mixin$MixinTransformer$SingleUseTraverser$2$.traverse(Trees$TreeApi):433->rgb(222,83,83)
Mixin$MixinTransformer.$anonfun$addNewDefs$2$adapted(Mixin$MixinTransformer, Symbols$Symbol, AccessorSynthesis$AccessorTreeSynthesis$UncheckedAccessorSynth, Symbols$Symbol):495->rgb(210,64,64)
Mixin$MixinTransformer.$anonfun$addNewDefs$2(Mixin$MixinTransformer, Symbols$Symbol, AccessorSynthesis$AccessorTreeSynthesis$UncheckedAccessorSynth, Symbols$Symbol):510->rgb(222,83,83)
Mixin$MixinTransformer.$anonfun$lazyValNullables$1$adapted(Symbols$Symbol):423->rgb(250,122,122)
Mixin$MixinTransformer.$anonfun$lazyValNullables$1(Symbols$Symbol):423->rgb(202,53,53)
Mixin$MixinTransformer.$anonfun$lazyValNullables$2(Mixin$MixinTransformer, Map, LazyRef, Trees$Tree):453->rgb(205,58,58)
Mixin$MixinTransformer.$anonfun$transform$1(Mixin$MixinTransformer, Trees$Tree):601->rgb(210,65,65)
Mixin$MixinTransformer.addNewDefs(Symbols$Symbol, List):495->rgb(250,123,123)
Mixin$MixinTransformer.lazyValNullables(Symbols$Symbol, List):423->rgb(226,88,88)
Mixin$MixinTransformer.lazyValNullables(Symbols$Symbol, List):453->rgb(217,76,76)
Mixin$MixinTransformer.postTransform(Trees$Tree):563->rgb(236,102,102)
Mixin$MixinTransformer.postTransform(Trees$Tree):571->rgb(228,90,90)
Mixin$MixinTransformer.preTransform(Trees$Tree):384->rgb(232,96,96)
Mixin$MixinTransformer.preTransform(Trees$Tree):391->rgb(207,60,60)
Mixin$MixinTransformer.preTransform(Trees$Tree):396->rgb(205,58,58)
Mixin$MixinTransformer.preTransform(Trees$Tree):399->rgb(208,62,62)
Mixin$MixinTransformer.transform(Trees$Tree):597->rgb(215,72,72)
Mixin$MixinTransformer.transform(Trees$Tree):598->rgb(237,104,104)
Mixin$MixinTransformer.transform(Trees$Tree):601->rgb(240,108,108)
Mixin$MixinTransformer.transform(Trees$TreeApi):366->rgb(228,91,91)
Mixin$MixinTransformer.typedPos(Position, Trees$Tree):369->rgb(243,113,113)
Mixin.$anonfun$addMixedinMembers$13$adapted(Mixin, Symbols$Symbol, CompilationUnits$CompilationUnit, Symbols$Symbol):350->rgb(204,55,55)
Mixin.$anonfun$addMixedinMembers$13(Mixin, Symbols$Symbol, CompilationUnits$CompilationUnit, Symbols$Symbol):353->rgb(217,75,75)
Mixin.$anonfun$addMixedinMembers$13(Mixin, Symbols$Symbol, CompilationUnits$CompilationUnit, Symbols$Symbol):355->rgb(225,87,87)
Mixin.$anonfun$addMixedinMembers$2$adapted(Mixin, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):214->rgb(203,54,54)
Mixin.$anonfun$addMixedinMembers$2(Mixin, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):215->rgb(251,125,125)
Mixin.$anonfun$addMixedinMembers$2(Mixin, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):273->rgb(205,58,58)
Mixin.$anonfun$addMixedinMembers$2(Mixin, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):276->rgb(223,83,83)
Mixin.$anonfun$cloneBeforeErasure$1(Mixin, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):156->rgb(209,63,63)
Mixin.$anonfun$cloneBeforeErasure$1(Mixin, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):158->rgb(219,78,78)
Mixin.$anonfun$cloneBeforeErasure$1(Mixin, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):159->rgb(254,129,129)
Mixin.$anonfun$cloneBeforeErasure$1(Mixin, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):160->rgb(200,51,51)
Mixin.$anonfun$cloneBeforeErasure$1(Mixin, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):162->rgb(215,72,72)
Mixin.$anonfun$publicizeTraitMethods$2$adapted(Mixin, Symbols$Symbol, Symbols$Symbol):180->rgb(208,62,62)
Mixin.$anonfun$publicizeTraitMethods$2(Mixin, Symbols$Symbol, Symbols$Symbol):181->rgb(226,87,87)
Mixin.addMixedinMembers(Symbols$Symbol, CompilationUnits$CompilationUnit):341->rgb(213,68,68)
Mixin.addMixedinMembers(Symbols$Symbol, CompilationUnits$CompilationUnit):348->rgb(240,108,108)
Mixin.addMixedinMembers(Symbols$Symbol, CompilationUnits$CompilationUnit):350->rgb(200,50,50)
Mixin.cloneAndAddMember(Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):147->rgb(206,59,59)
Mixin.cloneAndAddMixinMember$1(Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):207->rgb(249,121,121)
Mixin.cloneBeforeErasure(Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):150->rgb(205,57,57)
Mixin.existsCompetingMethod$1(List, Symbols$Symbol, Symbols$Symbol):256->rgb(245,116,116)
Mixin.genForwarder$1(boolean, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):230->rgb(247,118,118)
Mixin.mixinTraitForwarders$1(Symbols$Symbol, Symbols$Symbol):214->rgb(221,81,81)
Mixin.publicizeTraitMethod(Symbols$Symbol):42->rgb(251,124,124)
Mixin.publicizeTraitMethods(Symbols$Symbol):180->rgb(247,119,119)
Mode$.NOmode():18->rgb(202,53,53)
Mode$.TYPEPATmode():66->rgb(202,54,54)
Mode$.TYPEmode():24->rgb(253,128,128)
Mode$.forTypeMode$extension(int):106->rgb(238,106,106)
Mode$.in$extension(int, int, int):115->rgb(235,101,101)
Mode$.inAll$extension(int, int):108->rgb(216,74,74)
Mode$.inAny$extension(int, int):109->rgb(212,67,67)
Mode$.typingExprNotLhs$extension(int):131->rgb(225,86,86)
Mode$.typingMonoExprByValue$extension(int):133->rgb(244,114,114)
Mode$.typingPatternOrTypePat$extension(int):136->rgb(216,73,73)
MurmurHash3$.mapHash(Map):225->rgb(204,56,56)
MurmurHash3$.productHash(Product):211->rgb(239,107,107)
MurmurHash3$.setHash(Set):226->rgb(247,118,118)
MurmurHash3.$anonfun$unorderedHash$1$adapted(IntRef, IntRef, IntRef, IntRef, Object):91->rgb(242,112,112)
MurmurHash3.$anonfun$unorderedHash$1(IntRef, IntRef, IntRef, IntRef, Object):92->rgb(203,54,54)
MurmurHash3.mix(int, int):18->rgb(238,105,105)
MurmurHash3.productHash(Product, int):64->rgb(238,106,106)
MurmurHash3.unorderedHash(TraversableOnce, int):91->rgb(203,55,55)
MutableCallSite.getTarget():129->rgb(245,116,116)
MutableMapFactory.newBuilder():30->rgb(222,82,82)
MutableSettings$BooleanSetting.value():451->rgb(239,106,106)
MutableSettings$IntSetting.v():398->rgb(223,83,83)
MutableSettings$IntSetting.value():390->rgb(225,86,86)
MutableSettings$IntSetting.value():399->rgb(244,114,114)
MutableSettings$MultiChoiceSetting.$anonfun$contains$1$adapted(String, Enumeration$Value):794->rgb(254,128,128)
MutableSettings$MultiChoiceSetting.$anonfun$contains$1(String, Enumeration$Value):794->rgb(210,65,65)
MutableSettings$MultiChoiceSetting.contains(Enumeration$Value):760->rgb(246,117,117)
MutableSettings$MultiChoiceSetting.contains(String):794->rgb(227,89,89)
MutableSettings$MultiChoiceSetting.v():635->rgb(213,69,69)
MutableSettings$MultiChoiceSetting.v():653->rgb(245,116,116)
MutableSettings$ScalaVersionSetting.v():532->rgb(200,51,51)
MutableSettings$ScalaVersionSetting.v():540->rgb(240,108,108)
MutableSettings$Setting.hashCode():363->rgb(242,111,111)
MutableSettings$Setting.value():363->rgb(210,64,64)
MutableSettings$SettingValue.value$(MutableSettings$SettingValue):28->rgb(250,122,122)
MutableSettings$SettingValue.value():28->rgb(203,55,55)
MutableSettings.<init>(Function1):20->rgb(200,50,50)
MutableSettings.Yrecursion():19->rgb(209,64,64)
MutableSettings.YstatisticsEnabled():19->rgb(201,51,51)
MutableSettings.debug():19->rgb(204,56,56)
MutableSettings.developer():19->rgb(214,71,71)
MutableSettings.isScala213():19->rgb(246,117,117)
MutableSettings.optInlinerEnabled():19->rgb(211,66,66)
MutableSettings.visibleSettings():19->rgb(243,112,112)
MutableSettings.warnInaccessible():19->rgb(222,82,82)
MutableSettings.warnUnusedImport():19->rgb(245,116,116)
Namers$CompleterWrapper.complete(Symbols$Symbol):2007->rgb(202,53,53)
Namers$DependentTypeChecker.$anonfun$check$1(Namers$DependentTypeChecker, List):2035->rgb(243,113,113)
Namers$DependentTypeChecker.$anonfun$check$1(Namers$DependentTypeChecker, List):2038->rgb(225,87,87)
Namers$DependentTypeChecker.$anonfun$check$2(Namers$DependentTypeChecker, Symbols$Symbol):2036->rgb(213,69,69)
Namers$DependentTypeChecker.check(List):2034->rgb(242,112,112)
Namers$DependentTypeChecker.traverse(Types$Type):2031->rgb(219,78,78)
Namers$LockingTypeCompleter.complete$(Namers$LockingTypeCompleter, Symbols$Symbol):1956->rgb(230,94,94)
Namers$LockingTypeCompleter.complete(Symbols$Symbol):1958->rgb(239,107,107)
Namers$LockingTypeCompleter.complete(Symbols$Symbol):1959->rgb(200,50,50)
Namers$Namer$$anon$3.complete(Symbols$Symbol):607->rgb(225,86,86)
Namers$Namer$$anon$4.complete(Symbols$Symbol):616->rgb(231,96,96)
Namers$Namer$$anon$4.complete(Symbols$Symbol):618->rgb(245,116,116)
Namers$Namer$$anon$4.complete(Symbols$Symbol):647->rgb(251,124,124)
Namers$Namer$$anon$4.complete(Symbols$Symbol):655->rgb(232,97,97)
Namers$Namer$$anon$4.complete(Symbols$Symbol):692->rgb(216,73,73)
Namers$Namer$$anon$5.complete(Symbols$Symbol):1659->rgb(231,95,95)
Namers$Namer$AccessorTypeCompleter.completeImpl(Symbols$Symbol):930->rgb(244,114,114)
Namers$Namer$AccessorTypeCompleter.completeImpl(Symbols$Symbol):968->rgb(221,81,81)
Namers$Namer$ImportTypeCompleter.completeImpl(Symbols$Symbol):876->rgb(225,86,86)
Namers$Namer$MonoTypeCompleter.completeImpl(Symbols$Symbol):838->rgb(245,115,115)
Namers$Namer$MonoTypeCompleter.completeImpl(Symbols$Symbol):840->rgb(235,102,102)
Namers$Namer$MonoTypeCompleter.completeImpl(Symbols$Symbol):842->rgb(218,77,77)
Namers$Namer$MonoTypeCompleter.completeImpl(Symbols$Symbol):852->rgb(238,105,105)
Namers$Namer$MonoTypeCompleter.completeImpl(Symbols$Symbol):854->rgb(237,104,104)
Namers$Namer$MonoTypeCompleter.completeImpl(Symbols$Symbol):860->rgb(235,101,101)
Namers$Namer$ValTypeCompleter.completeImpl(Symbols$Symbol):908->rgb(239,106,106)
Namers$Namer.$anonfun$enterClassDef$1(Namers$Namer, Trees$ClassDef):767->rgb(222,82,82)
Namers$Namer.$anonfun$enterSyms$1(Namers$Namer, Namers$Namer, Trees$Tree):475->rgb(252,125,125)
Namers$Namer.$anonfun$enterValueParams$1(Namers$Namer, Trees$ValDef):100->rgb(237,104,104)
Namers$Namer.$anonfun$methodSig$3(Namers$Namer, Symbols$Symbol, List, List, List, Types$Type):1307->rgb(206,59,59)
Namers$Namer.$anonfun$templateSig$3(Namers$Namer, Trees$Tree):1138->rgb(211,67,67)
Namers$Namer.$anonfun$templateSig$4(Namers$Namer, Namers$Namer, Unapplies$ClassForCaseCompanionAttachment):1152->rgb(201,52,52)
Namers$Namer.$anonfun$templateSig$6(Namers$Namer, Symbols$Symbol, List, Scopes$Scope, Namers$Namer, Unapplies$ClassForCaseCompanionAttachment):1168->rgb(229,92,92)
Namers$Namer.<init>(Analyzer, Contexts$Context):51->rgb(234,99,99)
Namers$Namer.addApplyUnapply(Trees$ClassDef, Namers$Namer):1741->rgb(202,53,53)
Namers$Namer.addApplyUnapply(Trees$ClassDef, Namers$Namer):1745->rgb(246,117,117)
Namers$Namer.addCopyMethod(Trees$ClassDef, Namers$Namer):1749->rgb(200,50,50)
Namers$Namer.addDefaultGetters(Symbols$Symbol, Trees$DefDef, List, List, Symbols$Symbol):1438->rgb(245,116,116)
Namers$Namer.assignAndEnterFinishedSymbol(Trees$MemberDef):300->rgb(207,60,60)
Namers$Namer.assignAndEnterFinishedSymbol(Trees$MemberDef):301->rgb(244,114,114)
Namers$Namer.assignMemberSymbol(Trees$MemberDef, long):293->rgb(231,96,96)
Namers$Namer.assignMemberSymbol(Trees$MemberDef, long):294->rgb(225,87,87)
Namers$Namer.assignTypeToTree(Trees$ValOrDefDef, Typers$Typer, Types$Type):1077->rgb(215,73,73)
Namers$Namer.assignTypeToTree(Trees$ValOrDefDef, Typers$Typer, Types$Type):1080->rgb(228,91,91)
Namers$Namer.checkParent$1(Trees$Tree):1134->rgb(237,105,105)
Namers$Namer.classSig(Trees$ClassDef):1187->rgb(252,125,125)
Namers$Namer.completerOf(Trees$MemberDef):697->rgb(230,94,94)
Namers$Namer.context():51->rgb(246,116,116)
Namers$Namer.createMemberSymbol(Trees$MemberDef, Names$Name, long):328->rgb(207,61,61)
Namers$Namer.createMemberSymbol(Trees$MemberDef, Names$Name, long):331->rgb(230,94,94)
Namers$Namer.createNamer(Trees$Tree):63->rgb(207,61,61)
Namers$Namer.createNamer(Trees$Tree):75->rgb(209,63,63)
Namers$Namer.createNamer(Trees$Tree):77->rgb(241,109,109)
Namers$Namer.deriveAccessors(Trees$ValDef):113->rgb(219,78,78)
Namers$Namer.deriveAccessorsInClass(Trees$ValDef):118->rgb(221,81,81)
Namers$Namer.deskolemizedPolySig$1(List, Types$Type, Symbols$Symbol, List, List):1270->rgb(239,108,108)
Namers$Namer.dispatch$1(Trees$Tree):270->rgb(200,51,51)
Namers$Namer.dispatch$1(Trees$Tree):271->rgb(203,55,55)
Namers$Namer.dispatch$1(Trees$Tree):272->rgb(254,128,128)
Namers$Namer.dispatch$1(Trees$Tree):273->rgb(230,94,94)
Namers$Namer.dispatch$1(Trees$Tree):275->rgb(202,54,54)
Namers$Namer.ensureCompanionObject(Trees$ClassDef, Function1):490->rgb(243,113,113)
Namers$Namer.enterClassDef(Trees$ClassDef):763->rgb(244,115,115)
Namers$Namer.enterClassDef(Trees$ClassDef):767->rgb(234,100,100)
Namers$Namer.enterClassSymbol(Trees$ClassDef):392->rgb(205,58,58)
Namers$Namer.enterClassSymbol(Trees$ClassDef, Symbols$ClassSymbol):365->rgb(237,105,105)
Namers$Namer.enterGetterSetter(Trees$ValDef):51->rgb(244,115,115)
Namers$Namer.enterInScope(Symbols$Symbol):218->rgb(200,50,50)
Namers$Namer.enterInScope(Symbols$Symbol, Scopes$Scope):237->rgb(218,76,76)
Namers$Namer.enterInScope(Symbols$Symbol, Scopes$Scope):250->rgb(249,122,122)
Namers$Namer.enterModuleDef(Trees$ModuleDef):426->rgb(218,77,77)
Namers$Namer.enterModuleSymbol(Trees$ModuleDef):458->rgb(247,118,118)
Namers$Namer.enterPackage(Trees$PackageDef):733->rgb(250,123,123)
Namers$Namer.enterSym(Trees$Tree):261->rgb(232,96,96)
Namers$Namer.enterSyms(List):474->rgb(253,128,128)
Namers$Namer.enterSyntheticSym(Trees$Tree):801->rgb(225,87,87)
Namers$Namer.enterValDef(Trees$ValDef):721->rgb(216,73,73)
Namers$Namer.enterValDef(Trees$ValDef):722->rgb(236,103,103)
Namers$Namer.enterValueParams(List):99->rgb(200,50,50)
Namers$Namer.findCyclicalLowerBound(Types$Type):824->rgb(251,124,124)
Namers$Namer.innerNamer$lzycompute():59->rgb(213,69,69)
Namers$Namer.innerNamer():58->rgb(249,122,122)
Namers$Namer.isEnumConstant(Trees$ValDef):135->rgb(213,69,69)
Namers$Namer.memberSig(Trees$MemberDef):1795->rgb(212,68,68)
Namers$Namer.memberSig(Trees$MemberDef):1796->rgb(226,88,88)
Namers$Namer.memberSig(Trees$MemberDef):1798->rgb(200,50,50)
Namers$Namer.memberSig(Trees$MemberDef):1799->rgb(211,66,66)
Namers$Namer.methodSig(Trees$DefDef):1258->rgb(252,125,125)
Namers$Namer.methodSig(Trees$DefDef):1282->rgb(236,103,103)
Namers$Namer.methodSig(Trees$DefDef):1286->rgb(219,78,78)
Namers$Namer.methodSig(Trees$DefDef):1307->rgb(229,93,93)
Namers$Namer.methodSig(Trees$DefDef):1318->rgb(248,119,119)
Namers$Namer.methodSig(Trees$DefDef):1319->rgb(226,88,88)
Namers$Namer.methodSig(Trees$DefDef):1364->rgb(239,107,107)
Namers$Namer.methodSig(Trees$DefDef):1391->rgb(244,114,114)
Namers$Namer.methodSig(Trees$DefDef):1392->rgb(252,126,126)
Namers$Namer.methodSig(Trees$DefDef):1402->rgb(212,67,67)
Namers$Namer.methodSig(Trees$DefDef):1412->rgb(211,66,66)
Namers$Namer.methodSig(Trees$DefDef):1416->rgb(250,123,123)
Namers$Namer.methodSig(Trees$DefDef):1425->rgb(252,126,126)
Namers$Namer.moduleSig(Trees$ModuleDef):1208->rgb(231,95,95)
Namers$Namer.moduleSig(Trees$ModuleDef):1215->rgb(218,77,77)
Namers$Namer.namerOf(Symbols$Symbol):186->rgb(217,74,74)
Namers$Namer.owner():103->rgb(216,73,73)
Namers$Namer.safeNextOverriddenSymbol(Symbols$Symbol, Types$Type):1651->rgb(236,103,103)
Namers$Namer.safeNextOverriddenSymbolLazySchema(Symbols$Symbol, Function0):1659->rgb(219,78,78)
Namers$Namer.scala$tools$nsc$typechecker$Namers$Namer$$$outer():51->rgb(220,79,79)
Namers$Namer.scala$tools$nsc$typechecker$Namers$Namer$$importSig(Trees$Import):1699->rgb(211,66,66)
Namers$Namer.setPrivateWithin(Trees$MemberDef, Symbols$Symbol):144->rgb(209,64,64)
Namers$Namer.setPrivateWithin(Trees$Tree, Symbols$Symbol, Trees$Modifiers):140->rgb(227,90,90)
Namers$Namer.standardEnsureCompanionObject(Trees$ClassDef, Function1):496->rgb(243,113,113)
Namers$Namer.standardEnsureCompanionObject(Trees$ClassDef, Function1):518->rgb(204,55,55)
Namers$Namer.standardEnterSym(Trees$Tree):282->rgb(205,58,58)
Namers$Namer.standardEnterSym(Trees$Tree):283->rgb(205,58,58)
Namers$Namer.templateSig(Trees$Template):1113->rgb(207,60,60)
Namers$Namer.templateSig(Trees$Template):1138->rgb(247,119,119)
Namers$Namer.templateSig(Trees$Template):1144->rgb(250,122,122)
Namers$Namer.templateSig(Trees$Template):1149->rgb(216,73,73)
Namers$Namer.templateSig(Trees$Template):1161->rgb(230,94,94)
Namers$Namer.templateSig(Trees$Template):1162->rgb(243,113,113)
Namers$Namer.typeSig(Trees$Tree, List):1761->rgb(253,127,127)
Namers$Namer.valDefSig(Trees$ValDef):1608->rgb(248,120,120)
Namers$Namer.valDefSig(Trees$ValDef):1627->rgb(241,111,111)
Namers$Namer.valDefSig(Trees$ValDef):1637->rgb(207,60,60)
Namers$Namer.validate(Symbols$Symbol):1873->rgb(215,72,72)
Namers$Namer.validate(Symbols$Symbol):1887->rgb(211,66,66)
Namers$Namer.validate(Symbols$Symbol):1889->rgb(204,56,56)
Namers$Namer.validate(Symbols$Symbol):1922->rgb(254,129,129)
Namers$Namer.widenIfNecessary(Symbols$Symbol, Types$Type, Types$Type):1044->rgb(247,119,119)
Namers$Namer.widenIfNecessary(Symbols$Symbol, Types$Type, Types$Type):1058->rgb(248,120,120)
Namers$NormalNamer.<init>(Analyzer, Contexts$Context):48->rgb(223,83,83)
Namers$PolyTypeCompleter.complete(Symbols$Symbol):1970->rgb(246,117,117)
Namers$PolyTypeCompleter.completeImpl(Symbols$Symbol):1991->rgb(201,51,51)
Namers$TypeCompleterBase.complete(Symbols$Symbol):1951->rgb(211,66,66)
Namers.companionSymbolOf$(Namers, Symbols$Symbol, Contexts$Context):2051->rgb(225,87,87)
Namers.companionSymbolOf(Symbols$Symbol, Contexts$Context):2051->rgb(238,105,105)
Namers.companionSymbolOf(Symbols$Symbol, Contexts$Context):2056->rgb(226,89,89)
Namers.companionSymbolOf(Symbols$Symbol, Contexts$Context):2060->rgb(202,54,54)
Namers.newNamer$(Namers, Contexts$Context):49->rgb(238,105,105)
Namers.newNamer(Contexts$Context):49->rgb(200,51,51)
Namers.scala$tools$nsc$typechecker$Namers$$isTemplateContext(Contexts$Context):45->rgb(218,76,76)
Names$Name.append(Names$Name):459->rgb(215,72,72)
Names$Name.append(String):458->rgb(250,124,124)
Names$Name.charAt(int):270->rgb(216,73,73)
Names$Name.containsName(Names$Name):376->rgb(248,120,120)
Names$Name.encode():441->rgb(229,93,93)
Names$Name.endsWith(Names$Name):354->rgb(242,111,111)
Names$Name.endsWith(Names$Name, int):359->rgb(232,97,97)
Names$Name.endsWith(String):398->rgb(219,77,77)
Names$Name.endsWith(String, int):366->rgb(225,86,86)
Names$Name.endsWith(String, int):367->rgb(225,87,87)
Names$Name.indexOf(String):407->rgb(221,81,81)
Names$Name.lastIndexOf(String):411->rgb(223,84,84)
Names$Name.lastIndexOf(char):410->rgb(227,89,89)
Names$Name.lastPos(char):319->rgb(211,66,66)
Names$Name.lastPos(char, int):330->rgb(230,94,94)
Names$Name.len():185->rgb(207,60,60)
Names$Name.length():200->rgb(232,97,97)
Names$Name.pos(String):276->rgb(241,110,110)
Names$Name.pos(String, int):299->rgb(215,73,73)
Names$Name.prepend(String):461->rgb(243,113,113)
Names$Name.replace(char, char):424->rgb(216,74,74)
Names$Name.scala$reflect$internal$Names$Name$$$outer():185->rgb(239,106,106)
Names$Name.startsWith(Names$Name, int):341->rgb(204,56,56)
Names$Name.startsWith(String):396->rgb(203,55,55)
Names$Name.startsWith(String, int):347->rgb(205,57,57)
Names$NameOps.dropLocal():483->rgb(234,100,100)
Names$NameOps.dropRight(int):482->rgb(230,93,93)
Names$NameOps.dropTraitSetterSeparator():491->rgb(241,110,110)
Names$NameOps.getterName():488->rgb(228,91,91)
Names$NameOps.localName():486->rgb(205,57,57)
Names$NameOps.setterName():487->rgb(237,104,104)
Names$NameOps.stripSuffix(Names$Name):479->rgb(230,94,94)
Names$NameOps.stripSuffix(String):478->rgb(245,116,116)
Names$TermName$.apply(String):572->rgb(236,103,103)
Names$TermName.body$2():545->rgb(236,102,102)
Names$TermName.newName(String):533->rgb(219,78,78)
Names$TermName.newName(String):559->rgb(238,106,106)
Names$TermName.scala$reflect$internal$Names$TermName$$$outer():533->rgb(235,101,101)
Names$TermName.subName(int, int):533->rgb(209,63,63)
Names$TermName.subName(int, int):562->rgb(214,71,71)
Names$TermName.toTypeName():557->rgb(249,121,121)
Names$TermName_S.newName(String):515->rgb(241,110,110)
Names$TermName_S.newName(String):517->rgb(250,123,123)
Names$TermName_S.scala$reflect$internal$Names$TermName_S$$$outer():515->rgb(214,71,71)
Names$TermName_S.toString():515->rgb(245,116,116)
Names$TypeName.body$3():586->rgb(254,128,128)
Names$TypeName.body$3():587->rgb(202,53,53)
Names$TypeName.newName(String):576->rgb(219,78,78)
Names$TypeName.newName(String):596->rgb(252,126,126)
Names$TypeName.subName(int, int):576->rgb(250,122,122)
Names$TypeName.subName(int, int):599->rgb(225,87,87)
Names$TypeName.toTermName():593->rgb(252,125,125)
Names.$init$(Names):38->rgb(235,102,102)
Names.body$1(char[], int, int, String):101->rgb(236,102,102)
Names.body$1(char[], int, int, String):102->rgb(233,98,98)
Names.body$1(char[], int, int, String):116->rgb(229,92,92)
Names.body$1(char[], int, int, String):98->rgb(246,117,117)
Names.body$1(char[], int, int, String):99->rgb(248,119,119)
Names.enterChars(char[], int, int):70->rgb(229,93,93)
Names.equals(int, char[], int, int):60->rgb(252,126,126)
Names.equals(int, char[], int, int):61->rgb(214,71,71)
Names.newTermName$(Names, String):135->rgb(251,124,124)
Names.newTermName$(Names, byte[], int, int):142->rgb(241,110,110)
Names.newTermName$(Names, char[], int, int):82->rgb(251,125,125)
Names.newTermName$(Names, char[], int, int, String):96->rgb(214,70,70)
Names.newTermName(String):135->rgb(217,75,75)
Names.newTermName(byte[], int, int):143->rgb(209,63,63)
Names.newTermName(byte[], int, int):144->rgb(227,90,90)
Names.newTermName(char[], int, int):83->rgb(209,63,63)
Names.newTermName(char[], int, int, String):127->rgb(230,94,94)
Names.newTermNameCached$(Names, String):147->rgb(226,87,87)
Names.newTermNameCached(String):148->rgb(212,67,67)
Names.newTypeName$(Names, String):139->rgb(208,62,62)
Names.newTypeName$(Names, byte[], int, int):158->rgb(222,82,82)
Names.newTypeName$(Names, char[], int, int):154->rgb(210,65,65)
Names.newTypeName(String):139->rgb(228,92,92)
Names.newTypeName(byte[], int, int):159->rgb(238,106,106)
Names.newTypeName(char[], int, int):155->rgb(202,53,53)
Names.synchronizeNames$(Names):30->rgb(210,65,65)
NamesDefaults.isNamedArg$(NamesDefaults, Trees$Tree):54->rgb(217,75,75)
NamesDefaults.isNamedArg(Trees$Tree):55->rgb(238,106,106)
NativeBuffer.release():63->rgb(251,125,125)
NativeBuffers.releaseNativeBuffer(NativeBuffer):92->rgb(233,98,98)
Nil$.equals(Object):433->rgb(200,51,51)
Numeric$IntIsIntegral$.mkOrderingOps(Object):58->rgb(203,54,54)
Object.<init>():37->rgb(252,126,126)
Object.equals(Object):149->rgb(241,109,109)
ObjectRef.create(Object):22->rgb(251,124,124)
Option$.apply(Object):25->rgb(226,89,89)
Option$WithFilter.foreach(Function1):257->rgb(202,53,53)
Option.exists(Function1):240->rgb(252,125,125)
Ordering$$anon$5.compare(Object, Object):122->rgb(254,129,129)
Ordering$$anon$9.compare(Object, Object):200->rgb(254,129,129)
Ordering.mkOrderingOps$(Ordering, Object):139->rgb(204,56,56)
Ordering.mkOrderingOps(Object):139->rgb(253,127,127)
OverridingPairs$Cursor.<init>(OverridingPairs, Symbols$Symbol):20->rgb(210,64,64)
OverridingPairs$Cursor.exclude(Symbols$Symbol):25->rgb(229,92,92)
OverridingPairs$Cursor.exclude(Symbols$Symbol):26->rgb(247,119,119)
OverridingPairs$Cursor.exclude(Symbols$Symbol):27->rgb(238,106,106)
OverridingPairs$Cursor.exclude(Symbols$Symbol):28->rgb(243,112,112)
OverridingPairs$Cursor.matches(Symbols$Symbol):38->rgb(235,101,101)
Parsers$Parser$$anonfun$templateStat$1.$anonfun$applyOrElse$2(Parsers$Parser$$anonfun$templateStat$1):3147->rgb(250,123,123)
Parsers$Parser$$anonfun$templateStat$1.applyOrElse(Object, Function1):3147->rgb(223,83,83)
Parsers$Parser$$anonfun$topStat$1.$anonfun$applyOrElse$1(Parsers$Parser$$anonfun$topStat$1):3097->rgb(235,101,101)
Parsers$Parser$$anonfun$topStat$1.applyOrElse(Object, Function1):3097->rgb(242,111,111)
Parsers$Parser$PatternContextSensitive.$anonfun$annotType$1(Parsers$Parser$PatternContextSensitive):1011->rgb(207,60,60)
Parsers$Parser$PatternContextSensitive.$anonfun$infixType$1(Parsers$Parser$PatternContextSensitive, Enumeration$Value):1117->rgb(240,109,109)
Parsers$Parser$PatternContextSensitive.$anonfun$infixTypeRest$3(Parsers$Parser$PatternContextSensitive, Trees$Tree, Enumeration$Value):1108->rgb(208,62,62)
Parsers$Parser$PatternContextSensitive.$anonfun$typ$1(Parsers$Parser$PatternContextSensitive):991->rgb(222,83,83)
Parsers$Parser$PatternContextSensitive.$anonfun$typ$1(Parsers$Parser$PatternContextSensitive):992->rgb(244,114,114)
Parsers$Parser$PatternContextSensitive.$anonfun$typ$1(Parsers$Parser$PatternContextSensitive):995->rgb(211,66,66)
Parsers$Parser$PatternContextSensitive.annotType$(Parsers$Parser$PatternContextSensitive):1011->rgb(207,61,61)
Parsers$Parser$PatternContextSensitive.annotType():1011->rgb(243,113,113)
Parsers$Parser$PatternContextSensitive.asInfix$1(Trees$Tree, Enumeration$Value):1097->rgb(217,75,75)
Parsers$Parser$PatternContextSensitive.asInfix$1(Trees$Tree, Enumeration$Value):1104->rgb(207,61,61)
Parsers$Parser$PatternContextSensitive.compoundType$(Parsers$Parser$PatternContextSensitive):1053->rgb(254,129,129)
Parsers$Parser$PatternContextSensitive.compoundType():1055->rgb(241,109,109)
Parsers$Parser$PatternContextSensitive.infixType$(Parsers$Parser$PatternContextSensitive, Enumeration$Value):1116->rgb(215,72,72)
Parsers$Parser$PatternContextSensitive.infixType(Enumeration$Value):1117->rgb(240,108,108)
Parsers$Parser$PatternContextSensitive.infixTypeRest$(Parsers$Parser$PatternContextSensitive, Trees$Tree, Enumeration$Value):1085->rgb(231,95,95)
Parsers$Parser$PatternContextSensitive.infixTypeRest(Trees$Tree, Enumeration$Value):1108->rgb(207,60,60)
Parsers$Parser$PatternContextSensitive.simpleType$(Parsers$Parser$PatternContextSensitive):1022->rgb(201,51,51)
Parsers$Parser$PatternContextSensitive.simpleType():1030->rgb(202,53,53)
Parsers$Parser$PatternContextSensitive.simpleTypeRest$(Parsers$Parser$PatternContextSensitive, Trees$Tree):1042->rgb(243,113,113)
Parsers$Parser$PatternContextSensitive.simpleTypeRest(Trees$Tree):1044->rgb(212,68,68)
Parsers$Parser$PatternContextSensitive.tupleInfixType(int):953->rgb(206,60,60)
Parsers$Parser$PatternContextSensitive.tupleInfixType(int):958->rgb(254,128,128)
Parsers$Parser$PatternContextSensitive.typ$(Parsers$Parser$PatternContextSensitive):988->rgb(232,96,96)
Parsers$Parser$PatternContextSensitive.typ():988->rgb(233,99,99)
Parsers$Parser$outPattern$.annotType():2084->rgb(200,50,50)
Parsers$Parser$outPattern$.compoundType():2084->rgb(221,81,81)
Parsers$Parser$outPattern$.infixType(Enumeration$Value):2084->rgb(227,90,90)
Parsers$Parser$outPattern$.infixTypeRest(Trees$Tree, Enumeration$Value):2084->rgb(230,94,94)
Parsers$Parser$outPattern$.simpleType():2084->rgb(205,57,57)
Parsers$Parser$outPattern$.simpleTypeRest(Trees$Tree):2084->rgb(202,54,54)
Parsers$Parser$outPattern$.typ():2084->rgb(231,95,95)
Parsers$Parser.$anonfun$argumentExprs$1(Parsers$Parser):1757->rgb(231,95,95)
Parsers$Parser.$anonfun$argumentExprs$2(Parsers$Parser):1761->rgb(237,104,104)
Parsers$Parser.$anonfun$blockExpr$1(Parsers$Parser):1777->rgb(233,98,98)
Parsers$Parser.$anonfun$blockExpr$1(Parsers$Parser):1778->rgb(237,105,105)
Parsers$Parser.$anonfun$blockStatSeq$1(Parsers$Parser):3232->rgb(228,92,92)
Parsers$Parser.$anonfun$blockStatSeq$1(Parsers$Parser):3237->rgb(232,97,97)
Parsers$Parser.$anonfun$caseClauses$1(Parsers$Parser):1798->rgb(231,96,96)
Parsers$Parser.$anonfun$classDef$1(Parsers$Parser, Trees$Modifiers, Names$TypeName):2868->rgb(227,89,89)
Parsers$Parser.$anonfun$compilationUnit$1(Parsers$Parser):3293->rgb(221,80,80)
Parsers$Parser.$anonfun$expr$1(Parsers$Parser, int):1445->rgb(214,70,70)
Parsers$Parser.$anonfun$expr0$1(Parsers$Parser):1461->rgb(240,109,109)
Parsers$Parser.$anonfun$expr0$5(Parsers$Parser):1511->rgb(228,90,90)
Parsers$Parser.$anonfun$expr0$7(Parsers$Parser):1578->rgb(203,55,55)
Parsers$Parser.$anonfun$funDefRest$1(Parsers$Parser):2707->rgb(211,66,66)
Parsers$Parser.$anonfun$interpolatedString$2(Parsers$Parser, boolean):1347->rgb(203,54,54)
Parsers$Parser.$anonfun$paramClauses$1(Parsers$Parser, Names$Name, BooleanRef, int):2264->rgb(205,57,57)
Parsers$Parser.$anonfun$parse$1(Parsers$Parser):351->rgb(214,71,71)
Parsers$Parser.$anonfun$simpleExpr$1(Parsers$Parser):785->rgb(203,55,55)
Parsers$Parser.$anonfun$simpleExpr$2(Parsers$Parser):1694->rgb(210,64,64)
Parsers$Parser.$anonfun$templateBody$1(Parsers$Parser, boolean):3034->rgb(216,74,74)
Parsers$Parser.$anonfun$templateStatSeq$1(Parsers$Parser):3128->rgb(244,115,115)
Parsers$Parser.accept(int):599->rgb(242,111,111)
Parsers$Parser.accept(int):609->rgb(221,80,80)
Parsers$Parser.args$1():785->rgb(215,72,72)
Parsers$Parser.args$1():789->rgb(202,53,53)
Parsers$Parser.argumentExprs():1760->rgb(249,121,121)
Parsers$Parser.argumentExprs():53->rgb(243,112,112)
Parsers$Parser.atPos(Position, Trees$Tree):733->rgb(225,87,87)
Parsers$Parser.atPos(int, Trees$Tree):730->rgb(224,85,85)
Parsers$Parser.atPos(int, int, Trees$Tree):731->rgb(241,110,110)
Parsers$Parser.block():1787->rgb(233,99,99)
Parsers$Parser.blockExpr():66->rgb(252,126,126)
Parsers$Parser.blockStatSeq():3219->rgb(244,114,114)
Parsers$Parser.canReduce$1(List, int, boolean):914->rgb(231,95,95)
Parsers$Parser.caseBlock():1807->rgb(225,87,87)
Parsers$Parser.caseClause():1790->rgb(224,85,85)
Parsers$Parser.caseClauses():789->rgb(224,86,86)
Parsers$Parser.checkNoEscapingPlaceholders(Function0):481->rgb(200,50,50)
Parsers$Parser.classDef(int, Trees$Modifiers):2854->rgb(231,95,95)
Parsers$Parser.compilationUnit():3255->rgb(214,71,71)
Parsers$Parser.condExpr():1406->rgb(210,64,64)
Parsers$Parser.defOrDcl(int, Trees$Modifiers):2574->rgb(218,77,77)
Parsers$Parser.defOrDcl(int, Trees$Modifiers):2576->rgb(247,118,118)
Parsers$Parser.defOrDcl(int, Trees$Modifiers):2578->rgb(212,68,68)
Parsers$Parser.defOrDcl(int, Trees$Modifiers):2582->rgb(221,81,81)
Parsers$Parser.enumerator(boolean, boolean):1836->rgb(200,50,50)
Parsers$Parser.enumerators():1829->rgb(221,80,80)
Parsers$Parser.expr():1443->rgb(234,100,100)
Parsers$Parser.expr(int):1288->rgb(203,54,54)
Parsers$Parser.expr0(int):1447->rgb(224,84,84)
Parsers$Parser.expr0(int):1457->rgb(249,121,121)
Parsers$Parser.expr0(int):1482->rgb(232,96,96)
Parsers$Parser.expr0(int):1493->rgb(218,77,77)
Parsers$Parser.expr0(int):1505->rgb(208,62,62)
Parsers$Parser.expr0(int):1524->rgb(240,108,108)
Parsers$Parser.expr0(int):1595->rgb(251,124,124)
Parsers$Parser.finish$1(Object):1263->rgb(202,53,53)
Parsers$Parser.finishBinaryOp(boolean, Parsers$OpInfo, Trees$Tree):894->rgb(208,62,62)
Parsers$Parser.finishBinaryOp(boolean, Parsers$OpInfo, Trees$Tree):895->rgb(212,68,68)
Parsers$Parser.finishBinaryOp(boolean, Parsers$OpInfo, Trees$Tree):897->rgb(241,109,109)
Parsers$Parser.freshPlaceholder():1304->rgb(236,103,103)
Parsers$Parser.fromWithinReturnType(Function0):530->rgb(243,112,112)
Parsers$Parser.funDefOrDcl(int, Trees$Modifiers):2693->rgb(229,93,93)
Parsers$Parser.funDefRest(int, int, Trees$Modifiers, Names$Name):2705->rgb(229,92,92)
Parsers$Parser.funDefRest(int, int, Trees$Modifiers, Names$Name):2707->rgb(230,94,94)
Parsers$Parser.funDefRest(int, int, Trees$Modifiers, Names$Name):2721->rgb(237,103,103)
Parsers$Parser.funDefRest(int, int, Trees$Modifiers, Names$Name):2732->rgb(201,52,52)
Parsers$Parser.funDefRest(int, int, Trees$Modifiers, Names$Name):2734->rgb(244,115,115)
Parsers$Parser.generator(boolean, boolean):1859->rgb(225,86,86)
Parsers$Parser.ident():1137->rgb(201,51,51)
Parsers$Parser.ident(boolean):1130->rgb(237,104,104)
Parsers$Parser.ident(boolean):1131->rgb(252,125,125)
Parsers$Parser.interpolatedString(boolean):1288->rgb(232,97,97)
Parsers$Parser.isDone$1(List):911->rgb(248,121,121)
Parsers$Parser.isIdent():677->rgb(207,61,61)
Parsers$Parser.isUnaryOp():672->rgb(232,96,96)
Parsers$Parser.joinComment(Function0):726->rgb(200,50,50)
Parsers$Parser.literal(boolean, boolean, int):1267->rgb(244,114,114)
Parsers$Parser.literal(boolean, boolean, int):1278->rgb(216,74,74)
Parsers$Parser.localDef(int):3201->rgb(201,52,52)
Parsers$Parser.loop$1(Trees$Tree, boolean, List, int, boolean):919->rgb(219,78,78)
Parsers$Parser.loop$1(Trees$Tree, boolean, List, int, boolean):925->rgb(209,64,64)
Parsers$Parser.loop$2(Trees$Tree, int, List):1632->rgb(238,105,105)
Parsers$Parser.loop$2(Trees$Tree, int, List):1633->rgb(213,69,69)
Parsers$Parser.loop$2(Trees$Tree, int, List):1634->rgb(251,124,124)
Parsers$Parser.loop$2(Trees$Tree, int, List):1636->rgb(234,99,99)
Parsers$Parser.loop$6(Trees$Modifiers):2191->rgb(214,70,70)
Parsers$Parser.makeBinop(boolean, Trees$Tree, Names$TermName, Trees$Tree, Position, List):842->rgb(225,86,86)
Parsers$Parser.makeSafeTupleType(List, int):799->rgb(236,102,102)
Parsers$Parser.mkSelection$1(Trees$Tree, Names$TermName, Position, List):829->rgb(233,99,99)
Parsers$Parser.modifiers():2200->rgb(203,55,55)
Parsers$Parser.nonLocalDefOrDcl():2590->rgb(215,73,73)
Parsers$Parser.objectDef(int, Trees$Modifiers):2890->rgb(253,128,128)
Parsers$Parser.opstack():861->rgb(251,125,125)
Parsers$Parser.param(Names$Name, int, boolean):2372->rgb(236,102,102)
Parsers$Parser.paramClause$1(Names$Name, IntRef, IntRef, IntRef, BooleanRef, ListBuffer):785->rgb(225,86,86)
Parsers$Parser.paramClauses(Names$Name, List, boolean):2269->rgb(216,73,73)
Parsers$Parser.paramType():2316->rgb(234,100,100)
Parsers$Parser.paramType(boolean):2322->rgb(236,102,102)
Parsers$Parser.paramType(boolean):2324->rgb(236,102,102)
Parsers$Parser.parse():351->rgb(213,70,70)
Parsers$Parser.parseDo$1():1498->rgb(235,101,101)
Parsers$Parser.parseFor$1(int):1515->rgb(214,70,70)
Parsers$Parser.parseFor$1(int):1517->rgb(209,63,63)
Parsers$Parser.parseFor$1(int):53->rgb(250,123,123)
Parsers$Parser.parseIf$1():1450->rgb(204,57,57)
Parsers$Parser.parseIf$1():1452->rgb(238,105,105)
Parsers$Parser.parseOther$1(int):1541->rgb(221,80,80)
Parsers$Parser.parseOther$1(int):1545->rgb(249,122,122)
Parsers$Parser.parseOther$1(int):1548->rgb(201,52,52)
Parsers$Parser.parseOther$1(int):1566->rgb(219,77,77)
Parsers$Parser.parseOther$1(int):1590->rgb(230,94,94)
Parsers$Parser.parseOther$1(int):66->rgb(219,78,78)
Parsers$Parser.parseRule(Function1):344->rgb(237,104,104)
Parsers$Parser.parseTry$1():66->rgb(240,109,109)
Parsers$Parser.parseWhile$1():1490->rgb(238,106,106)
Parsers$Parser.patDefOrDcl(int, Trees$Modifiers):2601->rgb(254,129,129)
Parsers$Parser.patDefOrDcl(int, Trees$Modifiers):2606->rgb(228,91,91)
Parsers$Parser.patDefOrDcl(int, Trees$Modifiers):2613->rgb(222,82,82)
Parsers$Parser.patDefOrDcl(int, Trees$Modifiers):2633->rgb(228,91,91)
Parsers$Parser.path(boolean, boolean):1197->rgb(242,111,111)
Parsers$Parser.placeholderTypeBoundary(Function0):504->rgb(208,63,63)
Parsers$Parser.postfixExpr():1643->rgb(233,98,98)
Parsers$Parser.prefixExpr():1651->rgb(236,103,103)
Parsers$Parser.prefixExpr():1665->rgb(250,123,123)
Parsers$Parser.r2p(int):316->rgb(232,97,97)
Parsers$Parser.r2p(int, int):315->rgb(205,57,57)
Parsers$Parser.r2p(int, int, int):314->rgb(223,84,84)
Parsers$Parser.reduceExprStack(List, Trees$Tree):900->rgb(226,88,88)
Parsers$Parser.reduceStack(boolean, List, Trees$Tree):907->rgb(200,51,51)
Parsers$Parser.reduceStack(boolean, List, Trees$Tree, int, boolean):916->rgb(230,94,94)
Parsers$Parser.reduceStack(boolean, List, Trees$Tree, int, boolean):928->rgb(251,124,124)
Parsers$Parser.samePrecedence$1(List, int):913->rgb(206,58,58)
Parsers$Parser.savingClassContextBounds(Function0):326->rgb(216,73,73)
Parsers$Parser.scala$tools$nsc$ast$parser$Parsers$Parser$$$outer():270->rgb(248,120,120)
Parsers$Parser.scala$tools$nsc$ast$parser$Parsers$Parser$$pushOpInfo(Trees$Tree):872->rgb(201,51,51)
Parsers$Parser.selector(Trees$Tree):1150->rgb(202,53,53)
Parsers$Parser.selectors(Trees$Tree, boolean, int):1210->rgb(252,127,127)
Parsers$Parser.simpleExpr():1685->rgb(230,94,94)
Parsers$Parser.simpleExpr():1690->rgb(240,108,108)
Parsers$Parser.simpleExpr():1692->rgb(220,80,80)
Parsers$Parser.simpleExpr():1697->rgb(214,70,70)
Parsers$Parser.simpleExpr():1705->rgb(248,119,119)
Parsers$Parser.simpleExpr():1709->rgb(233,98,98)
Parsers$Parser.simpleExpr():53->rgb(211,66,66)
Parsers$Parser.simpleExprRest(Trees$Tree, boolean):1717->rgb(229,92,92)
Parsers$Parser.simpleExprRest(Trees$Tree, boolean):1740->rgb(251,125,125)
Parsers$Parser.simpleExprRest(Trees$Tree, boolean):1742->rgb(206,59,59)
Parsers$Parser.statSeq(PartialFunction, String):3074->rgb(219,78,78)
Parsers$Parser.statement(int):1418->rgb(215,72,72)
Parsers$Parser.stringCheese$1(boolean):1328->rgb(224,85,85)
Parsers$Parser.template():2971->rgb(201,52,52)
Parsers$Parser.templateBody(boolean):66->rgb(236,103,103)
Parsers$Parser.templateBodyOpt(boolean):3041->rgb(226,88,88)
Parsers$Parser.templateOpt(Trees$Modifiers, Names$Name, Trees$Modifiers, List, int):3001->rgb(201,52,52)
Parsers$Parser.templateOpt(Trees$Modifiers, Names$Name, Trees$Modifiers, List, int):3005->rgb(243,112,112)
Parsers$Parser.templateOpt(Trees$Modifiers, Names$Name, Trees$Modifiers, List, int):3015->rgb(245,116,116)
Parsers$Parser.templateStatSeq(boolean):3105->rgb(219,77,77)
Parsers$Parser.templateStats():3141->rgb(209,63,63)
Parsers$Parser.tmplDef(int, Trees$Modifiers):2826->rgb(226,88,88)
Parsers$Parser.tmplDef(int, Trees$Modifiers):2828->rgb(228,91,91)
Parsers$Parser.tmplDef(int, Trees$Modifiers):2830->rgb(213,68,68)
Parsers$Parser.tmplDef(int, Trees$Modifiers):2832->rgb(249,121,121)
Parsers$Parser.tmplDef(int, Trees$Modifiers):2834->rgb(230,94,94)
Parsers$Parser.tokenRange(Scanners$TokenData):2140->rgb(229,93,93)
Parsers$Parser.topLevelTmplDef():2813->rgb(200,51,51)
Parsers$Parser.topStatSeq():3089->rgb(236,103,103)
Parsers$Parser.topstats$1():3279->rgb(249,122,122)
Parsers$Parser.topstats$1():3287->rgb(203,54,54)
Parsers$Parser.typ():2104->rgb(247,119,119)
Parsers$Parser.typeOrInfixType(int):1382->rgb(211,66,66)
Parsers$Parser.typedOpt():1378->rgb(247,119,119)
Parsers$SourceFileParser.$anonfun$parseStartRule$1(Parsers$SourceFileParser):145->rgb(218,77,77)
Parsers$UnitParser.$anonfun$smartParse$1(Parsers$UnitParser):241->rgb(200,51,51)
Parsers$UnitParser.smartParse():216->rgb(215,73,73)
ParsersCommon$ParserCommon.$anonfun$makeParens$1(ParsersCommon$ParserCommon, Function0):90->rgb(225,86,86)
PartialFunction.lift$(PartialFunction):94->rgb(207,61,61)
PartialFunction.lift():94->rgb(219,77,77)
PathResolver$Defaults$.scalaExtDirs():111->rgb(200,51,51)
PathResolver$Environment$.scalaExtDirs():61->rgb(221,81,81)
Pattern.<init>(String, int):1351->rgb(205,57,57)
Pattern.atom():2235->rgb(231,95,95)
Pattern.compile():1698->rgb(224,85,85)
Pattern.compile(String):1028->rgb(245,116,116)
Pattern.expr(Pattern$Node):1998->rgb(246,117,117)
Pattern.matches(String, CharSequence):1133->rgb(204,57,57)
Pattern.newSlice(int[], int, boolean):3381->rgb(252,127,127)
Pattern.sequence(Pattern$Node):2132->rgb(233,98,98)
PatternMatching$MatchTransformer.<init>(PatternMatching, CompilationUnits$CompilationUnit):57->rgb(200,50,50)
PatternMatching$MatchTransformer.transform(Trees$Tree):62->rgb(209,63,63)
PatternMatching$MatchTransformer.transform(Trees$Tree):64->rgb(220,79,79)
PatternMatching$MatchTransformer.transform(Trees$Tree):73->rgb(215,72,72)
PatternMatching$MatchTransformer.transform(Trees$TreeApi):57->rgb(231,95,95)
PatternMatching$MatchTransformer.translator():80->rgb(250,123,123)
PatternMatching$OptimizingMatchTranslator.<init>(PatternMatching, Typers$Typer):89->rgb(228,91,91)
PatternMatching$OptimizingMatchTranslator.Var$lzycompute$1():89->rgb(237,103,103)
PatternMatching$OptimizingMatchTranslator.Var():89->rgb(217,75,75)
PatternMatching$OptimizingMatchTranslator.analyzeCases(Symbols$Symbol, List, Types$Type, MatchTreeMaking$Suppression):89->rgb(238,106,106)
PatternMatching$OptimizingMatchTranslator.approximateMatchConservative(Symbols$Symbol, List):89->rgb(235,101,101)
PatternMatching$OptimizingMatchTranslator.combineCases(Trees$Tree, Symbols$Symbol, List, Types$Type, Symbols$Symbol, Option):89->rgb(235,101,101)
PatternMatching$OptimizingMatchTranslator.combineCasesNoSubstOnly(Trees$Tree, Symbols$Symbol, List, Types$Type, Symbols$Symbol, Option):89->rgb(200,51,51)
PatternMatching$OptimizingMatchTranslator.combineExtractors(List, MatchCodeGen$CodegenCore$Casegen):89->rgb(209,64,64)
PatternMatching$OptimizingMatchTranslator.doCSE(Symbols$Symbol, List, Types$Type):89->rgb(215,72,72)
PatternMatching$OptimizingMatchTranslator.emitSwitch(Trees$Tree, Symbols$Symbol, List, Types$Type, Option, boolean):89->rgb(228,91,91)
PatternMatching$OptimizingMatchTranslator.enumerateSubtypes(Types$Type, boolean):89->rgb(240,108,108)
PatternMatching$OptimizingMatchTranslator.eqFreePropToSolvable(Logic$PropositionalLogic$Prop):89->rgb(244,115,115)
PatternMatching$OptimizingMatchTranslator.exhaustive(Symbols$Symbol, List, Types$Type):89->rgb(217,76,76)
PatternMatching$OptimizingMatchTranslator.findModelFor(Object):89->rgb(230,94,94)
PatternMatching$OptimizingMatchTranslator.findModelFor(Solving$CNF$Solvable):89->rgb(249,121,121)
PatternMatching$OptimizingMatchTranslator.findTseitinModelFor(Set[]):89->rgb(231,95,95)
PatternMatching$OptimizingMatchTranslator.freshName(String):89->rgb(203,55,55)
PatternMatching$OptimizingMatchTranslator.gatherSymbols(Logic$PropositionalLogic$Prop):89->rgb(242,112,112)
PatternMatching$OptimizingMatchTranslator.newBoundTree(Trees$Tree, Types$Type):89->rgb(201,52,52)
PatternMatching$OptimizingMatchTranslator.newSynthCaseLabel(String):89->rgb(218,77,77)
PatternMatching$OptimizingMatchTranslator.optimizeCases(Symbols$Symbol, List, Types$Type):89->rgb(228,91,91)
PatternMatching$OptimizingMatchTranslator.prepareNewAnalysis():89->rgb(206,59,59)
PatternMatching$OptimizingMatchTranslator.propToSolvable(Logic$PropositionalLogic$Prop):89->rgb(224,85,85)
PatternMatching$OptimizingMatchTranslator.propagateSubstitution(List, Interface$TypedSubstitution$Substitution):89->rgb(201,52,52)
PatternMatching$OptimizingMatchTranslator.removeVarEq(List, boolean):89->rgb(251,124,124)
PatternMatching$OptimizingMatchTranslator.showTreeMakers(List):89->rgb(235,101,101)
PatternMatching$OptimizingMatchTranslator.simplify(Logic$PropositionalLogic$Prop):89->rgb(210,65,65)
PatternMatching$OptimizingMatchTranslator.translateBody(Trees$Tree, Types$Type):89->rgb(252,126,126)
PatternMatching$OptimizingMatchTranslator.translateCase(Symbols$Symbol, Types$Type, Trees$CaseDef):89->rgb(212,68,68)
PatternMatching$OptimizingMatchTranslator.translateMatch(Trees$Match):89->rgb(226,88,88)
PatternMatching$OptimizingMatchTranslator.translatePattern(MatchTranslation$MatchTranslator$BoundTree):89->rgb(231,95,95)
PatternMatching$OptimizingMatchTranslator.uncheckableType(Types$Type):89->rgb(251,125,125)
PatternMatching$OptimizingMatchTranslator.unreachableCase(Symbols$Symbol, List, Types$Type):89->rgb(238,105,105)
PatternMatching.newTransformer$(PatternMatching, CompilationUnits$CompilationUnit):55->rgb(210,64,64)
PatternMatching.newTransformer(CompilationUnits$CompilationUnit):55->rgb(223,84,84)
PatternTypers$PatternTyper$VariantToSkolemMap.apply(Types$Type):184->rgb(214,71,71)
PatternTypers$PatternTyper$VariantToSkolemMap.apply(Types$Type):194->rgb(213,69,69)
PatternTypers$PatternTyper.$anonfun$typedArgsForFormals$2(PatternTypers$PatternTyper, List, int, Types$Type, List):118->rgb(228,91,91)
PatternTypers$PatternTyper.$anonfun$typedArgsForFormals$3(PatternTypers$PatternTyper, int, Types$Type, Trees$Tree):118->rgb(238,106,106)
PatternTypers$PatternTyper.$anonfun$typedArgsForFormals$4(PatternTypers$PatternTyper, int, Trees$Tree, Types$Type):122->rgb(249,122,122)
PatternTypers$PatternTyper.$anonfun$typedConstructorPattern$1$adapted(PatternTypers$PatternTyper, Symbols$Symbol):74->rgb(204,55,55)
PatternTypers$PatternTyper.$anonfun$typedConstructorPattern$1(PatternTypers$PatternTyper, Symbols$Symbol):74->rgb(235,101,101)
PatternTypers$PatternTyper.convertToCaseConstructor(Trees$Tree, Symbols$Symbol, Types$Type):236->rgb(223,84,84)
PatternTypers$PatternTyper.convertToCaseConstructor(Trees$Tree, Symbols$Symbol, Types$Type):242->rgb(204,56,56)
PatternTypers$PatternTyper.convertToCaseConstructor(Trees$Tree, Symbols$Symbol, Types$Type):249->rgb(246,117,117)
PatternTypers$PatternTyper.extractorForUncheckedType$(PatternTypers$PatternTyper, Position, Types$Type):359->rgb(251,124,124)
PatternTypers$PatternTyper.extractorForUncheckedType(Position, Types$Type):371->rgb(246,118,118)
PatternTypers$PatternTyper.hasUnapplyMember(Symbols$Symbol):55->rgb(205,58,58)
PatternTypers$PatternTyper.hasUnapplyMember(Types$Type):54->rgb(218,76,76)
PatternTypers$PatternTyper.typedArgWithFormal$1(Trees$Tree, Types$Type, int):105->rgb(215,73,73)
PatternTypers$PatternTyper.typedArgWithFormal$1(Trees$Tree, Types$Type, int):106->rgb(209,63,63)
PatternTypers$PatternTyper.typedArgWithFormal$1(Trees$Tree, Types$Type, int):108->rgb(211,66,66)
PatternTypers$PatternTyper.typedArgsForFormals$(PatternTypers$PatternTyper, List, List, int):103->rgb(251,124,124)
PatternTypers$PatternTyper.typedArgsForFormals(List, List, int):115->rgb(227,90,90)
PatternTypers$PatternTyper.typedArgsForFormals(List, List, int):118->rgb(252,126,126)
PatternTypers$PatternTyper.typedArgsForFormals(List, List, int):122->rgb(211,66,66)
PatternTypers$PatternTyper.typedConstructorPattern$(PatternTypers$PatternTyper, Trees$Tree, Types$Type):70->rgb(227,90,90)
PatternTypers$PatternTyper.typedConstructorPattern(Trees$Tree, Types$Type):61->rgb(234,100,100)
PatternTypers$PatternTyper.typedConstructorPattern(Trees$Tree, Types$Type):76->rgb(224,85,85)
PatternTypers$PatternTyper.typedConstructorPattern(Trees$Tree, Types$Type):92->rgb(219,77,77)
PatternTypers$PatternTyper.typedInPattern$(PatternTypers$PatternTyper, Trees$Typed, int, Types$Type):151->rgb(225,86,86)
PatternTypers$PatternTyper.typedInPattern(Trees$Typed, int, Types$Type):155->rgb(206,60,60)
PatternTypers$PatternTyper.typedInPattern(Trees$Typed, int, Types$Type):156->rgb(227,90,90)
PatternTypers$PatternTyper.typedInPattern(Trees$Typed, int, Types$Type):164->rgb(243,113,113)
PatternTypers$PatternTyper.typedStarInPattern$(PatternTypers$PatternTyper, Trees$Tree, int, Types$Type):132->rgb(218,77,77)
PatternTypers$PatternTyper.typedStarInPattern(Trees$Tree, int, Types$Type):134->rgb(226,89,89)
PerRunInit.initialize$(PerRunInit):16->rgb(252,126,126)
PerRunInit.initialize():16->rgb(253,127,127)
Phase.flagMask():27->rgb(244,114,114)
Phase.fmask():23->rgb(211,67,67)
PickleBuffer.createIndex():171->rgb(247,118,118)
PickleBuffer.readNat():102->rgb(207,60,60)
PickleBuffer.until(int, Function0):154->rgb(213,69,69)
Pickler$Pickle.$anonfun$putSymbols$1(Pickler$Pickle, Symbols$Symbol):214->rgb(232,96,96)
Pickler$Pickle.$anonfun$putTypes$1(Pickler$Pickle, Types$Type):261->rgb(223,83,83)
Pickler$Pickle.$anonfun$writeArray$1(Pickler$Pickle, Object):535->rgb(223,84,84)
Pickler$Pickle.deskolemize(Symbols$Symbol):156->rgb(200,51,51)
Pickler$Pickle.deskolemizeTypeSymbols(Object):145->rgb(208,62,62)
Pickler$Pickle.index():87->rgb(220,79,79)
Pickler$Pickle.isLocalToPickle(Symbols$Symbol):114->rgb(237,104,104)
Pickler$Pickle.isLocalToPickle(Symbols$Symbol):115->rgb(246,117,117)
Pickler$Pickle.isLocalToPickle(Symbols$Symbol):118->rgb(201,52,52)
Pickler$Pickle.isLocalToPickle(Symbols$Symbol):119->rgb(218,77,77)
Pickler$Pickle.isRootSym(Symbols$Symbol):91->rgb(252,126,126)
Pickler$Pickle.localizedOwner(Symbols$Symbol):103->rgb(230,93,93)
Pickler$Pickle.putSymbol(Symbols$Symbol):177->rgb(225,87,87)
Pickler$Pickle.putSymbol(Symbols$Symbol):178->rgb(216,73,73)
Pickler$Pickle.putSymbol(Symbols$Symbol):182->rgb(219,77,77)
Pickler$Pickle.putSymbol(Symbols$Symbol):207->rgb(247,119,119)
Pickler$Pickle.putSymbols(List):214->rgb(237,104,104)
Pickler$Pickle.putTypes(List):261->rgb(221,80,80)
Pickler$Pickle.scala$tools$nsc$symtab$classfile$Pickler$Pickle$$putEntry(Object):130->rgb(231,95,95)
Pickler$Pickle.scala$tools$nsc$symtab$classfile$Pickler$Pickle$$putEntry(Object):139->rgb(246,117,117)
Pickler$Pickle.scala$tools$nsc$symtab$classfile$Pickler$Pickle$$putType(Types$Type):218->rgb(232,97,97)
Pickler$Pickle.scala$tools$nsc$symtab$classfile$Pickler$Pickle$$putType(Types$Type):220->rgb(214,70,70)
Pickler$Pickle.scala$tools$nsc$symtab$classfile$Pickler$Pickle$$putType(Types$Type):234->rgb(244,114,114)
Pickler$Pickle.scala$tools$nsc$symtab$classfile$Pickler$Pickle$$putType(Types$Type):235->rgb(248,120,120)
Pickler$Pickle.scala$tools$nsc$symtab$classfile$Pickler$Pickle$$putType(Types$Type):237->rgb(211,66,66)
Pickler$Pickle.scala$tools$nsc$symtab$classfile$Pickler$Pickle$$putType(Types$Type):242->rgb(207,60,60)
Pickler$Pickle.scala$tools$nsc$symtab$classfile$Pickler$Pickle$$putType(Types$Type):244->rgb(240,108,108)
Pickler$Pickle.scala$tools$nsc$symtab$classfile$Pickler$Pickle$$putType(Types$Type):245->rgb(224,86,86)
Pickler$Pickle.scala$tools$nsc$symtab$classfile$Pickler$Pickle$$putType(Types$Type):246->rgb(232,97,97)
Pickler$Pickle.scala$tools$nsc$symtab$classfile$Pickler$Pickle$$putType(Types$Type):249->rgb(249,121,121)
Pickler$Pickle.scala$tools$nsc$symtab$classfile$Pickler$Pickle$$putType(Types$Type):250->rgb(248,120,120)
Pickler$Pickle.scala$tools$nsc$symtab$classfile$Pickler$Pickle$$writeRef(Object):342->rgb(211,66,66)
Pickler$Pickle.writeArray():535->rgb(215,72,72)
Pickler$Pickle.writeBody$1(Object):503->rgb(231,96,96)
Pickler$Pickle.writeBody$1(Object):504->rgb(250,123,123)
Pickler$Pickle.writeBody$1(Object):505->rgb(208,62,62)
Pickler$Pickle.writeEntry(Object):523->rgb(244,114,114)
Pickler$Pickle.writeLocalSymbolBody$1(Symbols$Symbol):426->rgb(206,58,58)
Pickler$Pickle.writeName(Names$Name):364->rgb(232,96,96)
Pickler$Pickle.writeSymInfo(Symbols$Symbol):354->rgb(214,71,71)
Pickler$Pickle.writeSymInfo(Symbols$Symbol):355->rgb(235,101,101)
Pickler$Pickle.writeSymInfo(Symbols$Symbol):357->rgb(210,65,65)
Pickler$Pickle.writeSymbolBody$1(Symbols$Symbol):441->rgb(229,93,93)
Pickler$Pickle.writeSymbolBody$1(Symbols$Symbol):442->rgb(217,75,75)
Pickler$Pickle.writeTypeBody$1(Types$Type):460->rgb(224,85,85)
Pickler$PicklePhase.$anonfun$apply$2(Pickler$PicklePhase, Trees$Tree):48->rgb(201,52,52)
Pickler$PicklePhase.add$1(Symbols$Symbol, Pickler$Pickle):41->rgb(250,123,123)
Pickler$PicklePhase.apply(CompilationUnits$CompilationUnit):61->rgb(225,87,87)
Pickler$PicklePhase.pickle$1(Trees$Tree):48->rgb(242,112,112)
Pickler$PicklePhase.pickle$1(Trees$Tree):52->rgb(229,93,93)
Pickler$PicklePhase.pickle$1(Trees$Tree):53->rgb(239,107,107)
Pickler$PicklePhase.pickle$1(Trees$Tree):54->rgb(250,123,123)
PlainNioFile.<init>(Path):108->rgb(234,99,99)
Position$.range(SourceFile, int, int, int):51->rgb(227,89,89)
Position.line():12->rgb(252,126,126)
Positions$DefaultPosAssigner.traverse(Trees$Tree):286->rgb(220,79,79)
Positions$DefaultPosAssigner.traverse(Trees$Tree):288->rgb(207,60,60)
Positions$DefaultPosAssigner.traverse(Trees$TreeApi):282->rgb(214,70,70)
Positions.atPos$(Positions, Position, Trees$Tree):307->rgb(228,92,92)
Positions.atPos(Position, Trees$Tree):309->rgb(250,123,123)
Positions.atPos(Position, Trees$Tree):310->rgb(214,71,71)
Positions.rangePos$(Positions, SourceFile, int, int, int):79->rgb(218,77,77)
PostErasure$PostErasureTransformer.<init>(PostErasure, CompilationUnits$CompilationUnit):22->rgb(247,119,119)
PostErasure$PostErasureTransformer.transform(Trees$Tree):35->rgb(231,96,96)
PostErasure$PostErasureTransformer.transform(Trees$Tree):37->rgb(244,115,115)
PostErasure$PostErasureTransformer.transform(Trees$TreeApi):22->rgb(238,105,105)
PostErasure$elimErasedValueType$.apply(Types$Type):11->rgb(215,72,72)
PostErasure$elimErasedValueType$.apply(Types$Type):13->rgb(220,79,79)
PostErasure.newTransformer$(PostErasure, CompilationUnits$CompilationUnit):19->rgb(201,52,52)
PostErasure.newTransformer(CompilationUnits$CompilationUnit):19->rgb(234,100,100)
PostErasure.transformInfo$(PostErasure, Symbols$Symbol, Types$Type):17->rgb(208,62,62)
PostErasure.transformInfo(Symbols$Symbol, Types$Type):17->rgb(224,85,85)
PostProcessor.$anonfun$localOptimizations$1(PostProcessor, ClassNode):95->rgb(237,104,104)
PostProcessor.$anonfun$postProcessAndSendToDisk$2$adapted(PostProcessor, GeneratedClass):48->rgb(206,60,60)
PostProcessor.$anonfun$postProcessAndSendToDisk$2(PostProcessor, GeneratedClass):51->rgb(217,74,74)
PostProcessor.$anonfun$postProcessAndSendToDisk$2(PostProcessor, GeneratedClass):54->rgb(234,100,100)
PostProcessor.$anonfun$postProcessAndSendToDisk$2(PostProcessor, GeneratedClass):56->rgb(250,123,123)
PostProcessor.$anonfun$postProcessAndSendToDisk$2(PostProcessor, GeneratedClass):57->rgb(249,121,121)
PostProcessor.$anonfun$postProcessAndSendToDisk$2(PostProcessor, GeneratedClass):73->rgb(230,94,94)
PostProcessor.localOptimizations(ClassNode):95->rgb(221,81,81)
PostProcessor.postProcessAndSendToDisk(Traversable):48->rgb(222,82,82)
PostProcessor.serializeClass(ClassNode):105->rgb(212,67,67)
PostProcessor.serializeClass(ClassNode):106->rgb(241,110,110)
PostProcessor.setInnerClasses(ClassNode):100->rgb(223,84,84)
Predef$.assert(boolean):203->rgb(235,101,101)
Predef$any2stringadd$.$plus$extension(Object, String):332->rgb(240,108,108)
PrintWriter.<init>(OutputStream, boolean):148->rgb(232,96,96)
PrivateWithin.$anonfun$propagatePackageBoundary$1(PrivateWithin, Symbols$Symbol):17->rgb(216,73,73)
PrivateWithin.propagatePackageBoundary$(PrivateWithin, int, Seq):15->rgb(210,65,65)
PrivateWithin.propagatePackageBoundary(int, Seq):17->rgb(230,94,94)
PrivateWithin.setPackageAccessBoundary$(PrivateWithin, Symbols$Symbol):23->rgb(243,112,112)
PrivateWithin.setPackageAccessBoundary(Symbols$Symbol):24->rgb(205,58,58)
PropImpl.isSet():18->rgb(204,56,56)
PropertiesTrait.propOrElse$(PropertiesTrait, String, String):52->rgb(246,117,117)
PropertiesTrait.propOrElse(String, String):52->rgb(239,107,107)
PropertiesTrait.propOrEmpty$(PropertiesTrait, String):53->rgb(201,52,52)
PropertiesTrait.propOrEmpty(String):53->rgb(200,51,51)
Range.foreach(Function1):156->rgb(203,55,55)
RedBlackTree$.fixAfterInsert(RedBlackTree$Tree, RedBlackTree$Node):200->rgb(221,80,80)
RedBlackTree$.fixAfterInsert(RedBlackTree$Tree, RedBlackTree$Node):231->rgb(218,76,76)
RedBlackTree$.insert(RedBlackTree$Tree, Object, Object, Ordering):193->rgb(249,122,122)
RedBlackTree$.rotateLeft(RedBlackTree$Tree, RedBlackTree$Node):379->rgb(223,84,84)
RedBlackTree$Node.parent():29->rgb(251,124,124)
RefChecks$RefCheckTransformer.$anonfun$checkAllOverrides$15$adapted(RefChecks$RefCheckTransformer, Symbols$Symbol, Symbols$Symbol):616->rgb(219,78,78)
RefChecks$RefCheckTransformer.$anonfun$checkAllOverrides$15(RefChecks$RefCheckTransformer, Symbols$Symbol, Symbols$Symbol):616->rgb(240,109,109)
RefChecks$RefCheckTransformer.$anonfun$checkAllOverrides$36$adapted(RefChecks$RefCheckTransformer, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol, boolean, LazyRef, Symbols$Symbol):820->rgb(206,60,60)
RefChecks$RefCheckTransformer.$anonfun$checkAllOverrides$36(RefChecks$RefCheckTransformer, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol, boolean, LazyRef, Symbols$Symbol):820->rgb(224,85,85)
RefChecks$RefCheckTransformer.$anonfun$checkAllOverrides$37(RefChecks$RefCheckTransformer, Symbols$Symbol, Symbols$Symbol):827->rgb(221,80,80)
RefChecks$RefCheckTransformer.$anonfun$checkAllOverrides$38(RefChecks$RefCheckTransformer, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):827->rgb(219,78,78)
RefChecks$RefCheckTransformer.$anonfun$checkInfiniteLoop$1$adapted(Symbols$Symbol, Symbols$Symbol):1141->rgb(243,113,113)
RefChecks$RefCheckTransformer.$anonfun$checkInfiniteLoop$1(Symbols$Symbol, Symbols$Symbol):1141->rgb(223,84,84)
RefChecks$RefCheckTransformer.$anonfun$enterSyms$1(RefChecks$RefCheckTransformer, IntRef, Trees$Tree):934->rgb(207,60,60)
RefChecks$RefCheckTransformer.$anonfun$enterSyms$1(RefChecks$RefCheckTransformer, IntRef, Trees$Tree):936->rgb(230,94,94)
RefChecks$RefCheckTransformer.$anonfun$transform$10(RefChecks$RefCheckTransformer, ObjectRef):1732->rgb(246,117,117)
RefChecks$RefCheckTransformer.$anonfun$transform$11(RefChecks$RefCheckTransformer, Trees$Tree):1732->rgb(233,98,98)
RefChecks$RefCheckTransformer.$anonfun$transform$12(RefChecks$RefCheckTransformer, ObjectRef):1745->rgb(218,76,76)
RefChecks$RefCheckTransformer.$anonfun$transform$4$adapted(RefChecks$RefCheckTransformer, Trees$Tree, ListBuffer, BooleanRef, Types$Type):1658->rgb(233,98,98)
RefChecks$RefCheckTransformer.$anonfun$transform$4(RefChecks$RefCheckTransformer, Trees$Tree, ListBuffer, BooleanRef, Types$Type):1667->rgb(214,70,70)
RefChecks$RefCheckTransformer.$anonfun$transformStats$1(RefChecks$RefCheckTransformer, IntRef, Trees$Tree):1168->rgb(252,125,125)
RefChecks$RefCheckTransformer.$anonfun$validateBaseTypes$4(RefChecks$RefCheckTransformer, Symbols$Symbol, HashSet, List[], Types$Type):875->rgb(210,65,65)
RefChecks$RefCheckTransformer.addVarargBridges(Symbols$Symbol):184->rgb(211,66,66)
RefChecks$RefCheckTransformer.applyRefchecksToAnnotations(Trees$Tree):1406->rgb(216,73,73)
RefChecks$RefCheckTransformer.applyRefchecksToAnnotations(Trees$Tree):1418->rgb(222,82,82)
RefChecks$RefCheckTransformer.applyRefchecksToAnnotations(Trees$Tree):1429->rgb(251,124,124)
RefChecks$RefCheckTransformer.checkAllOverrides(Symbols$Symbol, boolean):563->rgb(211,67,67)
RefChecks$RefCheckTransformer.checkAllOverrides(Symbols$Symbol, boolean):566->rgb(204,56,56)
RefChecks$RefCheckTransformer.checkAllOverrides(Symbols$Symbol, boolean):568->rgb(239,107,107)
RefChecks$RefCheckTransformer.checkAllOverrides(Symbols$Symbol, boolean):762->rgb(217,75,75)
RefChecks$RefCheckTransformer.checkAllOverrides(Symbols$Symbol, boolean):826->rgb(217,74,74)
RefChecks$RefCheckTransformer.checkAnyValSubclass(Symbols$Symbol):1577->rgb(211,66,66)
RefChecks$RefCheckTransformer.checkBounds(Trees$Tree, Types$Type, Symbols$Symbol, List, List):1202->rgb(207,60,60)
RefChecks$RefCheckTransformer.checkInfiniteLoop(Symbols$Symbol, Trees$Tree):1139->rgb(241,110,110)
RefChecks$RefCheckTransformer.checkInfiniteLoop(Symbols$Symbol, Trees$Tree):1141->rgb(238,106,106)
RefChecks$RefCheckTransformer.checkNoAbstractMembers$1(Symbols$Symbol, Types$Type, ListBuffer):616->rgb(253,127,127)
RefChecks$RefCheckTransformer.checkNoAbstractMembers$1(Symbols$Symbol, Types$Type, ListBuffer):620->rgb(235,101,101)
RefChecks$RefCheckTransformer.checkOverloadedRestrictions(Symbols$Symbol, Symbols$Symbol):126->rgb(210,64,64)
RefChecks$RefCheckTransformer.checkOverloadedRestrictions(Symbols$Symbol, Symbols$Symbol):129->rgb(235,101,101)
RefChecks$RefCheckTransformer.checkOverride$1(SymbolPairs$SymbolPair, Symbols$Symbol, boolean, Types$Type, ListBuffer, LazyRef):410->rgb(207,61,61)
RefChecks$RefCheckTransformer.checkOverride$1(SymbolPairs$SymbolPair, Symbols$Symbol, boolean, Types$Type, ListBuffer, LazyRef):421->rgb(212,67,67)
RefChecks$RefCheckTransformer.checkOverride$1(SymbolPairs$SymbolPair, Symbols$Symbol, boolean, Types$Type, ListBuffer, LazyRef):425->rgb(205,57,57)
RefChecks$RefCheckTransformer.checkOverride$1(SymbolPairs$SymbolPair, Symbols$Symbol, boolean, Types$Type, ListBuffer, LazyRef):467->rgb(204,56,56)
RefChecks$RefCheckTransformer.checkOverride$1(SymbolPairs$SymbolPair, Symbols$Symbol, boolean, Types$Type, ListBuffer, LazyRef):470->rgb(200,50,50)
RefChecks$RefCheckTransformer.checkOverrideTerm$1(Symbols$Symbol, Types$Type, ListBuffer, SymbolPairs$SymbolPair, Symbols$Symbol, Symbols$Symbol, LazyRef):527->rgb(211,66,66)
RefChecks$RefCheckTransformer.checkOverrideTerm$1(Symbols$Symbol, Types$Type, ListBuffer, SymbolPairs$SymbolPair, Symbols$Symbol, Symbols$Symbol, LazyRef):528->rgb(220,80,80)
RefChecks$RefCheckTransformer.checkOverrideTypes$1(Symbols$Symbol, Types$Type, ListBuffer, SymbolPairs$SymbolPair, Symbols$Symbol, Symbols$Symbol, LazyRef):549->rgb(251,125,125)
RefChecks$RefCheckTransformer.checkSensible(Position, Trees$Tree, List):1132->rgb(241,111,111)
RefChecks$RefCheckTransformer.checkSensibleEquals(Position, Trees$Tree, Names$Name, Symbols$Symbol, Trees$Tree):1066->rgb(218,77,77)
RefChecks$RefCheckTransformer.checkSensibleEquals(Position, Trees$Tree, Names$Name, Symbols$Symbol, Trees$Tree):1097->rgb(239,107,107)
RefChecks$RefCheckTransformer.checkSensibleEquals(Position, Trees$Tree, Names$Name, Symbols$Symbol, Trees$Tree):1100->rgb(250,123,123)
RefChecks$RefCheckTransformer.checkSensibleEquals(Position, Trees$Tree, Names$Name, Symbols$Symbol, Trees$Tree):988->rgb(223,84,84)
RefChecks$RefCheckTransformer.checkTypeRef(Types$Type, Trees$Tree, boolean):1383->rgb(232,96,96)
RefChecks$RefCheckTransformer.classDecls$1(Symbols$Symbol, Symbols$Symbol):819->rgb(223,83,83)
RefChecks$RefCheckTransformer.enterSyms(List):930->rgb(252,126,126)
RefChecks$RefCheckTransformer.hasMatchingSym$1(Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):822->rgb(253,128,128)
RefChecks$RefCheckTransformer.haveSubclassRelationship$1(Symbols$Symbol, Symbols$Symbol):1008->rgb(205,58,58)
RefChecks$RefCheckTransformer.isBoolean$1(Symbols$Symbol):1017->rgb(238,106,106)
RefChecks$RefCheckTransformer.isClassTypeAccessible$1(Trees$Tree):1461->rgb(250,123,123)
RefChecks$RefCheckTransformer.isMaybeAnyValue$1(Symbols$Symbol, Set):1024->rgb(230,94,94)
RefChecks$RefCheckTransformer.isNonsenseValueClassCompare$1(Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):1029->rgb(231,95,95)
RefChecks$RefCheckTransformer.isOverrideAccessOK$1(Symbols$Symbol, Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):416->rgb(204,56,56)
RefChecks$RefCheckTransformer.isSignatureMatch$1(Symbols$Symbol, Symbols$Symbol, Symbols$Symbol, boolean, LazyRef):791->rgb(224,85,85)
RefChecks$RefCheckTransformer.isSimpleCaseApply(Trees$Tree):1468->rgb(241,110,110)
RefChecks$RefCheckTransformer.isSpecial$1(Symbols$Symbol, Set):1026->rgb(204,55,55)
RefChecks$RefCheckTransformer.matchingSyms$1(Symbols$Symbol, Symbols$Symbol, Symbols$Symbol, boolean, LazyRef):820->rgb(204,56,56)
RefChecks$RefCheckTransformer.memberList$1(Symbols$Symbol):615->rgb(210,65,65)
RefChecks$RefCheckTransformer.register$1(Types$Type, Symbols$Symbol, HashSet, List[]):864->rgb(245,116,116)
RefChecks$RefCheckTransformer.register$1(Types$Type, Symbols$Symbol, HashSet, List[]):868->rgb(225,86,86)
RefChecks$RefCheckTransformer.register$1(Types$Type, Symbols$Symbol, HashSet, List[]):873->rgb(240,108,108)
RefChecks$RefCheckTransformer.register$1(Types$Type, Symbols$Symbol, HashSet, List[]):875->rgb(234,100,100)
RefChecks$RefCheckTransformer.savingInPattern(Function0):114->rgb(226,89,89)
RefChecks$RefCheckTransformer.scala$tools$nsc$typechecker$RefChecks$RefCheckTransformer$$$outer():107->rgb(226,88,88)
RefChecks$RefCheckTransformer.super$transform(Trees$Tree):1745->rgb(248,120,120)
RefChecks$RefCheckTransformer.toConstructor(Position, Types$Type):1155->rgb(216,73,73)
RefChecks$RefCheckTransformer.toConstructor(Position, Types$Type):1159->rgb(247,119,119)
RefChecks$RefCheckTransformer.transform(Trees$Tree):1406->rgb(201,52,52)
RefChecks$RefCheckTransformer.transform(Trees$Tree):1590->rgb(245,116,116)
RefChecks$RefCheckTransformer.transform(Trees$Tree):1593->rgb(229,92,92)
RefChecks$RefCheckTransformer.transform(Trees$Tree):1598->rgb(237,104,104)
RefChecks$RefCheckTransformer.transform(Trees$Tree):1604->rgb(208,62,62)
RefChecks$RefCheckTransformer.transform(Trees$Tree):1608->rgb(219,78,78)
RefChecks$RefCheckTransformer.transform(Trees$Tree):1632->rgb(209,63,63)
RefChecks$RefCheckTransformer.transform(Trees$Tree):1633->rgb(250,123,123)
RefChecks$RefCheckTransformer.transform(Trees$Tree):1636->rgb(233,99,99)
RefChecks$RefCheckTransformer.transform(Trees$Tree):1637->rgb(213,69,69)
RefChecks$RefCheckTransformer.transform(Trees$Tree):1638->rgb(240,109,109)
RefChecks$RefCheckTransformer.transform(Trees$Tree):1679->rgb(236,102,102)
RefChecks$RefCheckTransformer.transform(Trees$Tree):1681->rgb(238,106,106)
RefChecks$RefCheckTransformer.transform(Trees$Tree):1686->rgb(254,129,129)
RefChecks$RefCheckTransformer.transform(Trees$Tree):1709->rgb(205,58,58)
RefChecks$RefCheckTransformer.transform(Trees$Tree):1718->rgb(218,77,77)
RefChecks$RefCheckTransformer.transform(Trees$Tree):1728->rgb(216,74,74)
RefChecks$RefCheckTransformer.transform(Trees$Tree):1730->rgb(212,68,68)
RefChecks$RefCheckTransformer.transform(Trees$Tree):1735->rgb(205,57,57)
RefChecks$RefCheckTransformer.transform(Trees$Tree):1747->rgb(215,72,72)
RefChecks$RefCheckTransformer.transform(Trees$Tree):1750->rgb(233,98,98)
RefChecks$RefCheckTransformer.transform(Trees$Tree):1757->rgb(216,74,74)
RefChecks$RefCheckTransformer.transform(Trees$Tree):1759->rgb(211,66,66)
RefChecks$RefCheckTransformer.transform(Trees$TreeApi):107->rgb(252,126,126)
RefChecks$RefCheckTransformer.transformApply(Trees$Apply):1507->rgb(227,90,90)
RefChecks$RefCheckTransformer.transformCaseApply(Trees$Tree):1482->rgb(200,50,50)
RefChecks$RefCheckTransformer.transformCaseApply(Trees$Tree):1488->rgb(233,98,98)
RefChecks$RefCheckTransformer.transformSelect(Trees$Select):1521->rgb(219,78,78)
RefChecks$RefCheckTransformer.transformSelect(Trees$Select):1537->rgb(242,111,111)
RefChecks$RefCheckTransformer.transformStat(Trees$Tree, int):1185->rgb(236,103,103)
RefChecks$RefCheckTransformer.transformStat(Trees$Tree, int):1196->rgb(242,112,112)
RefChecks$RefCheckTransformer.transformStat(Trees$Tree, int):1197->rgb(254,129,129)
RefChecks$RefCheckTransformer.transformStats(List, Symbols$Symbol):1166->rgb(223,83,83)
RefChecks$RefCheckTransformer.transformStats(List, Symbols$Symbol):1168->rgb(247,119,119)
RefChecks$RefCheckTransformer.transformStats(List, Symbols$SymbolApi):107->rgb(205,57,57)
RefChecks$RefCheckTransformer.validateBaseTypes(Symbols$Symbol):877->rgb(234,100,100)
RefChecks.overridesTypeInPrefix(Types$Type, Types$Type, Types$Type, boolean):83->rgb(236,103,103)
ReferenceWrapper.get$(ReferenceWrapper):17->rgb(210,65,65)
ReferenceWrapper.get():17->rgb(216,73,73)
Reporter$Severity.count():48->rgb(237,104,104)
Reporter.ERROR$lzycompute():53->rgb(253,128,128)
Reporter.ERROR():19->rgb(240,109,109)
Reporter.ERROR():53->rgb(211,67,67)
Reporter.INFO():19->rgb(225,87,87)
Reporter.count(Object):19->rgb(211,66,66)
Reporter.count(Reporter$Severity):55->rgb(235,100,100)
Reporter.echo(Position, String):82->rgb(232,97,97)
Reporter.hasErrors():37->rgb(202,53,53)
Reporter.hasErrors():97->rgb(234,100,100)
Reporting.inform$(Reporting, Position, String):65->rgb(226,88,88)
Reporting.inform$(Reporting, String):49->rgb(228,91,91)
Reporting.inform(Position, String):65->rgb(226,88,88)
Reporting.inform(String):49->rgb(235,101,101)
ResizableArray.$init$(ResizableArray):32->rgb(241,109,109)
ResizableArray.copyToArray$(ResizableArray, Object, int, int):75->rgb(224,85,85)
ResizableArray.copyToArray(Object, int, int):76->rgb(250,123,123)
ResizableArray.foreach$(ResizableArray, Function1):52->rgb(225,87,87)
ResizableArray.foreach(Function1):59->rgb(218,77,77)
ResizableArray.length$(ResizableArray):40->rgb(228,90,90)
ResizableArray.length():40->rgb(206,59,59)
RichInt$.max$extension(int, int):36->rgb(222,83,83)
ScalaLogic$TreesAndTypesDomain$Const$.$anonfun$unique$1(ScalaLogic$TreesAndTypesDomain$Const$, Types$Type, Function0):667->rgb(215,72,72)
ScalaLogic$TreesAndTypesDomain$Const$.unique(Types$Type, Function0):667->rgb(208,62,62)
ScalaLogic$TreesAndTypesDomain$TypeConst$.apply(Types$Type):731->rgb(235,101,101)
ScalaLogic$TreesAndTypesDomain$TypeConst$.apply(Types$Type):733->rgb(202,54,54)
ScalaLogic$TreesAndTypesDomain$Var$.<init>(ScalaLogic$TreesAndTypesDomain):446->rgb(207,61,61)
ScalaLogic$TreesAndTypesDomain$Var.$anonfun$domain$1(ScalaLogic$TreesAndTypesDomain$Var, List):477->rgb(232,97,97)
ScalaLogic$TreesAndTypesDomain$Var.$anonfun$domain$2(ScalaLogic$TreesAndTypesDomain$Var, Types$Type):478->rgb(220,79,79)
ScalaLogic$TreesAndTypesDomain$Var.$anonfun$domain$2(ScalaLogic$TreesAndTypesDomain$Var, Types$Type):479->rgb(244,114,114)
ScalaLogic$TreesAndTypesDomain$Var.$anonfun$implications$2(ScalaLogic$TreesAndTypesDomain$Var, HashSet, LazyRef, Logic$PropositionalLogic$Sym):616->rgb(248,121,121)
ScalaLogic$TreesAndTypesDomain$Var.$anonfun$implications$2(ScalaLogic$TreesAndTypesDomain$Var, HashSet, LazyRef, Logic$PropositionalLogic$Sym):624->rgb(233,99,99)
ScalaLogic$TreesAndTypesDomain$Var.$anonfun$implications$5$adapted(ScalaLogic$TreesAndTypesDomain$Var, Logic$PropositionalLogic$Sym, Logic$PropositionalLogic$Sym):616->rgb(208,61,61)
ScalaLogic$TreesAndTypesDomain$Var.$anonfun$implications$5(ScalaLogic$TreesAndTypesDomain$Var, Logic$PropositionalLogic$Sym, Logic$PropositionalLogic$Sym):616->rgb(209,63,63)
ScalaLogic$TreesAndTypesDomain$Var.domain$lzycompute():475->rgb(238,106,106)
ScalaLogic$TreesAndTypesDomain$Var.domain$lzycompute():476->rgb(230,94,94)
ScalaLogic$TreesAndTypesDomain$Var.domain():473->rgb(244,114,114)
ScalaLogic$TreesAndTypesDomain$Var.domainSyms$lzycompute():629->rgb(203,54,54)
ScalaLogic$TreesAndTypesDomain$Var.domainSyms():629->rgb(241,109,109)
ScalaLogic$TreesAndTypesDomain$Var.groupedDomains$lzycompute():500->rgb(201,52,52)
ScalaLogic$TreesAndTypesDomain$Var.groupedDomains():494->rgb(238,106,106)
ScalaLogic$TreesAndTypesDomain$Var.implications$lzycompute():611->rgb(231,95,95)
ScalaLogic$TreesAndTypesDomain$Var.implications():520->rgb(202,53,53)
ScalaLogic$TreesAndTypesDomain$Var.implies$1(ScalaLogic$TreesAndTypesDomain$Const, ScalaLogic$TreesAndTypesDomain$Const):534->rgb(215,72,72)
ScalaLogic$TreesAndTypesDomain$Var.registerEquality(ScalaLogic$TreesAndTypesDomain$Const):505->rgb(221,81,81)
ScalaLogic$TreesAndTypesDomain$Var.registerNull():465->rgb(224,86,86)
ScalaLogic$TreesAndTypesDomain.prepareNewAnalysis$(ScalaLogic$TreesAndTypesDomain):439->rgb(224,86,86)
ScalaLogic$TreesAndTypesDomain.prepareNewAnalysis():439->rgb(224,85,85)
ScalaPrimitives.addPrimitives(Symbols$Symbol, Names$Name, int):447->rgb(201,51,51)
ScalaPrimitives.init():333->rgb(228,91,91)
ScalaPrimitives.isPrimitive(Symbols$Symbol):526->rgb(206,59,59)
ScalaRunTime$._hashCode(Product):145->rgb(201,51,51)
ScalaRunTime$.array_length(Object):87->rgb(209,63,63)
ScalaSettings.$init$(ScalaSettings):312->rgb(235,101,101)
ScalaSettings.YstatisticsEnabled$(ScalaSettings):385->rgb(205,57,57)
ScalaSettings.YstatisticsEnabled():385->rgb(216,74,74)
ScalaSettings.isScala213$(ScalaSettings):91->rgb(217,75,75)
ScalaSettings.isScala213():91->rgb(218,76,76)
ScalaSettings.optEnabled(MutableSettings$MultiChoiceEnumeration$Choice):283->rgb(217,75,75)
ScalaSettings.optEnabled(MutableSettings$MultiChoiceEnumeration$Choice):284->rgb(235,101,101)
ScalaSettings.optInlinerEnabled$(ScalaSettings):298->rgb(210,64,64)
ScalaSettings.optInlinerEnabled():298->rgb(214,70,70)
ScalacBenchmark.compileImpl():29->rgb(202,53,53)
ScalacPatternExpanders$ScalacPatternExpander.applyMethodTypes$(ScalacPatternExpanders$ScalacPatternExpander, Types$Type):64->rgb(218,76,76)
ScalacPatternExpanders$ScalacPatternExpander.applyMethodTypes(Types$Type):67->rgb(201,52,52)
ScalacPatternExpanders$alignPatterns$.apply(Contexts$Context, Trees$Tree):159->rgb(247,119,119)
ScalacPatternExpanders$alignPatterns$.apply(Contexts$Context, Trees$Tree, List):136->rgb(224,85,85)
ScalacPatternExpanders$alignPatterns$.applyMethodTypes(Types$Type):97->rgb(205,58,58)
Scanners$Scanner.cbuf():199->rgb(212,67,67)
Scanners$Scanner.fetchDoubleQuote$1():540->rgb(207,60,60)
Scanners$Scanner.fetchStringPart():831->rgb(215,71,71)
Scanners$Scanner.fetchToken():457->rgb(234,99,99)
Scanners$Scanner.fetchToken():544->rgb(225,86,86)
Scanners$Scanner.finishNamed(int):215->rgb(238,105,105)
Scanners$Scanner.getIdentRest():693->rgb(244,114,114)
Scanners$Scanner.getIdentRest():698->rgb(213,69,69)
Scanners$Scanner.getLitChar():895->rgb(220,79,79)
Scanners$Scanner.getLitChars(char):906->rgb(241,110,110)
Scanners$Scanner.getStringLit():736->rgb(205,58,58)
Scanners$Scanner.getStringLit():738->rgb(230,93,93)
Scanners$Scanner.getStringPart(boolean):780->rgb(229,92,92)
Scanners$Scanner.lastOffset():127->rgb(207,60,60)
Scanners$Scanner.nextToken():337->rgb(226,88,88)
Scanners$Scanner.nextToken():394->rgb(238,105,105)
Scanners$Scanner.putChar(char):205->rgb(253,127,127)
Scanners$Scanner.setStrVal():234->rgb(238,106,106)
Scanners$Scanner.strVal_$eq(String):127->rgb(230,94,94)
Scanners$Scanner.token():127->rgb(203,54,54)
Scopes$Scope$$anon$3.<init>(Scopes$Scope, Names$Name):273->rgb(242,111,111)
Scopes$Scope.collect(PartialFunction, CanBuildFrom):51->rgb(228,91,91)
Scopes$Scope.createHash():143->rgb(223,84,84)
Scopes$Scope.directSize():100->rgb(228,91,91)
Scopes$Scope.elems():53->rgb(237,105,105)
Scopes$Scope.enter(Symbols$Symbol):124->rgb(214,70,70)
Scopes$Scope.enterAllInHash(Scopes$ScopeEntry, int):149->rgb(252,126,126)
Scopes$Scope.enterAllInHash(Scopes$ScopeEntry, int):150->rgb(251,124,124)
Scopes$Scope.enterEntry(Scopes$ScopeEntry):110->rgb(245,116,116)
Scopes$Scope.enterEntry(Scopes$ScopeEntry):111->rgb(205,58,58)
Scopes$Scope.enterEntry(Scopes$ScopeEntry):112->rgb(242,112,112)
Scopes$Scope.enterInHash(Scopes$ScopeEntry):116->rgb(213,69,69)
Scopes$Scope.enterInHash(Scopes$ScopeEntry):117->rgb(247,119,119)
Scopes$Scope.enterUnique(Symbols$Symbol):131->rgb(247,118,118)
Scopes$Scope.exists(Function1):51->rgb(219,78,78)
Scopes$Scope.find(Function1):51->rgb(219,77,77)
Scopes$Scope.flatMap(Function1, CanBuildFrom):51->rgb(219,77,77)
Scopes$Scope.forall(Function1):51->rgb(233,98,98)
Scopes$Scope.foreach(Function1):396->rgb(227,90,90)
Scopes$Scope.genericBuilder():51->rgb(213,69,69)
Scopes$Scope.lookup(Names$Name):232->rgb(211,66,66)
Scopes$Scope.lookupAllEntries(Names$Name):272->rgb(221,81,81)
Scopes$Scope.lookupEntry(Names$Name):302->rgb(224,86,86)
Scopes$Scope.lookupEntry(Names$Name):303->rgb(218,77,77)
Scopes$Scope.lookupEntry(Names$Name):304->rgb(234,100,100)
Scopes$Scope.lookupEntry(Names$Name):307->rgb(253,128,128)
Scopes$Scope.lookupEntry(Names$Name):308->rgb(218,76,76)
Scopes$Scope.lookupNextEntry(Scopes$ScopeEntry):323->rgb(223,84,84)
Scopes$Scope.lookupNextEntry(Scopes$ScopeEntry):325->rgb(244,115,115)
Scopes$Scope.lookupUnshadowedEntries(Names$Name):279->rgb(227,89,89)
Scopes$Scope.lookupUnshadowedEntries(Names$Name):281->rgb(250,123,123)
Scopes$Scope.newBuilder():51->rgb(240,109,109)
Scopes$Scope.partition(Function1):51->rgb(207,60,60)
Scopes$Scope.scala$reflect$internal$Scopes$$hashtable():61->rgb(243,113,113)
Scopes$Scope.size():91->rgb(251,125,125)
Scopes$Scope.to(CanBuildFrom):51->rgb(227,90,90)
Scopes$Scope.toList():370->rgb(253,128,128)
Scopes$Scope.toList():373->rgb(247,119,119)
Scopes$Scope.toSet():51->rgb(242,111,111)
Scopes$Scope.unlink(Scopes$ScopeEntry):195->rgb(208,61,61)
Scopes$Scope.unlink(Symbols$Symbol):215->rgb(253,127,127)
Scopes$ScopeEntry.hashCode():32->rgb(223,83,83)
Scopes$ScopeEntry.next():29->rgb(208,63,63)
Scopes$ScopeEntry.sym():22->rgb(237,103,103)
Scopes$ScopeEntry.tail():25->rgb(225,87,87)
Scopes.newNestedScope$(Scopes, Scopes$Scope):454->rgb(217,74,74)
Scopes.newNestedScope(Scopes$Scope):455->rgb(252,125,125)
Scopes.newNestedScope(Scopes$Scope):459->rgb(220,79,79)
Scopes.newScope$(Scopes):422->rgb(201,52,52)
Scopes.newScope():422->rgb(226,88,88)
Scopes.newScopeWith$(Scopes, Seq):464->rgb(253,128,128)
Scopes.newScopeWith(Seq):465->rgb(251,124,124)
Scopes.scala$reflect$internal$Scopes$$newScopeEntry(Symbols$Symbol, Scopes$Scope):37->rgb(251,124,124)
Scopes.scopeTransform$(Scopes, Symbols$Symbol, Function0):476->rgb(207,60,60)
Scopes.scopeTransform(Symbols$Symbol, Function0):476->rgb(203,54,54)
SeqLike$CombinationsItr.$anonfun$init$4(HashMap, Object):261->rgb(208,61,61)
SeqLike$CombinationsItr.<init>(SeqLike, int):210->rgb(251,125,125)
SeqLike$CombinationsItr.<init>(SeqLike, int):211->rgb(220,80,80)
SeqLike$CombinationsItr.init():261->rgb(253,128,128)
SeqLike$CombinationsItr.next():220->rgb(223,83,83)
SeqLike$CombinationsItr.next():230->rgb(253,128,128)
SeqLike.$colon$plus$(SeqLike, Object, CanBuildFrom):559->rgb(249,121,121)
SeqLike.$colon$plus(Object, CanBuildFrom):561->rgb(222,82,82)
SeqLike.$plus$colon$(SeqLike, Object, CanBuildFrom):552->rgb(241,110,110)
SeqLike.$plus$colon(Object, CanBuildFrom):555->rgb(203,55,55)
SeqLike.combinations$(SeqLike, int):154->rgb(214,70,70)
SeqLike.combinations(int):156->rgb(248,121,121)
SeqLike.contains$(SeqLike, Object):405->rgb(207,60,60)
SeqLike.contains(Object):405->rgb(217,76,76)
SeqLike.distinct$(SeqLike):506->rgb(248,120,120)
SeqLike.distinct():508->rgb(214,70,70)
SeqLike.size$(SeqLike):105->rgb(252,126,126)
SeqLike.size():105->rgb(253,127,127)
SeqLike.sortBy$(SeqLike, Function1, Ordering):627->rgb(248,120,120)
SeqLike.sortBy(Function1, Ordering):627->rgb(208,62,62)
SeqLike.sortWith$(SeqLike, Function2):605->rgb(218,77,77)
SeqLike.sortWith(Function2):605->rgb(244,115,115)
SeqLike.sorted$(SeqLike, Ordering):640->rgb(203,55,55)
SeqLike.sorted(Ordering):643->rgb(203,54,54)
SeqLike.sorted(Ordering):652->rgb(219,78,78)
Set$.empty():42->rgb(222,82,82)
Set$EmptySet$.empty():69->rgb(214,71,71)
Set$EmptySet$.iterator():74->rgb(200,50,50)
Set$Set1.$minus(Object):82->rgb(240,109,109)
Set$Set1.$minus(Object):90->rgb(230,94,94)
Set$Set1.find(Function1):104->rgb(206,58,58)
Set$Set1.foreach(Function1):95->rgb(241,110,110)
Set$Set2.$plus(Object):116->rgb(231,95,95)
Set$Set2.$plus(Object):122->rgb(216,73,73)
Set$Set2.foreach(Function1):130->rgb(215,72,72)
Set$Set3.<init>(Object, Object, Object):152->rgb(223,84,84)
Set$Set3.foreach(Function1):167->rgb(214,71,71)
Set$Set4.$plus(Object):190->rgb(223,83,83)
Set$Set4.$plus(Object):196->rgb(252,126,126)
Set$Set4.foreach(Function1):206->rgb(206,58,58)
Set.apply(Object):20->rgb(200,50,50)
Set.contains(Object):23->rgb(230,93,93)
SetBuilder.$plus$eq(Object):20->rgb(227,89,89)
SetBuilder.$plus$eq(Object):24->rgb(221,81,81)
SetBuilder.$plus$plus$eq(TraversableOnce):20->rgb(245,116,116)
SetLike.diff$(SetLike, GenSet):180->rgb(233,99,99)
SetLike.diff(GenSet):180->rgb(222,82,82)
SetLike.isEmpty$(SetLike):164->rgb(208,62,62)
SetLike.isEmpty():164->rgb(233,99,99)
SetLike.map$(SetLike, Function1, CanBuildFrom):101->rgb(243,113,113)
SetLike.map(Function1, CanBuildFrom):101->rgb(216,74,74)
SetLike.newBuilder$(SetLike):71->rgb(220,79,79)
SetLike.newBuilder$(SetLike):76->rgb(254,129,129)
SetLike.newBuilder():71->rgb(217,75,75)
SetLike.newBuilder():76->rgb(237,104,104)
SetLike.toSeq$(SetLike):81->rgb(231,95,95)
SetLike.toSeq():86->rgb(236,103,103)
SetLike.update$(SetLike, Object, boolean):121->rgb(201,52,52)
SetLike.update(Object, boolean):122->rgb(243,113,113)
Settings.<init>(Function1):12->rgb(254,128,128)
Solving$CNF$SymbolMapping.<init>(Solving$CNF, Set):53->rgb(231,96,96)
Solving$CNF$SymbolMapping.<init>(Solving$CNF, Set):55->rgb(204,56,56)
Solving$CNF$TransformToCnf.apply(Logic$PropositionalLogic$Prop):265->rgb(202,54,54)
Solving$CNF$TransformToCnf.atMostOne$1(List):255->rgb(207,61,61)
Solving$CNF$TransformToCnf.convert$1(Logic$PropositionalLogic$Prop):168->rgb(206,60,60)
Solving$CNF.$anonfun$eqFreePropToSolvable$3(Solving$CNF$AlreadyInCNF, Solving$CNF$TransformToCnf, Logic$PropositionalLogic$Prop):364->rgb(253,128,128)
Solving$CNF.cnfFor$1(Logic$PropositionalLogic$Prop, Solving$CNF$AlreadyInCNF, Solving$CNF$TransformToCnf):356->rgb(232,97,97)
Solving$CNF.doesFormulaExceedSize$1(Logic$PropositionalLogic$Prop):325->rgb(206,58,58)
Solving$CNF.eqFreePropToSolvable$(Solving$CNF, Logic$PropositionalLogic$Prop):317->rgb(214,70,70)
Solving$CNF.eqFreePropToSolvable(Logic$PropositionalLogic$Prop):338->rgb(246,117,117)
Solving$CNF.eqFreePropToSolvable(Logic$PropositionalLogic$Prop):339->rgb(232,97,97)
Solving$CNF.eqFreePropToSolvable(Logic$PropositionalLogic$Prop):345->rgb(208,61,61)
Solving$CNF.eqFreePropToSolvable(Logic$PropositionalLogic$Prop):364->rgb(232,97,97)
Solving$Solver.findModelFor$(Solving$Solver, Solving$CNF$Solvable):466->rgb(207,61,61)
Solving$Solver.findModelFor(Solving$CNF$Solvable):467->rgb(200,50,50)
Solving$Solver.findTseitinModelFor$(Solving$Solver, Set[]):470->rgb(203,54,54)
Solving$Solver.findTseitinModelFor(Set[]):491->rgb(213,69,69)
Solving$Solver.scala$tools$nsc$transform$patmat$Solving$Solver$$projectToModel(Set, Map):519->rgb(245,116,116)
Some.get():335->rgb(210,65,65)
Some.value():333->rgb(204,56,56)
SpecializeTypes$$anon$2$CollectMethodBodies.traverse(Trees$Tree):1471->rgb(206,59,59)
SpecializeTypes$$anon$2$CollectMethodBodies.traverse(Trees$Tree):1482->rgb(212,67,67)
SpecializeTypes$$anon$2$CollectMethodBodies.traverse(Trees$TreeApi):1466->rgb(228,90,90)
SpecializeTypes$$anon$2.$anonfun$implSpecClasses$1(SpecializeTypes$$anon$2, Trees$Tree):1956->rgb(232,97,97)
SpecializeTypes$$anon$2.$anonfun$implSpecClasses$1(SpecializeTypes$$anon$2, Trees$Tree):1957->rgb(239,107,107)
SpecializeTypes$$anon$2.$anonfun$implSpecClasses$2$adapted(Tuple2):1957->rgb(250,123,123)
SpecializeTypes$$anon$2.$anonfun$implSpecClasses$2(Tuple2):1957->rgb(228,91,91)
SpecializeTypes$$anon$2.$anonfun$transform$3(SpecializeTypes$$anon$2, Trees$Tree):1514->rgb(238,106,106)
SpecializeTypes$$anon$2.$anonfun$transform1$21(SpecializeTypes$$anon$2, Trees$Tree, Symbols$Symbol, Trees$RefTree, List):1670->rgb(235,101,101)
SpecializeTypes$$anon$2.$anonfun$transform1$21(SpecializeTypes$$anon$2, Trees$Tree, Symbols$Symbol, Trees$RefTree, List):1671->rgb(236,103,103)
SpecializeTypes$$anon$2.$anonfun$transform1$25(SpecializeTypes$$anon$2, List, List):1685->rgb(206,59,59)
SpecializeTypes$$anon$2.<init>(SpecializeTypes, CompilationUnits$CompilationUnit):1457->rgb(209,64,64)
SpecializeTypes$$anon$2.copySelect$1(Trees$Tree, Names$Name, Trees$Tree):1554->rgb(208,62,62)
SpecializeTypes$$anon$2.expandInnerNormalizedMembers(Trees$Tree):1813->rgb(248,121,121)
SpecializeTypes$$anon$2.implSpecClasses(List):1954->rgb(226,89,89)
SpecializeTypes$$anon$2.makeSpecializedMembers(Symbols$Symbol):1906->rgb(228,91,91)
SpecializeTypes$$anon$2.matchingSymbolInPrefix$1(Types$Type, Symbols$Symbol, Map):1546->rgb(233,98,98)
SpecializeTypes$$anon$2.specSym$1(Trees$Tree, Trees$Tree, Symbols$Symbol):1542->rgb(238,106,106)
SpecializeTypes$$anon$2.transform(Trees$Tree):1506->rgb(235,101,101)
SpecializeTypes$$anon$2.transform(Trees$TreeApi):1457->rgb(251,125,125)
SpecializeTypes$$anon$2.transform1(Trees$Tree):1517->rgb(218,77,77)
SpecializeTypes$$anon$2.transform1(Trees$Tree):1597->rgb(226,87,87)
SpecializeTypes$$anon$2.transform1(Trees$Tree):1599->rgb(221,81,81)
SpecializeTypes$$anon$2.transform1(Trees$Tree):1610->rgb(220,79,79)
SpecializeTypes$$anon$2.transform1(Trees$Tree):1612->rgb(212,68,68)
SpecializeTypes$$anon$2.transform1(Trees$Tree):1627->rgb(218,77,77)
SpecializeTypes$$anon$2.transform1(Trees$Tree):1628->rgb(210,65,65)
SpecializeTypes$$anon$2.transform1(Trees$Tree):1632->rgb(211,66,66)
SpecializeTypes$$anon$2.transform1(Trees$Tree):1659->rgb(211,66,66)
SpecializeTypes$$anon$2.transform1(Trees$Tree):1665->rgb(218,76,76)
SpecializeTypes$$anon$2.transform1(Trees$Tree):1669->rgb(238,106,106)
SpecializeTypes$$anon$2.transform1(Trees$Tree):1687->rgb(233,98,98)
SpecializeTypes$$anon$2.transform1(Trees$Tree):1689->rgb(237,104,104)
SpecializeTypes$$anon$2.transform1(Trees$Tree):1777->rgb(203,55,55)
SpecializeTypes$$anon$2.transform1(Trees$Tree):1778->rgb(248,121,121)
SpecializeTypes$$anon$2.transform1(Trees$Tree):1798->rgb(232,97,97)
SpecializeTypes$$anon$2.transformNew$1(Trees$Tree, Trees$Tree, List):1602->rgb(207,60,60)
SpecializeTypes$$anon$2.transformNew$1(Trees$Tree, Trees$Tree, List):1608->rgb(230,95,95)
SpecializeTypes$$anon$2.transformSelect$1(Trees$Select, Trees$Tree, Symbols$Symbol):1551->rgb(242,112,112)
SpecializeTypes$$anon$2.transformSelect$1(Trees$Select, Trees$Tree, Symbols$Symbol):1553->rgb(204,56,56)
SpecializeTypes$$anon$2.transformSelect$1(Trees$Select, Trees$Tree, Symbols$Symbol):1559->rgb(253,127,127)
SpecializeTypes$$anon$2.transformSelect$1(Trees$Select, Trees$Tree, Symbols$Symbol):1560->rgb(243,112,112)
SpecializeTypes$$anon$2.transformSelect$1(Trees$Select, Trees$Tree, Symbols$Symbol):1562->rgb(204,56,56)
SpecializeTypes$$anon$2.transformSelect$1(Trees$Select, Trees$Tree, Symbols$Symbol):1565->rgb(231,95,95)
SpecializeTypes$$anon$2.transformSelect$1(Trees$Select, Trees$Tree, Symbols$Symbol):1569->rgb(200,51,51)
SpecializeTypes$$anon$2.transformTemplate$1(Trees$Tree, Symbols$Symbol, List, Trees$ValDef, List):1676->rgb(230,94,94)
SpecializeTypes$$anon$2.transformTemplate$1(Trees$Tree, Symbols$Symbol, List, Trees$ValDef, List):1678->rgb(214,71,71)
SpecializeTypes$$anon$2.transformTemplate$1(Trees$Tree, Symbols$Symbol, List, Trees$ValDef, List):1685->rgb(211,66,66)
SpecializeTypes$$anon$3.$anonfun$apply$1(SpecializeTypes$$anon$3, Types$Type, Symbols$Symbol):329->rgb(216,74,74)
SpecializeTypes$$anon$3.apply(Object):322->rgb(245,115,115)
SpecializeTypes$$anon$3.apply(Types$Type):328->rgb(230,94,94)
SpecializeTypes$$anon$3.apply(Types$Type):332->rgb(205,57,57)
SpecializeTypes$$anon$3.apply(Types$Type):333->rgb(246,117,117)
SpecializeTypes$NormalizedMember.$anonfun$typeBoundsIn$1(SpecializeTypes$NormalizedMember, Map, Symbols$Symbol):279->rgb(229,92,92)
SpecializeTypes$NormalizedMember.typeBoundsIn(Map):278->rgb(237,105,105)
SpecializeTypes$SpecializationPhase.$anonfun$run$1(SpecializeTypes$SpecializationPhase):204->rgb(207,60,60)
SpecializeTypes$SpecializationPhase.$anonfun$run$1(SpecializeTypes$SpecializationPhase):205->rgb(226,88,88)
SpecializeTypes$SpecializationPhase.$anonfun$run$2(Symbols$ClassSymbol):204->rgb(249,122,122)
SpecializeTypes$SpecializationPhase.$anonfun$run$3(Symbols$ClassSymbol):205->rgb(245,116,116)
SpecializeTypes$SpecializationPhase.run():202->rgb(223,84,84)
SpecializeTypes$SpecializationPhase.run():203->rgb(220,79,79)
SpecializeTypes$SpecializationTransformer.$anonfun$transform$5(SpecializeTypes$SpecializationTransformer, Trees$Tree):2044->rgb(229,92,92)
SpecializeTypes$SpecializationTransformer.transform(Trees$Tree):2044->rgb(247,118,118)
SpecializeTypes$SpecializationTransformer.transform(Trees$TreeApi):2040->rgb(253,127,127)
SpecializeTypes$TypeEnv$.$anonfun$isValid$1$adapted(SpecializeTypes$TypeEnv$, Symbols$Symbol, Tuple2):176->rgb(214,70,70)
SpecializeTypes$TypeEnv$.$anonfun$isValid$1(SpecializeTypes$TypeEnv$, Symbols$Symbol, Tuple2):177->rgb(254,129,129)
SpecializeTypes$TypeEnv$.fromSpecialization(Symbols$Symbol, List):150->rgb(254,128,128)
SpecializeTypes$TypeEnv$.isValid(Map, Symbols$Symbol):176->rgb(202,53,53)
SpecializeTypes.$anonfun$concreteTypes$1(SpecializeTypes, Symbols$Symbol):410->rgb(205,57,57)
SpecializeTypes.$anonfun$hasUnspecializableAnnotation$1$adapted(SpecializeTypes, Symbols$Symbol):454->rgb(229,92,92)
SpecializeTypes.$anonfun$hasUnspecializableAnnotation$1(SpecializeTypes, Symbols$Symbol):454->rgb(210,64,64)
SpecializeTypes.$anonfun$isSpecializedAnyRefSubtype$1(SpecializeTypes, Symbols$Symbol):139->rgb(217,74,74)
SpecializeTypes.$anonfun$mapAnyRefsInSpecSym$1(SpecializeTypes, Symbols$Symbol, Symbols$Symbol, Tuple2):571->rgb(230,94,94)
SpecializeTypes.$anonfun$normalizeMember$1(Symbols$Symbol):889->rgb(240,109,109)
SpecializeTypes.$anonfun$normalizeMember$4$adapted(SpecializeTypes, Symbols$Symbol, Map):912->rgb(227,90,90)
SpecializeTypes.$anonfun$normalizeMember$4(SpecializeTypes, Symbols$Symbol, Map):912->rgb(203,55,55)
SpecializeTypes.$anonfun$normalizeMember$5(SpecializeTypes, Symbols$Symbol, Symbols$Symbol, Map, Map):920->rgb(218,77,77)
SpecializeTypes.$anonfun$normalizeMember$5(SpecializeTypes, Symbols$Symbol, Symbols$Symbol, Map, Map):937->rgb(227,90,90)
SpecializeTypes.$anonfun$satisfiable$1$adapted(SpecializeTypes, Map, boolean, Tuple2):1300->rgb(216,74,74)
SpecializeTypes.$anonfun$satisfiable$1(SpecializeTypes, Map, boolean, Tuple2):1301->rgb(247,118,118)
SpecializeTypes.$anonfun$specialOverrides$4(SpecializeTypes, Symbols$Symbol, Object, Symbols$Symbol):1056->rgb(217,75,75)
SpecializeTypes.$anonfun$specialOverrides$9(SpecializeTypes, Symbols$Symbol, Symbols$Symbol):1066->rgb(223,84,84)
SpecializeTypes.$anonfun$specializations$5(SpecializeTypes, Symbols$Symbol):433->rgb(218,76,76)
SpecializeTypes.$anonfun$specializations$8(List, List):433->rgb(215,72,72)
SpecializeTypes.$anonfun$specializeClass$14$adapted(SpecializeTypes, Map, Map, Map, Symbols$Symbol):724->rgb(230,94,94)
SpecializeTypes.$anonfun$specializeClass$14(SpecializeTypes, Map, Map, Map, Symbols$Symbol):724->rgb(229,93,93)
SpecializeTypes.$anonfun$specializeClass$15(SpecializeTypes, Symbols$Symbol, Symbols$ClassSymbol, Map, Scopes$Scope, ObjectRef, ObjectRef, Map, Symbols$Symbol):611->rgb(233,98,98)
SpecializeTypes.$anonfun$specializeClass$15(SpecializeTypes, Symbols$Symbol, Symbols$ClassSymbol, Map, Scopes$Scope, ObjectRef, ObjectRef, Map, Symbols$Symbol):762->rgb(242,111,111)
SpecializeTypes.$anonfun$specializeClass$15(SpecializeTypes, Symbols$Symbol, Symbols$ClassSymbol, Map, Scopes$Scope, ObjectRef, ObjectRef, Map, Symbols$Symbol):780->rgb(239,107,107)
SpecializeTypes.$anonfun$specializeClass$15(SpecializeTypes, Symbols$Symbol, Symbols$ClassSymbol, Map, Scopes$Scope, ObjectRef, ObjectRef, Map, Symbols$Symbol):785->rgb(231,95,95)
SpecializeTypes.$anonfun$specializeClass$3(SpecializeTypes, Symbols$Symbol, ObjectRef, Types$Type):645->rgb(247,119,119)
SpecializeTypes.$anonfun$specializeClass$30(SpecializeTypes, Symbols$Symbol, Map, Symbols$Symbol):842->rgb(253,128,128)
SpecializeTypes.$anonfun$specializeClass$31(SpecializeTypes, Symbols$Symbol, Map, Symbols$Symbol, Symbols$Symbol):843->rgb(213,70,70)
SpecializeTypes.$anonfun$specializeClass$31(SpecializeTypes, Symbols$Symbol, Map, Symbols$Symbol, Symbols$Symbol):849->rgb(214,70,70)
SpecializeTypes.$anonfun$specializeClass$31(SpecializeTypes, Symbols$Symbol, Map, Symbols$Symbol, Symbols$Symbol):851->rgb(252,126,126)
SpecializeTypes.$anonfun$specializeClass$32$adapted(SpecializeTypes, Map):860->rgb(204,56,56)
SpecializeTypes.$anonfun$specializeClass$32(SpecializeTypes, Map):860->rgb(223,83,83)
SpecializeTypes.$anonfun$specializeClass$33(SpecializeTypes, Symbols$Symbol, Map, List, Map):863->rgb(205,58,58)
SpecializeTypes.$anonfun$specializeClass$33(SpecializeTypes, Symbols$Symbol, Map, List, Map):864->rgb(220,79,79)
SpecializeTypes.$anonfun$specializeClass$33(SpecializeTypes, Symbols$Symbol, Map, List, Map):869->rgb(245,116,116)
SpecializeTypes.$anonfun$specializeClass$4(SpecializeTypes, Types$Type):645->rgb(200,51,51)
SpecializeTypes.$anonfun$specializeMember$1(SpecializeTypes, Symbols$Symbol, Symbols$Symbol, Map, Map):970->rgb(229,92,92)
SpecializeTypes.$anonfun$specializedFunctionName$1(SpecializeTypes, Symbols$Symbol, List):343->rgb(210,65,65)
SpecializeTypes.$anonfun$specializedName$4(SpecializeTypes, Types$Type):387->rgb(202,53,53)
SpecializeTypes.$anonfun$specializedOn$3(Symbols$ClassSymbol, Types$Type):107->rgb(213,70,70)
SpecializeTypes.$anonfun$specializedOverload$2(SpecializeTypes, Symbols$Symbol, Symbols$Symbol, Map, Types$Type):1008->rgb(201,51,51)
SpecializeTypes.$anonfun$specializedParams$1$adapted(Symbols$Symbol):299->rgb(205,58,58)
SpecializeTypes.$anonfun$specializedParams$1(Symbols$Symbol):299->rgb(216,74,74)
SpecializeTypes.$anonfun$specializedTypeVarsBuffer$1(SpecializeTypes, Symbols$Symbol, Buffer):485->rgb(249,121,121)
SpecializeTypes.$anonfun$specializedTypeVarsBuffer$3(SpecializeTypes, Buffer, Symbols$Symbol, List):504->rgb(245,116,116)
SpecializeTypes.$anonfun$specializedTypeVarsBuffer$4(SpecializeTypes, Buffer, Symbols$Symbol, Types$Type):505->rgb(242,111,111)
SpecializeTypes.$anonfun$specializedTypeVarsBuffer$5(SpecializeTypes, Buffer, Symbols$Symbol):509->rgb(249,122,122)
SpecializeTypes.$anonfun$specializedTypeVarsBuffer$6(SpecializeTypes, Buffer, Symbols$Symbol):512->rgb(252,126,126)
SpecializeTypes.$anonfun$survivingArgs$2$adapted(SpecializeTypes, Tuple2):306->rgb(230,93,93)
SpecializeTypes.$anonfun$survivingArgs$2(SpecializeTypes, Tuple2):306->rgb(217,75,75)
SpecializeTypes.$anonfun$transformInfo$1(List):1258->rgb(231,95,95)
SpecializeTypes.$anonfun$transformInfo$2(Types$Type):1258->rgb(215,72,72)
SpecializeTypes.$anonfun$unify$11(SpecializeTypes, List, List, boolean, Map, Tuple2):1191->rgb(202,53,53)
SpecializeTypes.addConcreteSpecMethod(Symbols$Symbol):2032->rgb(234,100,100)
SpecializeTypes.concreteTypes(Symbols$Symbol):410->rgb(239,107,107)
SpecializeTypes.concreteTypes(Symbols$Symbol):412->rgb(245,116,116)
SpecializeTypes.enterMember$1(Symbols$Symbol, Symbols$Symbol, Symbols$ClassSymbol, Scopes$Scope, ObjectRef, ObjectRef, Map):686->rgb(249,122,122)
SpecializeTypes.forwardToOverload$1(Symbols$Symbol, Symbols$Symbol, Symbols$ClassSymbol, Map, Scopes$Scope, ObjectRef, ObjectRef, Map):711->rgb(230,94,94)
SpecializeTypes.hasUnspecializableAnnotation(Symbols$Symbol):454->rgb(209,63,63)
SpecializeTypes.isNormalizedMember(Symbols$Symbol):456->rgb(252,126,126)
SpecializeTypes.mapAnyRefsInSpecSym(Map, Symbols$Symbol, Symbols$Symbol):570->rgb(231,96,96)
SpecializeTypes.matches$1(Types$Type, Types$Type, Map):1294->rgb(220,79,79)
SpecializeTypes.matches$1(Types$Type, Types$Type, Map):1295->rgb(214,71,71)
SpecializeTypes.needsSpecialOverride$1(Symbols$Symbol):1043->rgb(200,50,50)
SpecializeTypes.needsSpecialOverride$1(Symbols$Symbol):1044->rgb(211,66,66)
SpecializeTypes.needsSpecialization(Map, Symbols$Symbol):446->rgb(215,73,73)
SpecializeTypes.needsSpecialization(Map, Symbols$Symbol):447->rgb(225,86,86)
SpecializeTypes.needsSpecialization(Map, Symbols$Symbol):449->rgb(242,111,111)
SpecializeTypes.newOverload(Symbols$Symbol, Symbols$Symbol, Map):191->rgb(241,109,109)
SpecializeTypes.satisfiable(Map):1290->rgb(236,103,103)
SpecializeTypes.satisfiable(Map, boolean):1300->rgb(226,87,87)
SpecializeTypes.scala$tools$nsc$transform$SpecializeTypes$$hasNewParents(Trees$Tree):128->rgb(243,113,113)
SpecializeTypes.scala$tools$nsc$transform$SpecializeTypes$$isSpecializedAnyRefSubtype(Types$Type, Symbols$Symbol):139->rgb(232,97,97)
SpecializeTypes.scala$tools$nsc$transform$SpecializeTypes$$isSpecializedAnyRefSubtype(Types$Type, Symbols$Symbol):141->rgb(244,114,114)
SpecializeTypes.scala$tools$nsc$transform$SpecializeTypes$$normalizeMember(Symbols$Symbol, Symbols$Symbol, Map):889->rgb(244,114,114)
SpecializeTypes.scala$tools$nsc$transform$SpecializeTypes$$normalizeMember(Symbols$Symbol, Symbols$Symbol, Map):896->rgb(222,82,82)
SpecializeTypes.scala$tools$nsc$transform$SpecializeTypes$$normalizeMember(Symbols$Symbol, Symbols$Symbol, Map):897->rgb(217,75,75)
SpecializeTypes.scala$tools$nsc$transform$SpecializeTypes$$normalizeMember(Symbols$Symbol, Symbols$Symbol, Map):912->rgb(229,92,92)
SpecializeTypes.scala$tools$nsc$transform$SpecializeTypes$$specializedName(Symbols$Symbol, Map):361->rgb(205,58,58)
SpecializeTypes.scala$tools$nsc$transform$SpecializeTypes$$specializedName(Symbols$Symbol, Map):363->rgb(219,78,78)
SpecializeTypes.scala$tools$nsc$transform$SpecializeTypes$$subst(Map, Types$Type):1223->rgb(229,92,92)
SpecializeTypes.scala$tools$nsc$transform$SpecializeTypes$$unify(Types$Type, Types$Type, Map, boolean, boolean):1143->rgb(227,89,89)
SpecializeTypes.scala$tools$nsc$transform$SpecializeTypes$$unify(Types$Type, Types$Type, Map, boolean, boolean):1164->rgb(224,85,85)
SpecializeTypes.specialOverrides(Symbols$Symbol):1065->rgb(218,77,77)
SpecializeTypes.specializations(List):433->rgb(251,124,124)
SpecializeTypes.specializeCalls(CompilationUnits$CompilationUnit):1457->rgb(239,107,107)
SpecializeTypes.specializeClass(Symbols$Symbol, Map):840->rgb(252,127,127)
SpecializeTypes.specializeClass(Symbols$Symbol, Map):860->rgb(210,64,64)
SpecializeTypes.specializeClass(Symbols$Symbol, Map):862->rgb(220,80,80)
SpecializeTypes.specializeMember(Symbols$Symbol, Symbols$Symbol, Map, List):984->rgb(245,115,115)
SpecializeTypes.specializeMember(Symbols$Symbol, Symbols$Symbol, Map, List):987->rgb(251,125,125)
SpecializeTypes.specializeMember(Symbols$Symbol, Symbols$Symbol, Map, List):993->rgb(249,122,122)
SpecializeTypes.specializeMember(Symbols$Symbol, Symbols$Symbol, Map, List):994->rgb(234,100,100)
SpecializeTypes.specializeMember(Symbols$Symbol, Symbols$Symbol, Map, List):996->rgb(236,102,102)
SpecializeTypes.specializeOn$1(List, Symbols$Symbol, Symbols$Symbol, Map):963->rgb(237,104,104)
SpecializeTypes.specializedClass$1(Map, List, Symbols$Symbol, Map):605->rgb(200,51,51)
SpecializeTypes.specializedClass$1(Map, List, Symbols$Symbol, Map):613->rgb(207,60,60)
SpecializeTypes.specializedClass$1(Map, List, Symbols$Symbol, Map):618->rgb(238,106,106)
SpecializeTypes.specializedClass$1(Map, List, Symbols$Symbol, Map):659->rgb(241,109,109)
SpecializeTypes.specializedClass$1(Map, List, Symbols$Symbol, Map):724->rgb(240,108,108)
SpecializeTypes.specializedFunctionName(Symbols$Symbol, List):340->rgb(228,91,91)
SpecializeTypes.specializedName(Names$Name, List, List):379->rgb(226,88,88)
SpecializeTypes.specializedName(Names$Name, List, List):386->rgb(242,111,111)
SpecializeTypes.specializedName(Names$Name, List, List):387->rgb(213,68,68)
SpecializeTypes.specializedName(Names$Name, Set, Map):370->rgb(232,97,97)
SpecializeTypes.specializedOn(Symbols$Symbol):106->rgb(251,124,124)
SpecializeTypes.specializedOverload(Symbols$Symbol, Symbols$Symbol, Map, Symbols$Symbol):1006->rgb(252,125,125)
SpecializeTypes.specializedOverload(Symbols$Symbol, Symbols$Symbol, Map, Symbols$Symbol):1007->rgb(212,68,68)
SpecializeTypes.specializedOverload(Symbols$Symbol, Symbols$Symbol, Map, Symbols$Symbol):1008->rgb(245,115,115)
SpecializeTypes.specializedParams(Symbols$Symbol):299->rgb(211,67,67)
SpecializeTypes.specializedParents$1(List, Symbols$Symbol):644->rgb(243,112,112)
SpecializeTypes.specializedTypeVars(Symbols$Symbol):467->rgb(243,112,112)
SpecializeTypes.specializedTypeVars(Types$Type):479->rgb(241,109,109)
SpecializeTypes.specializedTypeVars(Types$Type):480->rgb(248,120,120)
SpecializeTypes.specializedTypeVarsBuffer(Symbols$Symbol, Buffer):485->rgb(227,89,89)
SpecializeTypes.specializedTypeVarsBuffer(Types$Type, Buffer):495->rgb(203,55,55)
SpecializeTypes.specializedTypeVarsBuffer(Types$Type, Buffer):496->rgb(211,66,66)
SpecializeTypes.specializedTypeVarsBuffer(Types$Type, Buffer):497->rgb(244,114,114)
SpecializeTypes.specializedTypeVarsBuffer(Types$Type, Buffer):498->rgb(221,80,80)
SpecializeTypes.specializedTypeVarsBuffer(Types$Type, Buffer):500->rgb(244,114,114)
SpecializeTypes.specializedTypeVarsBuffer(Types$Type, Buffer):504->rgb(225,87,87)
SpecializeTypes.specializedTypeVarsBuffer(Types$Type, Buffer):509->rgb(246,117,117)
SpecializeTypes.specializedTypeVarsBuffer(Types$Type, Buffer):511->rgb(213,69,69)
SpecializeTypes.specializedTypeVarsBuffer(Types$Type, Buffer):512->rgb(207,60,60)
SpecializeTypes.specializedTypeVarsBuffer(Types$Type, Buffer):515->rgb(207,60,60)
SpecializeTypes.specializesClass(Symbols$Symbol):397->rgb(211,67,67)
SpecializeTypes.survivingArgs(Symbols$Symbol, List):306->rgb(250,123,123)
SpecializeTypes.transformInfo(Symbols$Symbol, Types$Type):1246->rgb(231,96,96)
SpecializeTypes.transformInfo(Symbols$Symbol, Types$Type):1247->rgb(232,97,97)
SpecializeTypes.transformInfo(Symbols$Symbol, Types$Type):1258->rgb(206,59,59)
SpecializeTypes.transformInfo(Symbols$Symbol, Types$Type):1260->rgb(237,105,105)
SpecializeTypes.transformInfo(Symbols$Symbol, Types$Type):1266->rgb(238,106,106)
SpecializeTypes.unify(List, List, Map, boolean):1190->rgb(246,117,117)
Stack$StackBuilder.$plus$eq(Object):27->rgb(254,129,129)
Stack$StackBuilder.$plus$eq(Object):29->rgb(212,67,67)
Stack$StackBuilder.$plus$plus$eq(TraversableOnce):27->rgb(241,109,109)
Stack$StackBuilder.lbuff():28->rgb(231,96,96)
Stack.pop():142->rgb(241,110,110)
StandardScalaSettings.$init$(StandardScalaSettings):24->rgb(230,94,94)
Statics.anyHash(Object):103->rgb(210,65,65)
Statics.anyHash(Object):106->rgb(248,120,120)
Statics.anyHash(Object):109->rgb(206,59,59)
Statics.anyHash(Object):112->rgb(227,90,90)
Statics.anyHash(Object):115->rgb(236,103,103)
Statistics$Counter.value():142->rgb(213,69,69)
Statistics$Counter.value_$eq(int):142->rgb(249,122,122)
Statistics$SubCounter.start():170->rgb(238,105,105)
Statistics$SubCounter.underlying():169->rgb(200,50,50)
Statistics$Timer.start():183->rgb(233,98,98)
Statistics$Timer.stop(Tuple2):186->rgb(238,106,106)
Statistics$TimerStack.elems_$eq(List):237->rgb(224,85,85)
Statistics$TimerStack.pop(Tuple2):253->rgb(215,73,73)
Statistics$TimerStack.pop(Tuple2):254->rgb(254,129,129)
Statistics$TimerStack.push(Statistics$StackableTimer):240->rgb(253,128,128)
Statistics$TimerStack.push(Statistics$StackableTimer):241->rgb(230,94,94)
Statistics.areColdStatsLocallyEnabled():262->rgb(243,112,112)
Statistics.areHotStatsLocallyEnabled():263->rgb(232,97,97)
StatisticsStatics.areSomeColdStatsEnabled():36->rgb(232,96,96)
StatisticsStatics.areSomeHotStatsEnabled():44->rgb(252,125,125)
StdAttachments$Attachable.$init$(StdAttachments$Attachable):12->rgb(239,107,107)
StdAttachments$Attachable.getAndRemoveAttachment$(StdAttachments$Attachable, ClassTag):17->rgb(205,57,57)
StdAttachments$Attachable.getAndRemoveAttachment(ClassTag):18->rgb(227,89,89)
StdAttachments$Attachable.hasAttachment$(StdAttachments$Attachable, ClassTag):22->rgb(241,109,109)
StdAttachments$Attachable.hasAttachment(ClassTag):22->rgb(254,129,129)
StdAttachments$Attachable.pos$(StdAttachments$Attachable):25->rgb(201,51,51)
StdAttachments$Attachable.pos():25->rgb(241,110,110)
StdAttachments$Attachable.pos_$eq$(StdAttachments$Attachable, Position):26->rgb(250,123,123)
StdAttachments$Attachable.removeAttachment$(StdAttachments$Attachable, ClassTag):16->rgb(220,80,80)
StdAttachments$Attachable.removeAttachment(ClassTag):16->rgb(248,120,120)
StdAttachments$Attachable.setPos$(StdAttachments$Attachable, Position):27->rgb(216,74,74)
StdAttachments$Attachable.setPos(Position):27->rgb(213,69,69)
StdAttachments.isMacroImplRef$(StdAttachments, Trees$Tree):153->rgb(240,108,108)
StdAttachments.isMacroImplRef(Trees$Tree):153->rgb(249,121,121)
StdAttachments.unsuppressMacroExpansion$(StdAttachments, Trees$Tree):83->rgb(212,68,68)
StdAttachments.unsuppressMacroExpansion(Trees$Tree):84->rgb(208,61,61)
StdNames$JavaKeywords.<init>(SymbolTable):1118->rgb(214,71,71)
StdNames$KeywordSetBuilder.apply(String):36->rgb(231,96,96)
StdNames$Keywords.<init>(SymbolTable):226->rgb(208,62,62)
StdNames$TermNames.<init>(SymbolTable):338->rgb(253,127,127)
StdNames$TermNames.Predef():507->rgb(238,105,105)
StdNames$TermNames.apply():650->rgb(222,82,82)
StdNames$TermNames.createNameType(String):314->rgb(248,119,119)
StdNames$TermNames.isLocalDummyName(Names$Name):382->rgb(231,95,95)
StdNames$TermNames.isSetterName(Names$Name):387->rgb(239,107,107)
StdNames$TermNames.newLazyValSlowComputeName(Names$Name):886->rgb(201,51,51)
StdNames$TermNames.unexpandedName(Names$Name):425->rgb(248,119,119)
StdNames$TypeNames.<init>(SymbolTable):229->rgb(210,65,65)
StdNames$fulltpnme$.<init>(SymbolTable):1057->rgb(216,74,74)
StdNames$nme$.<init>(SymbolTable):1075->rgb(212,68,68)
StdNames.$init$(StdNames):1071->rgb(226,89,89)
String.<init>(char[], int, int):198->rgb(209,64,64)
String.<init>(char[], int, int):207->rgb(227,89,89)
String.charAt(int):657->rgb(224,85,85)
String.charAt(int):660->rgb(220,80,80)
String.equals(Object):988->rgb(204,56,56)
String.hashCode():1467->rgb(201,52,52)
String.hashCode():1470->rgb(234,99,99)
String.hashCode():1471->rgb(227,90,90)
String.indexOf(int):1503->rgb(234,100,100)
String.indexOf(int, int):1559->rgb(238,105,105)
String.lastIndexOf(String):1807->rgb(219,78,78)
String.lastIndexOf(String, int):1827->rgb(248,120,120)
String.lastIndexOf(char[], int, int, char[], int, int, int):1888->rgb(225,87,87)
String.length():623->rgb(245,115,115)
String.matches(String):2121->rgb(219,78,78)
String.substring(int, int):1969->rgb(206,59,59)
String.toCharArray():2899->rgb(249,121,121)
StringBuilder.<init>():54->rgb(201,51,51)
StringBuilder.<init>(StringBuilder):31->rgb(227,90,90)
StringBuilder.<init>(int):101->rgb(205,57,57)
StringBuilder.<init>(int, String):49->rgb(225,86,86)
StringBuilder.append(CharSequence):166->rgb(221,80,80)
StringBuilder.append(CharSequence, int, int):175->rgb(225,86,86)
StringBuilder.append(CharSequence, int, int):76->rgb(230,94,94)
StringBuilder.append(Object):131->rgb(240,108,108)
StringBuilder.append(String):136->rgb(226,87,87)
StringBuilder.append(char):202->rgb(217,75,75)
StringBuilder.append(char[], int, int):190->rgb(247,118,118)
StringBuilder.append(long):214->rgb(247,119,119)
StringBuilder.toString():407->rgb(210,65,65)
StringBuilder.toString():430->rgb(236,102,102)
StringLike.stripMargin$(StringLike):199->rgb(239,106,106)
StringLike.stripMargin():199->rgb(204,56,56)
StringOps$.slice$extension(String, int, int):44->rgb(247,118,118)
StringOps.drop(int):29->rgb(211,67,67)
StringOps.slice(int, int):29->rgb(200,50,50)
StringOps.splitAt(int):29->rgb(234,100,100)
StringOps.stripMargin():29->rgb(235,100,100)
Subroutine.<init>(LabelNode, int, JumpInsnNode):59->rgb(230,93,93)
Subroutine.copy():63->rgb(238,106,106)
Subroutine.copy():65->rgb(234,100,100)
Subroutine.copy():67->rgb(236,103,103)
Subtractable.$minus$minus$(Subtractable, GenTraversableOnce):60->rgb(222,82,82)
Subtractable.$minus$minus(GenTraversableOnce):60->rgb(240,109,109)
SuperAccessors$SuperAccTransformer.$anonfun$transform$17(SuperAccessors$SuperAccTransformer, Trees$Tree, List, Trees$Tree):392->rgb(203,54,54)
SuperAccessors$SuperAccTransformer.$anonfun$transform$4(SuperAccessors$SuperAccTransformer, List):254->rgb(219,78,78)
SuperAccessors$SuperAccTransformer.$anonfun$transformArgs$1(SuperAccessors$SuperAccTransformer, Symbols$Symbol, Trees$Tree):110->rgb(200,50,50)
SuperAccessors$SuperAccTransformer.$anonfun$transformArgs$1(SuperAccessors$SuperAccTransformer, Symbols$Symbol, Trees$Tree):112->rgb(250,122,122)
SuperAccessors$SuperAccTransformer.atOwner(Trees$Tree, Symbols$Symbol, Function0):419->rgb(244,114,114)
SuperAccessors$SuperAccTransformer.atOwner(Trees$Tree, Symbols$Symbol, Function0):421->rgb(215,73,73)
SuperAccessors$SuperAccTransformer.mayNeedProtectedAccessor$1(Trees$Select, List, boolean, Trees$Tree, Symbols$Symbol):209->rgb(225,86,86)
SuperAccessors$SuperAccTransformer.mayNeedProtectedAccessor$1(Trees$Select, List, boolean, Trees$Tree, Symbols$Symbol):214->rgb(246,118,118)
SuperAccessors$SuperAccTransformer.needsProtectedAccessor(Symbols$Symbol, Position):560->rgb(206,59,59)
SuperAccessors$SuperAccTransformer.transform(Trees$Tree):220->rgb(253,127,127)
SuperAccessors$SuperAccTransformer.transform(Trees$Tree):238->rgb(238,106,106)
SuperAccessors$SuperAccTransformer.transform(Trees$Tree):242->rgb(217,75,75)
SuperAccessors$SuperAccTransformer.transform(Trees$Tree):259->rgb(201,52,52)
SuperAccessors$SuperAccTransformer.transform(Trees$Tree):364->rgb(228,91,91)
SuperAccessors$SuperAccTransformer.transform(Trees$Tree):366->rgb(235,102,102)
SuperAccessors$SuperAccTransformer.transform(Trees$Tree):370->rgb(253,127,127)
SuperAccessors$SuperAccTransformer.transform(Trees$Tree):388->rgb(216,73,73)
SuperAccessors$SuperAccTransformer.transform(Trees$Tree):396->rgb(220,80,80)
SuperAccessors$SuperAccTransformer.transform(Trees$Tree):431->rgb(215,72,72)
SuperAccessors$SuperAccTransformer.transform(Trees$TreeApi):71->rgb(211,66,66)
SuperAccessors$SuperAccTransformer.transformArgs(List, List):109->rgb(208,61,61)
SuperAccessors$SuperAccTransformer.transformClassDef$1(Trees$Tree, Symbols$Symbol):236->rgb(216,73,73)
SuperAccessors$SuperAccTransformer.transformSelect$1(Trees$Tree, Symbols$Symbol, Trees$Tree, Names$Name, Trees$Select):281->rgb(219,77,77)
SuperAccessors$SuperAccTransformer.transformSelect$1(Trees$Tree, Symbols$Symbol, Trees$Tree, Names$Name, Trees$Select):334->rgb(235,101,101)
SuperAccessors$SuperAccTransformer.transformSelect$1(Trees$Tree, Symbols$Symbol, Trees$Tree, Names$Name, Trees$Select):358->rgb(248,121,121)
SuperAccessors$SuperAccTransformer.transformSelect$1(Trees$Tree, Symbols$Symbol, Trees$Tree, Names$Name, Trees$Select):361->rgb(246,118,118)
SuperAccessors$SuperAccTransformer.transformSuperSelect(Trees$Select):194->rgb(222,83,83)
SuperAccessors$SuperAccTransformer.transformTemplate$1(Trees$Tree, List):254->rgb(242,111,111)
SymbolLoaders$ClassfileLoader$classfileParser$.lookupMemberAtTyperPhaseIfPossible(Symbols$Symbol, Names$Name):298->rgb(235,101,101)
SymbolLoaders$ClassfileLoader$classfileParser$.newConstantPool():296->rgb(254,128,128)
SymbolLoaders$ClassfileLoader.<init>(SymbolLoaders, AbstractFile, Symbols$ClassSymbol, Symbols$ModuleSymbol):291->rgb(242,112,112)
SymbolLoaders$ClassfileLoader.description():314->rgb(212,68,68)
SymbolLoaders$ClassfileLoader.doComplete(Symbols$Symbol):318->rgb(236,103,103)
SymbolLoaders$ClassfileLoader.doComplete(Symbols$Symbol):322->rgb(203,54,54)
SymbolLoaders$PackageLoader.$anonfun$doComplete$2$adapted(SymbolLoaders$PackageLoader, Symbols$Symbol, ClassRepresentation):274->rgb(219,77,77)
SymbolLoaders$PackageLoader.$anonfun$doComplete$2(SymbolLoaders$PackageLoader, Symbols$Symbol, ClassRepresentation):274->rgb(225,87,87)
SymbolLoaders$PackageLoader.$anonfun$doComplete$3(SymbolLoaders$PackageLoader, Symbols$Symbol, PackageEntry):283->rgb(231,95,95)
SymbolLoaders$PackageLoader.doComplete(Symbols$Symbol):271->rgb(232,96,96)
SymbolLoaders$PackageLoader.doComplete(Symbols$Symbol):274->rgb(234,100,100)
SymbolLoaders$PackageLoader.doComplete(Symbols$Symbol):276->rgb(252,126,126)
SymbolLoaders$PackageLoader.doComplete(Symbols$Symbol):286->rgb(227,90,90)
SymbolLoaders$SymbolLoader.<init>(SymbolLoaders):206->rgb(212,68,68)
SymbolLoaders$SymbolLoader.complete(Symbols$Symbol):220->rgb(248,121,121)
SymbolLoaders$SymbolLoader.complete(Symbols$Symbol):222->rgb(202,53,53)
SymbolLoaders$SymbolLoader.complete(Symbols$Symbol):225->rgb(206,59,59)
SymbolLoaders$SymbolLoader.complete(Symbols$Symbol):232->rgb(251,124,124)
SymbolLoaders$SymbolLoader.complete(Symbols$Symbol):233->rgb(230,94,94)
SymbolLoaders$SymbolLoader.initRoot(Symbols$Symbol):248->rgb(227,90,90)
SymbolLoaders$SymbolLoader.load(Symbols$Symbol):236->rgb(236,103,103)
SymbolLoaders$moduleClassLoader$.doComplete(Symbols$Symbol):343->rgb(238,105,105)
SymbolLoaders.$anonfun$initializeFromClassPath$1(SymbolLoaders, AbstractFile, Symbols$ClassSymbol, Symbols$ModuleSymbol):183->rgb(238,105,105)
SymbolLoaders.enterClass(Symbols$Symbol, Symbols$ClassSymbol, SymbolLoaders$SymbolLoader):67->rgb(251,125,125)
SymbolLoaders.enterClassAndModule(Symbols$Symbol, String, Function2):128->rgb(221,81,81)
SymbolLoaders.enterClassAndModule(Symbols$Symbol, String, Function2):129->rgb(252,126,126)
SymbolLoaders.enterClassAndModule(Symbols$Symbol, String, Function2):135->rgb(222,83,83)
SymbolLoaders.enterClassAndModule(Symbols$Symbol, String, Function2):136->rgb(219,78,78)
SymbolLoaders.enterClassAndModule(Symbols$Symbol, String, Function2):137->rgb(254,128,128)
SymbolLoaders.enterClassAndModule(Symbols$Symbol, String, Function2):145->rgb(233,98,98)
SymbolLoaders.enterClassAndModule(Symbols$Symbol, String, Function2):146->rgb(241,109,109)
SymbolLoaders.enterIfNew(Symbols$Symbol, Symbols$Symbol, SymbolLoaders$SymbolLoader):44->rgb(249,121,121)
SymbolLoaders.enterIfNew(Symbols$Symbol, Symbols$Symbol, SymbolLoaders$SymbolLoader):45->rgb(205,57,57)
SymbolLoaders.enterModule(Symbols$Symbol, Symbols$ModuleSymbol, SymbolLoaders$SymbolLoader):81->rgb(245,116,116)
SymbolLoaders.enterPackage(Symbols$Symbol, String, SymbolLoaders$SymbolLoader):118->rgb(241,110,110)
SymbolLoaders.initializeFromClassPath(Symbols$Symbol, ClassRepresentation):175->rgb(219,78,78)
SymbolLoaders.initializeFromClassPath(Symbols$Symbol, ClassRepresentation):183->rgb(223,83,83)
SymbolLoaders.newModule(Symbols$Symbol, String):70->rgb(230,94,94)
SymbolPairs$Cursor.$anonfun$init$2(SymbolPairs$Cursor, Types$Type):192->rgb(231,95,95)
SymbolPairs$Cursor.$anonfun$init$3$adapted(SymbolPairs$Cursor, Types$Type, Symbols$Symbol):192->rgb(201,52,52)
SymbolPairs$Cursor.$anonfun$init$3(SymbolPairs$Cursor, Types$Type, Symbols$Symbol):192->rgb(223,84,84)
SymbolPairs$Cursor.<init>(SymbolPairs, Symbols$Symbol):146->rgb(250,123,123)
SymbolPairs$Cursor.<init>(SymbolPairs, Symbols$Symbol):167->rgb(202,54,54)
SymbolPairs$Cursor.<init>(SymbolPairs, Symbols$Symbol):91->rgb(234,99,99)
SymbolPairs$Cursor.advanceCurEntry():257->rgb(249,121,121)
SymbolPairs$Cursor.advanceNextEntry():242->rgb(233,99,99)
SymbolPairs$Cursor.fillDecls$1(List, boolean):174->rgb(224,85,85)
SymbolPairs$Cursor.fillDecls$1(List, boolean):175->rgb(232,97,97)
SymbolPairs$Cursor.fillDecls$1(List, boolean):177->rgb(242,111,111)
SymbolPairs$Cursor.fillDecls$1(List, boolean):178->rgb(225,87,87)
SymbolPairs$Cursor.init():189->rgb(223,83,83)
SymbolPairs$Cursor.init():199->rgb(253,128,128)
SymbolPairs$Cursor.init():201->rgb(246,118,118)
SymbolPairs$Cursor.lowMemberType():153->rgb(245,116,116)
SymbolPairs$Cursor.next():283->rgb(208,61,61)
SymbolPairs$Cursor.next():285->rgb(210,65,65)
SymbolPairs$Cursor.next():286->rgb(215,72,72)
SymbolPairs$SymbolPair.highType():50->rgb(218,76,76)
SymbolPairs.sameInBaseClass(Symbols$Symbol, Types$Type, Types$Type):38->rgb(234,100,100)
SymbolTable$perRunCaches$$anon$1.apply():410->rgb(224,84,84)
SymbolTable.<init>():16->rgb(207,60,60)
SymbolTable.<init>():9->rgb(254,129,129)
SymbolTable.Block(Seq):16->rgb(239,107,107)
SymbolTable.EmptyTree():16->rgb(200,51,51)
SymbolTable.Ident(Symbols$Symbol):16->rgb(213,69,69)
SymbolTable.New(Trees$Tree, List):16->rgb(233,98,98)
SymbolTable.NoPrefix():16->rgb(209,63,63)
SymbolTable.NoSymbol():16->rgb(218,77,77)
SymbolTable.NoType():16->rgb(217,75,75)
SymbolTable.RefinedType():16->rgb(229,93,93)
SymbolTable.Select(Trees$Tree, Symbols$Symbol):16->rgb(202,53,53)
SymbolTable.SuperSelect(Symbols$Symbol, Symbols$Symbol):16->rgb(249,122,122)
SymbolTable.ThisType():16->rgb(227,89,89)
SymbolTable.TypeConstraint():16->rgb(207,60,60)
SymbolTable.TypeTree(Types$Type):16->rgb(228,91,91)
SymbolTable.TypeVar():16->rgb(217,75,75)
SymbolTable.WildcardType():16->rgb(225,87,87)
SymbolTable.addAnnotations(Trees$Tree, Types$Type):16->rgb(207,61,61)
SymbolTable.appliedType(Symbols$Symbol, List):16->rgb(254,128,128)
SymbolTable.appliedType(Symbols$Symbol, Seq):16->rgb(242,111,111)
SymbolTable.appliedType(Types$Type, List):16->rgb(210,65,65)
SymbolTable.atPos(Position, Trees$Tree):16->rgb(201,52,52)
SymbolTable.checkKindBounds0(List, List, Types$Type, Symbols$Symbol, boolean):16->rgb(242,111,111)
SymbolTable.cloneSymbols(List):16->rgb(252,125,125)
SymbolTable.cloneSymbolsAndModify(List, Function1):16->rgb(207,60,60)
SymbolTable.cloneSymbolsAtOwner(List, Symbols$Symbol):16->rgb(228,91,91)
SymbolTable.closestEnclMethod(Symbols$Symbol):16->rgb(216,74,74)
SymbolTable.commonOwner(List):16->rgb(200,51,51)
SymbolTable.commonOwner(Types$Type):16->rgb(239,107,107)
SymbolTable.compareLengths(List, List):16->rgb(220,80,80)
SymbolTable.compoundBaseTypeSeq(Types$Type):16->rgb(202,53,53)
SymbolTable.computeBaseClasses(Types$Type):16->rgb(233,98,98)
SymbolTable.copyDefDef(Trees$Tree, Trees$Modifiers, Names$Name, List, List, Trees$Tree, Trees$Tree):16->rgb(209,63,63)
SymbolTable.copyRefinedType(Types$RefinedType, List, Scopes$Scope):16->rgb(251,125,125)
SymbolTable.copyTypeRef(Types$Type, Types$Type, Symbols$Symbol, List):16->rgb(229,92,92)
SymbolTable.createFromClonedSymbols(List, Types$Type, Function2):16->rgb(233,99,99)
SymbolTable.defineBaseClassesOfCompoundType(Types$CompoundType):16->rgb(226,88,88)
SymbolTable.defineBaseTypeSeqOfCompoundType(Types$CompoundType):16->rgb(240,108,108)
SymbolTable.defineBaseTypeSeqOfTypeRef(Types$TypeRef):16->rgb(249,121,121)
SymbolTable.defineOriginalOwner(Symbols$Symbol, Symbols$Symbol):16->rgb(223,83,83)
SymbolTable.defineUnderlyingOfSingleType(Types$SingleType):16->rgb(241,110,110)
SymbolTable.definitions():16->rgb(241,110,110)
SymbolTable.deriveCaseDef(Trees$Tree, Function1):16->rgb(214,71,71)
SymbolTable.deriveDefDef(Trees$Tree, Function1):16->rgb(231,95,95)
SymbolTable.deriveFunction(Trees$Tree, Function1):16->rgb(225,87,87)
SymbolTable.deriveLabelDef(Trees$Tree, Function1):16->rgb(254,128,128)
SymbolTable.deriveSymbols(List, Function1):16->rgb(202,52,52)
SymbolTable.deriveTemplate(Trees$Tree, Function1):16->rgb(225,86,86)
SymbolTable.deriveType(List, Function1, Types$Type):16->rgb(237,105,105)
SymbolTable.elapsedMessage(String, long):66->rgb(245,116,116)
SymbolTable.elementExtract(Symbols$Symbol, Types$Type):16->rgb(220,80,80)
SymbolTable.existentialAbstraction(List, Types$Type):16->rgb(221,81,81)
SymbolTable.freshTermName(String, FreshNameCreator):16->rgb(230,94,94)
SymbolTable.fulltpnme$lzycompute$1():16->rgb(214,70,70)
SymbolTable.fulltpnme():16->rgb(213,69,69)
SymbolTable.glb(List):16->rgb(215,72,72)
SymbolTable.glb(List, int):16->rgb(213,70,70)
SymbolTable.inform(Position, String):16->rgb(233,99,99)
SymbolTable.inform(String):16->rgb(221,81,81)
SymbolTable.informTime(String, long):69->rgb(222,82,82)
SymbolTable.inheritsJavaVarArgsMethod(Symbols$Symbol):16->rgb(204,56,56)
SymbolTable.instantiatedBounds(Types$Type, Symbols$Symbol, List, List):16->rgb(210,64,64)
SymbolTable.intersectionType(List):16->rgb(254,128,128)
SymbolTable.intersectionType(List, Symbols$Symbol):16->rgb(244,114,114)
SymbolTable.intersectionTypeForLazyBaseType(List):16->rgb(206,59,59)
SymbolTable.isBoundedGeneric(Types$Type):16->rgb(204,56,56)
SymbolTable.isDifferentTypeConstructor(Types$Type, Types$Type):16->rgb(229,93,93)
SymbolTable.isEligibleForPrefixUnification(Types$Type):16->rgb(203,55,55)
SymbolTable.isExistentialType(Types$Type):16->rgb(225,87,87)
SymbolTable.isHKSubType(Types$Type, Types$Type, int):16->rgb(246,118,118)
SymbolTable.isJavaVarargsAncestor(Symbols$Symbol):16->rgb(239,106,106)
SymbolTable.isPossiblePrefix(Symbols$Symbol):16->rgb(205,57,57)
SymbolTable.isRawIfWithoutArgs(Symbols$Symbol):16->rgb(237,104,104)
SymbolTable.isRawParameter(Symbols$Symbol):16->rgb(244,114,114)
SymbolTable.isRawType(Types$Type):16->rgb(224,86,86)
SymbolTable.isSameType(Types$Type, Types$Type):16->rgb(200,50,50)
SymbolTable.isSameType2(Types$Type, Types$Type):16->rgb(211,66,66)
SymbolTable.isSameTypes(List, List):16->rgb(210,65,65)
SymbolTable.isSubArgs(List, List, List, int):16->rgb(253,127,127)
SymbolTable.isSubType(Types$Type, Types$Type, int):16->rgb(226,88,88)
SymbolTable.isValid(int):281->rgb(210,64,64)
SymbolTable.isValid(int):283->rgb(216,73,73)
SymbolTable.isValid(int):284->rgb(251,125,125)
SymbolTable.isValidForBaseClasses(int):294->rgb(228,91,91)
SymbolTable.isValidForBaseClasses(int):295->rgb(253,128,128)
SymbolTable.isWeakSubType(Types$Type, Types$Type):16->rgb(245,115,115)
SymbolTable.isWithinBounds(Types$Type, Symbols$Symbol, List, List):16->rgb(244,115,115)
SymbolTable.itransform(Trees$Transformer, Trees$Tree):16->rgb(249,121,121)
SymbolTable.itransform(Trees$Transformer, Trees$TreeApi):16->rgb(230,94,94)
SymbolTable.itraverse(Trees$Traverser, Trees$Tree):16->rgb(239,106,106)
SymbolTable.itraverse(Trees$Traverser, Trees$TreeApi):16->rgb(227,89,89)
SymbolTable.lockedCount():16->rgb(207,60,60)
SymbolTable.lub(List):16->rgb(218,76,76)
SymbolTable.lub(List, int):16->rgb(202,54,54)
SymbolTable.lubDepth(List):16->rgb(239,107,107)
SymbolTable.lubList(List, int):16->rgb(210,65,65)
SymbolTable.lubResults():16->rgb(200,50,50)
SymbolTable.mapList(List, Function1):16->rgb(230,93,93)
SymbolTable.mapParamss(Symbols$Symbol, Function1):16->rgb(203,55,55)
SymbolTable.markFlagsCompleted(Seq, long):16->rgb(204,56,56)
SymbolTable.matchesType(Types$Type, Types$Type, boolean):16->rgb(250,122,122)
SymbolTable.matchingParams(List, List, boolean, boolean):16->rgb(247,119,119)
SymbolTable.maxDepth(List):16->rgb(208,61,61)
SymbolTable.maxbaseTypeSeqDepth(List):16->rgb(202,53,53)
SymbolTable.mergePrefixAndArgs(List, int, int):16->rgb(246,116,116)
SymbolTable.newBaseTypeSeq(List, Types$Type[]):16->rgb(225,86,86)
SymbolTable.newDefDef$default$3(Symbols$Symbol, Trees$Tree):16->rgb(233,99,99)
SymbolTable.newDefDef$default$6(Symbols$Symbol, Trees$Tree):16->rgb(225,87,87)
SymbolTable.newDefDef$default$7(Symbols$Symbol, Trees$Tree):16->rgb(240,108,108)
SymbolTable.newDefDef(Symbols$Symbol, Trees$Tree, Trees$Modifiers, Names$TermName, List, List, Trees$Tree):16->rgb(205,57,57)
SymbolTable.newNestedScope(Scopes$Scope):16->rgb(224,85,85)
SymbolTable.newScope():16->rgb(234,100,100)
SymbolTable.newScopeWith(Seq):16->rgb(205,57,57)
SymbolTable.newTermName(String):16->rgb(227,90,90)
SymbolTable.newTermName(byte[], int, int):16->rgb(237,103,103)
SymbolTable.newTermName(char[], int, int):16->rgb(227,90,90)
SymbolTable.newTermName(char[], int, int, String):16->rgb(201,52,52)
SymbolTable.newTermNameCached(String):16->rgb(208,62,62)
SymbolTable.newTypeName(String):16->rgb(247,119,119)
SymbolTable.newTypeName(byte[], int, int):16->rgb(201,52,52)
SymbolTable.newTypeName(char[], int, int):16->rgb(243,113,113)
SymbolTable.newValDef$default$3(Symbols$Symbol, Trees$Tree):16->rgb(246,117,117)
SymbolTable.newValDef$default$5(Symbols$Symbol, Trees$Tree):16->rgb(249,121,121)
SymbolTable.newValDef(Symbols$Symbol, Trees$Tree, Trees$Modifiers, Names$TermName, Trees$Tree):16->rgb(219,77,77)
SymbolTable.nme$lzycompute$1():16->rgb(249,122,122)
SymbolTable.nme():16->rgb(252,126,126)
SymbolTable.noChangeInBaseClasses$1(InfoTransformers$InfoTransformer, int):289->rgb(239,107,107)
SymbolTable.noSelfType():16->rgb(218,76,76)
SymbolTable.normalizePlus(Types$Type):16->rgb(250,123,123)
SymbolTable.objToAny(Types$Type):16->rgb(248,120,120)
SymbolTable.openPackageModule(Symbols$Symbol):350->rgb(250,123,123)
SymbolTable.openPackageModule(Symbols$Symbol):356->rgb(215,72,72)
SymbolTable.openPackageModule(Symbols$Symbol, Symbols$Symbol):301->rgb(229,93,93)
SymbolTable.packSymbols(List, Types$Type, Symbols$Symbol):16->rgb(209,63,63)
SymbolTable.phStack():183->rgb(205,57,57)
SymbolTable.phase():190->rgb(240,109,109)
SymbolTable.phase():191->rgb(227,90,90)
SymbolTable.phase():192->rgb(246,118,118)
SymbolTable.phaseOf(int):235->rgb(242,112,112)
SymbolTable.popPhase(Phase):214->rgb(245,115,115)
SymbolTable.propagatePackageBoundary(int, Seq):16->rgb(219,78,78)
SymbolTable.pushPhase(Phase):207->rgb(240,108,108)
SymbolTable.pushPhase(Phase):209->rgb(251,124,124)
SymbolTable.rangePos(SourceFile, int, int, int):16->rgb(223,84,84)
SymbolTable.refinedType(List, Symbols$Symbol):16->rgb(234,100,100)
SymbolTable.refinedType(List, Symbols$Symbol, Scopes$Scope, Position):16->rgb(212,68,68)
SymbolTable.sameElementsEquals(List, List):16->rgb(240,108,108)
SymbolTable.sameLength(List, List):16->rgb(201,51,51)
SymbolTable.sameWeakLubAsLub(List):16->rgb(225,87,87)
SymbolTable.saveOriginalOwner(Symbols$Symbol):16->rgb(219,78,78)
SymbolTable.scala$reflect$internal$AnnotationCheckers$$annotationCheckers():16->rgb(234,100,100)
SymbolTable.scala$reflect$internal$Names$$termHashtable():16->rgb(231,95,95)
SymbolTable.scala$reflect$internal$Symbols$$_lockedCount():16->rgb(212,67,67)
SymbolTable.scala$reflect$internal$Symbols$$originalOwnerMap():16->rgb(234,99,99)
SymbolTable.scala$reflect$internal$tpe$TypeConstraints$$_undoLog():16->rgb(210,65,65)
SymbolTable.scopeTransform(Symbols$Symbol, Function0):16->rgb(212,68,68)
SymbolTable.sequence(List):16->rgb(244,114,114)
SymbolTable.setPackageAccessBoundary(Symbols$Symbol):16->rgb(231,95,95)
SymbolTable.singleType(Types$Type, Symbols$Symbol):16->rgb(250,123,123)
SymbolTable.singletonBounds(Types$Type):16->rgb(212,67,67)
SymbolTable.skipPrefixOf(Types$Type, Symbols$Symbol):16->rgb(231,96,96)
SymbolTable.solve(List, List, List, boolean, int):16->rgb(231,95,95)
SymbolTable.specializesSym(Types$Type, Symbols$Symbol, Types$Type, Symbols$Symbol, int):16->rgb(249,122,122)
SymbolTable.specializesSym(Types$Type, Symbols$Symbol, int):16->rgb(247,118,118)
SymbolTable.synchronizeNames():16->rgb(201,52,52)
SymbolTable.transposeSafe(List):16->rgb(233,99,99)
SymbolTable.typeDepth(Types$Type):16->rgb(217,75,75)
SymbolTable.typeRef(Types$Type, Symbols$Symbol, List):16->rgb(202,53,53)
SymbolTable.typeVarToOriginMap():16->rgb(251,125,125)
SymbolTable.undetBaseTypeSeq():16->rgb(238,105,105)
SymbolTable.undoLog():16->rgb(201,52,52)
SymbolTable.unique(Types$Type):16->rgb(234,99,99)
SymbolTable.varianceInType(Types$Type, Symbols$Symbol):16->rgb(203,55,55)
SymbolTable.varianceInTypes(List, Symbols$Symbol):16->rgb(231,96,96)
SymbolTable.wrappingIntoTerm(Trees$Tree, Function1):16->rgb(232,97,97)
Symbols$AbstractTypeSymbol.<init>(SymbolTable, Symbols$Symbol, Position, Names$TypeName):3020->rgb(244,115,115)
Symbols$AbstractTypeSymbol.cloneSymbolImpl(Symbols$Symbol, long):3019->rgb(213,70,70)
Symbols$AbstractTypeSymbol.cloneSymbolImpl(Symbols$Symbol, long):3025->rgb(232,97,97)
Symbols$ClassSymbol.$anonfun$companionModule0$1$adapted(Symbols$ClassSymbol, Symbols$Symbol):3285->rgb(226,88,88)
Symbols$ClassSymbol.$anonfun$companionModule0$1(Symbols$ClassSymbol, Symbols$Symbol):3285->rgb(211,67,67)
Symbols$ClassSymbol.<init>(SymbolTable, Symbols$Symbol, Position, Names$TypeName):3224->rgb(207,61,61)
Symbols$ClassSymbol.associatedFile():3303->rgb(230,94,94)
Symbols$ClassSymbol.companionModule():3287->rgb(207,61,61)
Symbols$ClassSymbol.companionModule0():3285->rgb(247,119,119)
Symbols$ClassSymbol.companionSymbol():3288->rgb(243,112,112)
Symbols$ClassSymbol.isAnonymousClass():3253->rgb(205,57,57)
Symbols$ClassSymbol.isModuleClass():3248->rgb(241,110,110)
Symbols$ClassSymbol.isPackageClass():3249->rgb(200,51,51)
Symbols$ClassSymbol.isTrait():3250->rgb(218,76,76)
Symbols$ClassSymbol.linkedClassOfClass():3289->rgb(232,96,96)
Symbols$ClassSymbol.name():3223->rgb(213,70,70)
Symbols$ClassSymbol.name():3333->rgb(227,90,90)
Symbols$ClassSymbol.name():3334->rgb(221,80,80)
Symbols$ClassSymbol.name():3340->rgb(215,72,72)
Symbols$ClassSymbol.owner():3328->rgb(240,108,108)
Symbols$ClassSymbol.owner():3329->rgb(251,124,124)
Symbols$ClassSymbol.primaryConstructor():3298->rgb(227,89,89)
Symbols$ClassSymbol.thisType():3320->rgb(242,112,112)
Symbols$ClassSymbol.thisType():3321->rgb(249,122,122)
Symbols$ClassSymbol.thisType():3322->rgb(223,84,84)
Symbols$MethodSymbol.isCaseAccessorMethod():2944->rgb(236,102,102)
Symbols$MethodSymbol.isLiftedMethod():2931->rgb(228,91,91)
Symbols$MethodSymbol.isSourceMethod():2940->rgb(211,66,66)
Symbols$MethodSymbol.isVarargsMethod():2930->rgb(212,68,68)
Symbols$MethodSymbol.typeAsMemberOf(Types$Type):2965->rgb(216,74,74)
Symbols$MethodSymbol.typeAsMemberOf(Types$Type):2967->rgb(203,54,54)
Symbols$MethodSymbol.typeAsMemberOf(Types$Type):2969->rgb(215,72,72)
Symbols$ModuleClassSymbol.<init>(SymbolTable, Symbols$Symbol, Position, Names$TypeName):3398->rgb(254,129,129)
Symbols$ModuleClassSymbol.implicitMembers():3425->rgb(223,84,84)
Symbols$ModuleClassSymbol.typeOfThis():3415->rgb(233,98,98)
Symbols$ModuleClassSymbol.typeOfThis():3416->rgb(205,57,57)
Symbols$ModuleSymbol.associatedFile():2897->rgb(212,67,67)
Symbols$ModuleSymbol.name():2893->rgb(220,79,79)
Symbols$ModuleSymbol.name():2909->rgb(219,78,78)
Symbols$ModuleSymbol.name():2910->rgb(252,126,126)
Symbols$ModuleSymbol.name():2916->rgb(231,95,95)
Symbols$ModuleSymbol.owner():2903->rgb(228,91,91)
Symbols$ModuleSymbol.owner():2905->rgb(210,65,65)
Symbols$ModuleSymbol.owner():2906->rgb(226,87,87)
Symbols$ModuleSymbol.scala$reflect$internal$Symbols$ModuleSymbol$$$outer():2893->rgb(230,94,94)
Symbols$PackageClassSymbol.<init>(SymbolTable, Symbols$Symbol, Position, Names$TypeName):3447->rgb(210,64,64)
Symbols$PackageClassSymbol.sourceModule():3448->rgb(206,59,59)
Symbols$Symbol$$anon$1.exists(Function1):1228->rgb(220,79,79)
Symbols$Symbol$$anon$1.next():1228->rgb(222,83,83)
Symbols$Symbol$$anon$1.next():1231->rgb(207,60,60)
Symbols$Symbol.$anonfun$allOverriddenSymbols$1(Symbols$Symbol, Builder, Symbols$Symbol):2381->rgb(249,122,122)
Symbols$Symbol.$anonfun$allOverriddenSymbols$1(Symbols$Symbol, Builder, Symbols$Symbol):2532->rgb(251,125,125)
Symbols$Symbol.$anonfun$caseFieldAccessors$2$adapted(List, Symbols$Symbol):2066->rgb(203,54,54)
Symbols$Symbol.$anonfun$caseFieldAccessors$2(List, Symbols$Symbol):2067->rgb(232,97,97)
Symbols$Symbol.$anonfun$caseFieldAccessors$3$adapted(Symbols$Symbol, Names$TermName):2067->rgb(237,104,104)
Symbols$Symbol.$anonfun$caseFieldAccessors$3(Symbols$Symbol, Names$TermName):2068->rgb(213,69,69)
Symbols$Symbol.$anonfun$caseFieldAccessorsUnsorted$1$adapted(Symbols$Symbol):2072->rgb(246,117,117)
Symbols$Symbol.$anonfun$caseFieldAccessorsUnsorted$1(Symbols$Symbol):2072->rgb(211,66,66)
Symbols$Symbol.$anonfun$companionClass$1$adapted(Symbols$Symbol, Symbols$Symbol):2264->rgb(223,83,83)
Symbols$Symbol.$anonfun$companionClass$1(Symbols$Symbol, Symbols$Symbol):2264->rgb(213,70,70)
Symbols$Symbol.$anonfun$cookJavaRawInfo$2(Symbols$Symbol, Symbols$Symbol):1709->rgb(226,89,89)
Symbols$Symbol.$anonfun$isOverridingSymbol$1(Symbols$Symbol, Symbols$Symbol):2390->rgb(225,87,87)
Symbols$Symbol.$anonfun$isSerializable$1(Symbols$Symbol, Symbols$Symbol):899->rgb(213,69,69)
Symbols$Symbol.$anonfun$matchingSymbolInternal$1$adapted(Symbols$Symbol, Types$Type, Symbols$Symbol):2327->rgb(211,66,66)
Symbols$Symbol.$anonfun$matchingSymbolInternal$1(Symbols$Symbol, Types$Type, Symbols$Symbol):2327->rgb(207,61,61)
Symbols$Symbol.$anonfun$originalOwner$1(Symbols$Symbol):1209->rgb(224,86,86)
Symbols$Symbol.$anonfun$overriddenSymbol$1$adapted(Symbols$Symbol, Symbols$Symbol):2339->rgb(203,54,54)
Symbols$Symbol.$anonfun$overriddenSymbol$1(Symbols$Symbol, Symbols$Symbol):2339->rgb(214,70,70)
Symbols$Symbol.$anonfun$substInfo$1(List, List, Types$Type):1565->rgb(215,73,73)
Symbols$Symbol.$anonfun$typeParams$1(Symbols$Symbol):1752->rgb(226,88,88)
Symbols$Symbol.$anonfun$unsafeTypeParams$1(Symbols$Symbol):1738->rgb(211,67,67)
Symbols$Symbol.accessBoundary(Symbols$Symbol):1406->rgb(205,58,58)
Symbols$Symbol.accessBoundary(Symbols$Symbol):1408->rgb(208,62,62)
Symbols$Symbol.accessBoundary(Symbols$Symbol):1409->rgb(233,98,98)
Symbols$Symbol.accessed():2079->rgb(228,91,91)
Symbols$Symbol.accessedOrSelf():2128->rgb(204,56,56)
Symbols$Symbol.adaptInfos(Symbols$TypeHistory):1645->rgb(221,81,81)
Symbols$Symbol.addAnnotation(AnnotationInfos$AnnotationInfo):1867->rgb(211,67,67)
Symbols$Symbol.addModuleSuffix(Names$Name):1261->rgb(219,78,78)
Symbols$Symbol.allOverriddenSymbols():2377->rgb(244,114,114)
Symbols$Symbol.allOverriddenSymbols():2380->rgb(253,128,128)
Symbols$Symbol.allOverriddenSymbols():2383->rgb(224,86,86)
Symbols$Symbol.alternatives():1941->rgb(214,70,70)
Symbols$Symbol.ancestors():2150->rgb(200,50,50)
Symbols$Symbol.annotations():1848->rgb(225,87,87)
Symbols$Symbol.associatedFile():2518->rgb(230,93,93)
Symbols$Symbol.baseTypeSeqLength$1(Symbols$Symbol):1894->rgb(240,109,109)
Symbols$Symbol.baseTypeSeqLength$1(Symbols$Symbol):1895->rgb(236,102,102)
Symbols$Symbol.canMatchInheritedSymbols():2364->rgb(254,129,129)
Symbols$Symbol.caseFieldAccessors():2066->rgb(220,79,79)
Symbols$Symbol.caseFieldAccessorsUnsorted():2072->rgb(213,70,70)
Symbols$Symbol.cloneSymbol():1977->rgb(246,117,117)
Symbols$Symbol.cloneSymbol(Symbols$Symbol):1981->rgb(230,94,94)
Symbols$Symbol.cloneSymbol(Symbols$Symbol, long):1983->rgb(217,76,76)
Symbols$Symbol.cloneSymbol(Symbols$Symbol, long, Names$Name):1985->rgb(232,97,97)
Symbols$Symbol.cloneSymbol(Symbols$Symbol, long, Names$Name):1987->rgb(213,70,70)
Symbols$Symbol.cloneSymbol(Symbols$Symbol, long, Names$Name):1988->rgb(248,121,121)
Symbols$Symbol.companionClass():2264->rgb(245,116,116)
Symbols$Symbol.completeTypeParams$1():1752->rgb(238,106,106)
Symbols$Symbol.completeTypeParams$1():1756->rgb(236,102,102)
Symbols$Symbol.cookJavaRawInfo():1701->rgb(202,53,53)
Symbols$Symbol.cookJavaRawInfo():1705->rgb(223,84,84)
Symbols$Symbol.cookJavaRawInfo():1707->rgb(227,90,90)
Symbols$Symbol.cookJavaRawInfo():1708->rgb(221,81,81)
Symbols$Symbol.cookJavaRawInfo():1709->rgb(236,103,103)
Symbols$Symbol.createAbstractTypeSymbol(Names$TypeName, Position, long):1326->rgb(250,122,122)
Symbols$Symbol.createMethodSymbol(Names$TermName, Position, long):1350->rgb(248,121,121)
Symbols$Symbol.createModuleClassSymbol(Names$TypeName, Position, long):1338->rgb(253,127,127)
Symbols$Symbol.createModuleSymbol(Names$TermName, Position, long):1353->rgb(243,113,113)
Symbols$Symbol.createPackageClassSymbol(Names$TypeName, Position, long):1341->rgb(218,76,76)
Symbols$Symbol.createValueParameterSymbol(Names$TermName, Position, long):1359->rgb(214,70,70)
Symbols$Symbol.deprecatedParamName():904->rgb(234,99,99)
Symbols$Symbol.effectiveOwner():853->rgb(239,107,107)
Symbols$Symbol.enclosingRootClass():2155->rgb(231,95,95)
Symbols$Symbol.enclosingRootClass():2174->rgb(233,99,99)
Symbols$Symbol.enclosingTopLevelClass():2211->rgb(248,120,120)
Symbols$Symbol.enclosingTopLevelClass():2213->rgb(238,106,106)
Symbols$Symbol.enclosingTopLevelClassOrDummy():2219->rgb(213,69,69)
Symbols$Symbol.exists():1087->rgb(206,59,59)
Symbols$Symbol.exists():1101->rgb(208,61,61)
Symbols$Symbol.filter(Function1):1945->rgb(230,94,94)
Symbols$Symbol.filter(Function1):1947->rgb(241,110,110)
Symbols$Symbol.filter(Function1):1951->rgb(222,83,83)
Symbols$Symbol.filter(Function1):1964->rgb(202,53,53)
Symbols$Symbol.firstParam():2503->rgb(201,52,52)
Symbols$Symbol.flags():770->rgb(230,94,94)
Symbols$Symbol.flags():771->rgb(201,52,52)
Symbols$Symbol.flags():772->rgb(239,107,107)
Symbols$Symbol.flatOwnerInfo():2303->rgb(237,105,105)
Symbols$Symbol.fullName(char, CharSequence):1309->rgb(238,105,105)
Symbols$Symbol.getAnnotation(Symbols$Symbol):212->rgb(222,82,82)
Symbols$Symbol.getterIn(Symbols$Symbol):2436->rgb(235,101,101)
Symbols$Symbol.getterName():2438->rgb(230,94,94)
Symbols$Symbol.hasAccessorFlag():212->rgb(245,115,115)
Symbols$Symbol.hasAllFlags(long):746->rgb(207,61,61)
Symbols$Symbol.hasAllFlags(long):747->rgb(245,116,116)
Symbols$Symbol.hasAnnotation(Symbols$Symbol):212->rgb(228,91,91)
Symbols$Symbol.hasAttachment(ClassTag):212->rgb(222,83,83)
Symbols$Symbol.hasCompleteInfo():1587->rgb(218,76,76)
Symbols$Symbol.hasDefault():212->rgb(239,107,107)
Symbols$Symbol.hasDeprecatedInheritanceAnnotation():907->rgb(217,75,75)
Symbols$Symbol.hasFlag(int):741->rgb(251,124,124)
Symbols$Symbol.hasFlag(long):738->rgb(245,115,115)
Symbols$Symbol.hasFlag(long):739->rgb(230,94,94)
Symbols$Symbol.hasJavaEnumFlag():212->rgb(233,99,99)
Symbols$Symbol.hasModuleFlag():212->rgb(216,74,74)
Symbols$Symbol.hasNoFlags(long):212->rgb(221,81,81)
Symbols$Symbol.hasPackageFlag():212->rgb(240,108,108)
Symbols$Symbol.hasVolatileType():949->rgb(219,77,77)
Symbols$Symbol.info():1510->rgb(238,105,105)
Symbols$Symbol.info():1526->rgb(238,105,105)
Symbols$Symbol.info():1529->rgb(231,96,96)
Symbols$Symbol.info():1530->rgb(210,65,65)
Symbols$Symbol.info():1540->rgb(214,70,70)
Symbols$Symbol.info_$eq(Types$Type):1550->rgb(209,63,63)
Symbols$Symbol.info_$eq(Types$Type):1551->rgb(251,124,124)
Symbols$Symbol.initialize():1678->rgb(221,80,80)
Symbols$Symbol.isArtifact():212->rgb(247,118,118)
Symbols$Symbol.isCaseAccessor():212->rgb(251,124,124)
Symbols$Symbol.isCoDefinedWith(Symbols$Symbol):2223->rgb(217,75,75)
Symbols$Symbol.isCoDefinedWith(Symbols$Symbol):2224->rgb(208,62,62)
Symbols$Symbol.isCoDefinedWith(Symbols$Symbol):2225->rgb(253,127,127)
Symbols$Symbol.isCoDefinedWith(Symbols$Symbol):2226->rgb(238,106,106)
Symbols$Symbol.isCoDefinedWith(Symbols$Symbol):2227->rgb(245,116,116)
Symbols$Symbol.isConstant():1036->rgb(229,93,93)
Symbols$Symbol.isDeferred():212->rgb(210,64,64)
Symbols$Symbol.isDerivedValueClass():826->rgb(245,115,115)
Symbols$Symbol.isDerivedValueClass():827->rgb(229,93,93)
Symbols$Symbol.isEffectivelyFinal():1017->rgb(222,82,82)
Symbols$Symbol.isEffectivelyFinal():1018->rgb(245,115,115)
Symbols$Symbol.isEffectivelyFinal():1019->rgb(214,70,70)
Symbols$Symbol.isEffectivelyFinalOrNotOverridden():1023->rgb(229,92,92)
Symbols$Symbol.isErroneous():818->rgb(214,70,70)
Symbols$Symbol.isError():817->rgb(214,70,70)
Symbols$Symbol.isFinal():212->rgb(223,84,84)
Symbols$Symbol.isImplicit():212->rgb(219,77,77)
Symbols$Symbol.isInitialized():1106->rgb(243,113,113)
Symbols$Symbol.isInterface():212->rgb(200,51,51)
Symbols$Symbol.isJavaDefined():212->rgb(248,121,121)
Symbols$Symbol.isLazy():212->rgb(206,59,59)
Symbols$Symbol.isLess(Symbols$Symbol):1896->rgb(204,57,57)
Symbols$Symbol.isLess(Symbols$Symbol):1898->rgb(251,124,124)
Symbols$Symbol.isLess(Symbols$Symbol):1899->rgb(241,110,110)
Symbols$Symbol.isLocalToBlock():1033->rgb(216,74,74)
Symbols$Symbol.isLocalToThis():212->rgb(228,91,91)
Symbols$Symbol.isMethodWithExtension():830->rgb(249,122,122)
Symbols$Symbol.isMonomorphicType():892->rgb(235,101,101)
Symbols$Symbol.isMonomorphicType():894->rgb(210,65,65)
Symbols$Symbol.isMutable():212->rgb(210,65,65)
Symbols$Symbol.isNestedIn(Symbols$Symbol):1909->rgb(242,111,111)
Symbols$Symbol.isNotOverridden():1010->rgb(236,103,103)
Symbols$Symbol.isNumericSubClass(Symbols$Symbol):1933->rgb(202,53,53)
Symbols$Symbol.isOverridableMember():690->rgb(218,77,77)
Symbols$Symbol.isOverridingSymbol$lzycompute():2389->rgb(234,99,99)
Symbols$Symbol.isOverridingSymbol$lzycompute():2390->rgb(212,68,68)
Symbols$Symbol.isOverridingSymbol():2390->rgb(204,56,56)
Symbols$Symbol.isParamAccessor():212->rgb(201,52,52)
Symbols$Symbol.isParameter():212->rgb(206,60,60)
Symbols$Symbol.isPossibleInRefinement():1072->rgb(225,86,86)
Symbols$Symbol.isPrimaryConstructor():953->rgb(239,106,106)
Symbols$Symbol.isPrivate():212->rgb(221,81,81)
Symbols$Symbol.isPrivateLocal():212->rgb(249,121,121)
Symbols$Symbol.isProtected():212->rgb(215,72,72)
Symbols$Symbol.isPublic():212->rgb(221,81,81)
Symbols$Symbol.isSealed():212->rgb(254,128,128)
Symbols$Symbol.isSerializable():899->rgb(242,112,112)
Symbols$Symbol.isSpecialized():212->rgb(216,73,73)
Symbols$Symbol.isStable():948->rgb(223,84,84)
Symbols$Symbol.isStatic():993->rgb(248,120,120)
Symbols$Symbol.isStaticConstructor():997->rgb(209,64,64)
Symbols$Symbol.isStaticMember():1001->rgb(252,125,125)
Symbols$Symbol.isStaticModule():813->rgb(237,104,104)
Symbols$Symbol.isStrictFP():898->rgb(244,114,114)
Symbols$Symbol.isSubClass(Symbols$Symbol):1930->rgb(229,92,92)
Symbols$Symbol.isSuperAccessor():212->rgb(210,65,65)
Symbols$Symbol.isThisSym():816->rgb(208,62,62)
Symbols$Symbol.isTopLevel():1026->rgb(245,115,115)
Symbols$Symbol.isTraitOrInterface():212->rgb(219,78,78)
Symbols$Symbol.isWeakSubClass(Symbols$Symbol):1936->rgb(200,51,51)
Symbols$Symbol.javaBinaryNameString():1279->rgb(207,61,61)
Symbols$Symbol.javaClassName():1284->rgb(203,55,55)
Symbols$Symbol.javaSimpleName():1276->rgb(214,71,71)
Symbols$Symbol.localName():2440->rgb(216,73,73)
Symbols$Symbol.loop$2(int, Symbols$Symbol, char, ObjectRef):1297->rgb(207,61,61)
Symbols$Symbol.loop$2(int, Symbols$Symbol, char, ObjectRef):1304->rgb(234,99,99)
Symbols$Symbol.loop$3(List):2398->rgb(206,58,58)
Symbols$Symbol.makeSerializable():1824->rgb(234,99,99)
Symbols$Symbol.matchingInheritedSymbolIn(Symbols$Symbol):2343->rgb(200,50,50)
Symbols$Symbol.matchingSymbol(Symbols$Symbol, Types$Type):2317->rgb(215,72,72)
Symbols$Symbol.matchingSymbol(Types$Type, long):2321->rgb(212,68,68)
Symbols$Symbol.matchingSymbolInternal(Types$Type, Symbols$Symbol):2326->rgb(240,108,108)
Symbols$Symbol.matchingSymbolInternal(Types$Type, Symbols$Symbol):2327->rgb(243,113,113)
Symbols$Symbol.matchingSymbolInternal(Types$Type, Symbols$Symbol):2328->rgb(252,125,125)
Symbols$Symbol.mixinClasses():2145->rgb(232,97,97)
Symbols$Symbol.mixinClasses():2146->rgb(204,56,56)
Symbols$Symbol.modifyInfo(Function1):1558->rgb(214,71,71)
Symbols$Symbol.needsFlatClasses():836->rgb(218,76,76)
Symbols$Symbol.needsModuleSuffix():1270->rgb(221,81,81)
Symbols$Symbol.newClassSymbol(Names$TypeName, Position, long):1382->rgb(204,56,56)
Symbols$Symbol.newClassSymbol(Names$TypeName, Position, long):1386->rgb(234,100,100)
Symbols$Symbol.newExistentialSkolem(Symbols$Symbol, Object):452->rgb(252,126,126)
Symbols$Symbol.newImport(Position):354->rgb(212,67,67)
Symbols$Symbol.newLabel(Names$TermName, Position):320->rgb(202,53,53)
Symbols$Symbol.newMethod(Names$TermName, Position, long):316->rgb(247,119,119)
Symbols$Symbol.newModule(Names$TermName, Position, long):339->rgb(225,86,86)
Symbols$Symbol.newModule(Names$TermName, Position, long):341->rgb(214,71,71)
Symbols$Symbol.newModuleClass(Names$TypeName, Position, long):498->rgb(254,129,129)
Symbols$Symbol.newModuleClassSymbol(Names$TypeName, Position, long):369->rgb(224,85,85)
Symbols$Symbol.newNonClassSymbol(Names$TypeName, Position, long):1393->rgb(228,91,91)
Symbols$Symbol.newOverloaded(Types$Type, List):394->rgb(201,51,51)
Symbols$Symbol.newSyntheticValueParams(List):434->rgb(252,126,126)
Symbols$Symbol.newSyntheticValueParams(List, Function0):437->rgb(229,92,92)
Symbols$Symbol.newTermSymbol(Names$TermName, Position, long):1369->rgb(240,108,108)
Symbols$Symbol.newTermSymbol(Names$TermName, Position, long):1371->rgb(243,113,113)
Symbols$Symbol.newTermSymbol(Names$TermName, Position, long):1373->rgb(247,118,118)
Symbols$Symbol.nextOverriddenSymbol():2401->rgb(220,80,80)
Symbols$Symbol.originalInfo():1444->rgb(250,123,123)
Symbols$Symbol.originalOwner():1209->rgb(253,127,127)
Symbols$Symbol.overriddenSymbol(Symbols$Symbol):2339->rgb(223,84,84)
Symbols$Symbol.overridingSymbol(Symbols$Symbol):2351->rgb(253,128,128)
Symbols$Symbol.owner():1200->rgb(245,116,116)
Symbols$Symbol.owner():1201->rgb(226,88,88)
Symbols$Symbol.owner_$eq(Symbols$Symbol):1216->rgb(237,103,103)
Symbols$Symbol.packageObject():861->rgb(214,70,70)
Symbols$Symbol.packageObject():862->rgb(218,76,76)
Symbols$Symbol.paramss():1764->rgb(215,73,73)
Symbols$Symbol.pos():212->rgb(218,76,76)
Symbols$Symbol.privateWithin():1428->rgb(238,105,105)
Symbols$Symbol.qualifies$1(Symbols$Symbol, Types$Type):2324->rgb(231,95,95)
Symbols$Symbol.rawInfo():1598->rgb(208,62,62)
Symbols$Symbol.rawInfo():1600->rgb(200,50,50)
Symbols$Symbol.rawInfo():1601->rgb(251,124,124)
Symbols$Symbol.rawInfo():1603->rgb(253,128,128)
Symbols$Symbol.rawInfo():1605->rgb(205,58,58)
Symbols$Symbol.rawInfo():1606->rgb(227,90,90)
Symbols$Symbol.rawInfo():1611->rgb(200,51,51)
Symbols$Symbol.rawInfo():1613->rgb(210,65,65)
Symbols$Symbol.rawInfo():1619->rgb(209,63,63)
Symbols$Symbol.rawInfo():1621->rgb(225,87,87)
Symbols$Symbol.rawInfo():1623->rgb(243,112,112)
Symbols$Symbol.rawatt():212->rgb(202,53,53)
Symbols$Symbol.rawowner():247->rgb(225,87,87)
Symbols$Symbol.removeAttachment(ClassTag):212->rgb(220,79,79)
Symbols$Symbol.safeOwner():1203->rgb(202,53,53)
Symbols$Symbol.scala$reflect$internal$Symbols$Symbol$$$outer():212->rgb(225,87,87)
Symbols$Symbol.sealedSortName():2549->rgb(247,119,119)
Symbols$Symbol.setInfo(Types$Type):1556->rgb(249,122,122)
Symbols$Symbol.setInfoAndEnter(Types$Type):1572->rgb(212,67,67)
Symbols$Symbol.sourceFile():2513->rgb(254,129,129)
Symbols$Symbol.substInfo(List, List):1565->rgb(221,81,81)
Symbols$Symbol.suchThat(Function1):1968->rgb(230,94,94)
Symbols$Symbol.suchThat(Function1):1969->rgb(208,62,62)
Symbols$Symbol.superClass():2137->rgb(203,54,54)
Symbols$Symbol.tpe():1459->rgb(221,81,81)
Symbols$Symbol.tpeHK():1465->rgb(202,53,53)
Symbols$Symbol.tpe_$times():1494->rgb(247,118,118)
Symbols$Symbol.typeOfThis():2041->rgb(243,113,113)
Symbols$Symbol.typeParams():1759->rgb(224,85,85)
Symbols$Symbol.unexpandedName():1250->rgb(220,79,79)
Symbols$Symbol.unlock():585->rgb(224,85,85)
Symbols$Symbol.unsafeTypeParamPhase():1724->rgb(237,104,104)
Symbols$Symbol.unsafeTypeParamPhase():1725->rgb(237,104,104)
Symbols$Symbol.unsafeTypeParams():1737->rgb(229,93,93)
Symbols$Symbol.unsafeTypeParams():1738->rgb(231,96,96)
Symbols$Symbol.variance():1150->rgb(218,77,77)
Symbols$Symbol.variance():1151->rgb(226,88,88)
Symbols$SymbolContextApiImpl.isJavaEnum():119->rgb(241,110,110)
Symbols$TermSymbol.cloneSymbolImpl(Symbols$Symbol, long):2759->rgb(230,93,93)
Symbols$TermSymbol.cloneSymbolImpl(Symbols$Symbol, long):2839->rgb(200,51,51)
Symbols$TermSymbol.existentialBound():2759->rgb(239,107,107)
Symbols$TermSymbol.existentialBound():2836->rgb(252,126,126)
Symbols$TermSymbol.isClassConstructor():2817->rgb(241,109,109)
Symbols$TermSymbol.isConstructor():2819->rgb(243,112,112)
Symbols$TermSymbol.isLocalDummy():2815->rgb(223,84,84)
Symbols$TermSymbol.isMethod():2795->rgb(251,125,125)
Symbols$TermSymbol.isMixinConstructor():2818->rgb(213,69,69)
Symbols$TermSymbol.isModule():2796->rgb(216,73,73)
Symbols$TermSymbol.isOverloaded():2797->rgb(238,105,105)
Symbols$TermSymbol.isTermMacro():2785->rgb(219,78,78)
Symbols$TermSymbol.isVariable():2784->rgb(212,68,68)
Symbols$TermSymbol.moduleClass():2791->rgb(214,70,70)
Symbols$TermSymbol.name():2759->rgb(212,67,67)
Symbols$TermSymbol.name():2769->rgb(206,59,59)
Symbols$TermSymbol.name():2770->rgb(245,116,116)
Symbols$TermSymbol.outerSource():2864->rgb(230,94,94)
Symbols$TermSymbol.rawname():2767->rgb(220,80,80)
Symbols$TermSymbol.scala$reflect$internal$Symbols$TermSymbol$$$outer():2759->rgb(242,111,111)
Symbols$TypeHistory.<init>(SymbolTable, int, Types$Type, Symbols$TypeHistory):3698->rgb(228,91,91)
Symbols$TypeSkolem.isAbstractType():3198->rgb(206,58,58)
Symbols$TypeSkolem.typeParams():3212->rgb(215,72,72)
Symbols$TypeSymbol.<init>(SymbolTable, Symbols$Symbol, Position, Names$TypeName):3168->rgb(211,67,67)
Symbols$TypeSymbol.info_$eq(Types$Type):3147->rgb(203,54,54)
Symbols$TypeSymbol.isContravariant():3062->rgb(249,121,121)
Symbols$TypeSymbol.isCovariant():3063->rgb(234,100,100)
Symbols$TypeSymbol.isExistentiallyBound():3064->rgb(230,93,93)
Symbols$TypeSymbol.isNonBottomSubClass(Symbols$Symbol):3151->rgb(203,54,54)
Symbols$TypeSymbol.isNonBottomSubClass(Symbols$Symbol):3152->rgb(244,114,114)
Symbols$TypeSymbol.isType():3031->rgb(220,79,79)
Symbols$TypeSymbol.isTypeParameter():3065->rgb(214,71,71)
Symbols$TypeSymbol.isTypeParameterOrSkolem():3066->rgb(215,72,72)
Symbols$TypeSymbol.maybeUpdateTypeCache():3118->rgb(241,110,110)
Symbols$TypeSymbol.maybeUpdateTypeCache():3119->rgb(208,61,61)
Symbols$TypeSymbol.maybeUpdateTypeCache():3120->rgb(240,108,108)
Symbols$TypeSymbol.maybeUpdateTypeCache():3122->rgb(243,113,113)
Symbols$TypeSymbol.name():3031->rgb(214,70,70)
Symbols$TypeSymbol.name():3041->rgb(223,84,84)
Symbols$TypeSymbol.name():3042->rgb(253,128,128)
Symbols$TypeSymbol.newPrefix():3082->rgb(202,52,52)
Symbols$TypeSymbol.newTypeRef(List):3083->rgb(206,59,59)
Symbols$TypeSymbol.tpeHK():3108->rgb(253,127,127)
Symbols$TypeSymbol.tpe_$times():3100->rgb(238,106,106)
Symbols$TypeSymbol.typeConstructor():3105->rgb(223,83,83)
Symbols$TypeSymbol.updateTypeCache():3129->rgb(201,52,52)
Symbols$TypeSymbol.updateTypeCache():3133->rgb(223,83,83)
Symbols$TypeSymbol.updateTypeCache():3136->rgb(217,75,75)
Symbols$TypeSymbolApi.isType$(Symbols$TypeSymbolApi):704->rgb(223,84,84)
Symbols.$anonfun$cloneSymbols$1(Symbols$Symbol):3649->rgb(206,59,59)
Symbols.$anonfun$cloneSymbolsAndModify$1(Function1, Symbols$Symbol):3660->rgb(200,50,50)
Symbols.$anonfun$deriveSymbols$1(List, List, Symbols$Symbol):3589->rgb(251,124,124)
Symbols.$anonfun$forEachRelevantSymbols$1$adapted(Function1, Symbols$Symbol):3733->rgb(206,60,60)
Symbols.cloneSymbols$(Symbols, List):3648->rgb(223,84,84)
Symbols.cloneSymbols(List):3649->rgb(245,116,116)
Symbols.cloneSymbolsAndModify$(Symbols, List, Function1):3659->rgb(231,96,96)
Symbols.cloneSymbolsAndModify(List, Function1):3660->rgb(211,66,66)
Symbols.cloneSymbolsAtOwner$(Symbols, List, Symbols$Symbol):3650->rgb(236,102,102)
Symbols.cloneSymbolsAtOwner(List, Symbols$Symbol):3651->rgb(215,71,71)
Symbols.closestEnclMethod$(Symbols, Symbols$Symbol):3686->rgb(214,70,70)
Symbols.closestEnclMethod(Symbols$Symbol):3687->rgb(254,129,129)
Symbols.createFromClonedSymbols$(Symbols, List, Types$Type, Function2):3667->rgb(252,126,126)
Symbols.createFromClonedSymbols(List, Types$Type, Function2):3669->rgb(247,118,118)
Symbols.defineOriginalOwner$(Symbols, Symbols$Symbol, Symbols$Symbol):88->rgb(221,81,81)
Symbols.defineOriginalOwner(Symbols$Symbol, Symbols$Symbol):89->rgb(229,92,92)
Symbols.deriveSymbols$(Symbols, List, Function1):3587->rgb(221,81,81)
Symbols.deriveSymbols(List, Function1):3588->rgb(250,123,123)
Symbols.deriveSymbols(List, Function1):3589->rgb(239,107,107)
Symbols.deriveType$(Symbols, List, Function1, Types$Type):3616->rgb(253,128,128)
Symbols.deriveType(List, Function1, Types$Type):3617->rgb(254,129,129)
Symbols.lockedCount$(Symbols):39->rgb(222,82,82)
Symbols.lockedCount():39->rgb(203,55,55)
Symbols.mapParamss$(Symbols, Symbols$Symbol, Function1):3678->rgb(237,105,105)
Symbols.mapParamss(Symbols$Symbol, Function1):3678->rgb(220,80,80)
Symbols.markFlagsCompleted$(Symbols, Seq, long):3737->rgb(235,101,101)
Symbols.markFlagsCompleted(Seq, long):3731->rgb(202,53,53)
Symbols.saveOriginalOwner$(Symbols, Symbols$Symbol):80->rgb(202,53,53)
Symbols.saveOriginalOwner(Symbols$Symbol):83->rgb(218,77,77)
Symbols.saveOriginalOwner(Symbols$Symbol):84->rgb(233,98,98)
SyntaxAnalyzer$ParserPhase.apply(CompilationUnits$CompilationUnit):99->rgb(201,52,52)
SyntaxAnalyzer.scala$tools$nsc$ast$parser$SyntaxAnalyzer$$initialUnitBody(CompilationUnits$CompilationUnit):87->rgb(227,90,90)
SyntheticMethods$$anonfun$1.applyOrElse(Object, Function1):184->rgb(237,105,105)
SyntheticMethods.$anonfun$addSyntheticMethods$1$adapted(Symbols$Symbol, Symbols$Symbol):67->rgb(225,87,87)
SyntheticMethods.$anonfun$addSyntheticMethods$1(Symbols$Symbol, Symbols$Symbol):67->rgb(214,70,70)
SyntheticMethods.$anonfun$addSyntheticMethods$11(SyntheticMethods, Contexts$Context, MethodSynthesis$ClassMethodSynthesis, BooleanRef, Symbols$Symbol):215->rgb(253,127,127)
SyntheticMethods.$anonfun$addSyntheticMethods$14(SyntheticMethods, MethodSynthesis$ClassMethodSynthesis):251->rgb(253,127,127)
SyntheticMethods.$anonfun$addSyntheticMethods$15(SyntheticMethods, MethodSynthesis$ClassMethodSynthesis, int):252->rgb(204,56,56)
SyntheticMethods.$anonfun$addSyntheticMethods$16(SyntheticMethods, MethodSynthesis$ClassMethodSynthesis):122->rgb(210,65,65)
SyntheticMethods.$anonfun$addSyntheticMethods$18(SyntheticMethods, MethodSynthesis$ClassMethodSynthesis):254->rgb(229,93,93)
SyntheticMethods.$anonfun$addSyntheticMethods$19(SyntheticMethods, Contexts$Context, MethodSynthesis$ClassMethodSynthesis, BooleanRef):255->rgb(225,87,87)
SyntheticMethods.$anonfun$addSyntheticMethods$20(SyntheticMethods, MethodSynthesis$ClassMethodSynthesis, int, Symbols$Symbol):278->rgb(218,76,76)
SyntheticMethods.$anonfun$addSyntheticMethods$20(SyntheticMethods, MethodSynthesis$ClassMethodSynthesis, int, Symbols$Symbol):279->rgb(218,77,77)
SyntheticMethods.$anonfun$addSyntheticMethods$20(SyntheticMethods, MethodSynthesis$ClassMethodSynthesis, int, Symbols$Symbol):285->rgb(226,89,89)
SyntheticMethods.$anonfun$addSyntheticMethods$20(SyntheticMethods, MethodSynthesis$ClassMethodSynthesis, int, Symbols$Symbol):287->rgb(250,123,123)
SyntheticMethods.$anonfun$addSyntheticMethods$21(SyntheticMethods, Symbols$TermSymbol, Symbols$Symbol):282->rgb(219,77,77)
SyntheticMethods.$anonfun$addSyntheticMethods$25(SyntheticMethods, MethodSynthesis$ClassMethodSynthesis, int):303->rgb(201,52,52)
SyntheticMethods.$anonfun$addSyntheticMethods$26(SyntheticMethods, MethodSynthesis$ClassMethodSynthesis):304->rgb(243,113,113)
SyntheticMethods.$anonfun$addSyntheticMethods$27(SyntheticMethods, Contexts$Context, MethodSynthesis$ClassMethodSynthesis, BooleanRef):305->rgb(226,89,89)
SyntheticMethods.$anonfun$addSyntheticMethods$34$adapted(SyntheticMethods, MethodSynthesis$ClassMethodSynthesis, Tuple2):359->rgb(214,70,70)
SyntheticMethods.$anonfun$addSyntheticMethods$34(SyntheticMethods, MethodSynthesis$ClassMethodSynthesis, Tuple2):359->rgb(254,129,129)
SyntheticMethods.$anonfun$addSyntheticMethods$35(Tuple2):359->rgb(232,97,97)
SyntheticMethods.$anonfun$addSyntheticMethods$36(SyntheticMethods, MethodSynthesis$ClassMethodSynthesis, Symbols$Symbol):368->rgb(219,77,77)
SyntheticMethods.$anonfun$addSyntheticMethods$46(SyntheticMethods, Trees$Template, Contexts$Context, MethodSynthesis$ClassMethodSynthesis, int, BooleanRef, List):413->rgb(217,76,76)
SyntheticMethods.$anonfun$addSyntheticMethods$46(SyntheticMethods, Trees$Template, Contexts$Context, MethodSynthesis$ClassMethodSynthesis, int, BooleanRef, List):414->rgb(230,94,94)
SyntheticMethods.$anonfun$addSyntheticMethods$8(SyntheticMethods, MethodSynthesis$ClassMethodSynthesis, Symbols$Symbol):116->rgb(249,122,122)
SyntheticMethods.$anonfun$addSyntheticMethods$9$adapted(MethodSynthesis$ClassMethodSynthesis, Function1, Object):122->rgb(250,122,122)
SyntheticMethods.accessors$1(MethodSynthesis$ClassMethodSynthesis):90->rgb(253,127,127)
SyntheticMethods.addSyntheticMethods$(SyntheticMethods, Trees$Template, Symbols$Symbol, Contexts$Context):65->rgb(253,127,127)
SyntheticMethods.addSyntheticMethods(Trees$Template, Symbols$Symbol, Contexts$Context):412->rgb(237,104,104)
SyntheticMethods.addSyntheticMethods(Trees$Template, Symbols$Symbol, Contexts$Context):67->rgb(248,120,120)
SyntheticMethods.callStaticsMethod$1(String, Seq):102->rgb(243,112,112)
SyntheticMethods.callStaticsMethodName$1(Names$TermName, Seq):98->rgb(208,61,61)
SyntheticMethods.canEqualMethod$1(Contexts$Context, MethodSynthesis$ClassMethodSynthesis, BooleanRef):133->rgb(201,52,52)
SyntheticMethods.caseTemplateBody$1(Trees$Template, Contexts$Context, MethodSynthesis$ClassMethodSynthesis, int, BooleanRef):409->rgb(232,96,96)
SyntheticMethods.chooseHashcode$1(MethodSynthesis$ClassMethodSynthesis, int):292->rgb(235,102,102)
SyntheticMethods.equalsCaseClassMethod$1(Contexts$Context, MethodSynthesis$ClassMethodSynthesis, BooleanRef):210->rgb(221,81,81)
SyntheticMethods.equalsCore$1(Symbols$Symbol, List, Contexts$Context, MethodSynthesis$ClassMethodSynthesis, BooleanRef):182->rgb(213,69,69)
SyntheticMethods.equalsCore$1(Symbols$Symbol, List, Contexts$Context, MethodSynthesis$ClassMethodSynthesis, BooleanRef):192->rgb(234,99,99)
SyntheticMethods.equalsCore$1(Symbols$Symbol, List, Contexts$Context, MethodSynthesis$ClassMethodSynthesis, BooleanRef):193->rgb(225,86,86)
SyntheticMethods.equalsCore$1(Symbols$Symbol, List, Contexts$Context, MethodSynthesis$ClassMethodSynthesis, BooleanRef):194->rgb(243,113,113)
SyntheticMethods.extras$1(MethodSynthesis$ClassMethodSynthesis):367->rgb(250,123,123)
SyntheticMethods.forwardToRuntime$1(Symbols$Symbol, MethodSynthesis$ClassMethodSynthesis):94->rgb(228,91,91)
SyntheticMethods.hasOverridingImplementation$1(Symbols$Symbol, MethodSynthesis$ClassMethodSynthesis):109->rgb(246,117,117)
SyntheticMethods.impls$1(MethodSynthesis$ClassMethodSynthesis, List):359->rgb(217,74,74)
SyntheticMethods.productIteratorMethod$1(MethodSynthesis$ClassMethodSynthesis):115->rgb(214,71,71)
SyntheticMethods.shouldGenerate$1(Symbols$Symbol, MethodSynthesis$ClassMethodSynthesis):347->rgb(239,108,108)
SyntheticMethods.specializedHashcode$1(MethodSynthesis$ClassMethodSynthesis, int):276->rgb(232,96,96)
SyntheticMethods.synthesize$1(Contexts$Context, MethodSynthesis$ClassMethodSynthesis, int, BooleanRef):374->rgb(201,52,52)
SyntheticMethods.thatCast$1(Symbols$Symbol, MethodSynthesis$ClassMethodSynthesis):160->rgb(250,123,123)
SyntheticMethods.thatTest$1(Symbols$Symbol, MethodSynthesis$ClassMethodSynthesis):151->rgb(253,127,127)
System.checkKey(String):837->rgb(233,98,98)
System.getProperty(String, String):750->rgb(225,87,87)
SystemProperties.$anonfun$contains$2$adapted(Object):50->rgb(243,113,113)
SystemProperties.contains(Object):31->rgb(219,78,78)
SystemProperties.contains(String):50->rgb(224,84,84)
Taggers.materializeClassTag(Types$Type):68->rgb(226,88,88)
TailCalls$Phase.apply(CompilationUnits$CompilationUnit):35->rgb(226,88,88)
TailCalls$TailCallElimination$ClonedTailContext.isMandatory():184->rgb(233,99,99)
TailCalls$TailCallElimination$DefDefTailContext.isEligible():150->rgb(212,68,68)
TailCalls$TailCallElimination$DefDefTailContext.isTransformed():150->rgb(225,86,86)
TailCalls$TailCallElimination$DefDefTailContext.label$lzycompute():156->rgb(229,92,92)
TailCalls$TailCallElimination$DefDefTailContext.label():150->rgb(230,93,93)
TailCalls$TailCallElimination$DefDefTailContext.label():156->rgb(244,115,115)
TailCalls$TailCallElimination$DefDefTailContext.mkLabel():165->rgb(236,102,102)
TailCalls$TailCallElimination$DefDefTailContext.mkLabel():168->rgb(239,107,107)
TailCalls$TailCallElimination$TailContext.isEligible$(TailCalls$TailCallElimination$TailContext):119->rgb(211,66,66)
TailCalls$TailCallElimination$TailContext.isEligible():119->rgb(206,60,60)
TailCalls$TailCallElimination$TailContext.isMandatory$(TailCalls$TailCallElimination$TailContext):120->rgb(223,84,84)
TailCalls$TailCallElimination$TailContext.isMandatory():120->rgb(249,122,122)
TailCalls$TailCallElimination$TailContext.isTransformed$(TailCalls$TailCallElimination$TailContext):121->rgb(219,78,78)
TailCalls$TailCallElimination$TailContext.isTransformed():121->rgb(250,123,123)
TailCalls$TailCallElimination.$anonfun$noTailTransforms$1(TailCalls$TailCallElimination, TailCalls$TailCallElimination$TailContext, Trees$Tree):217->rgb(209,64,64)
TailCalls$TailCallElimination.$anonfun$transform$13(TailCalls$TailCallElimination, Trees$Tree):333->rgb(215,72,72)
TailCalls$TailCallElimination.$anonfun$transform$14(TailCalls$TailCallElimination, Trees$Tree):345->rgb(225,86,86)
TailCalls$TailCallElimination.$anonfun$transform$6(TailCalls$TailCallElimination, Trees$Tree, List, TailCalls$TailCallElimination$DefDefTailContext, Trees$Tree, Trees$Tree):290->rgb(201,52,52)
TailCalls$TailCallElimination.fail$1(String, Trees$Tree, Trees$Tree, Trees$Tree, List, boolean):237->rgb(244,114,114)
TailCalls$TailCallElimination.fail$1(String, Trees$Tree, Trees$Tree, Trees$Tree, List, boolean):238->rgb(213,69,69)
TailCalls$TailCallElimination.fail$1(String, Trees$Tree, Trees$Tree, Trees$Tree, List, boolean):239->rgb(237,104,104)
TailCalls$TailCallElimination.failHere$1(String, Trees$Tree, Trees$Tree, Trees$Tree, List, boolean):244->rgb(239,107,107)
TailCalls$TailCallElimination.isEligible$1(Trees$DefDef):269->rgb(206,59,59)
TailCalls$TailCallElimination.noTailTransform(Trees$Tree):214->rgb(253,127,127)
TailCalls$TailCallElimination.noTailTransforms(List):216->rgb(224,85,85)
TailCalls$TailCallElimination.noTailTransforms(List):217->rgb(217,75,75)
TailCalls$TailCallElimination.rewriteApply$1(Trees$Tree, Trees$Tree, List, List, boolean, Trees$Tree):255->rgb(246,118,118)
TailCalls$TailCallElimination.rewriteApply$1(Trees$Tree, Trees$Tree, List, List, boolean, Trees$Tree):259->rgb(249,122,122)
TailCalls$TailCallElimination.transform(Trees$Tree):273->rgb(247,118,118)
TailCalls$TailCallElimination.transform(Trees$Tree):277->rgb(203,54,54)
TailCalls$TailCallElimination.transform(Trees$Tree):281->rgb(206,59,59)
TailCalls$TailCallElimination.transform(Trees$Tree):287->rgb(218,77,77)
TailCalls$TailCallElimination.transform(Trees$Tree):289->rgb(239,107,107)
TailCalls$TailCallElimination.transform(Trees$Tree):322->rgb(244,114,114)
TailCalls$TailCallElimination.transform(Trees$Tree):328->rgb(209,64,64)
TailCalls$TailCallElimination.transform(Trees$Tree):333->rgb(249,122,122)
TailCalls$TailCallElimination.transform(Trees$Tree):337->rgb(216,73,73)
TailCalls$TailCallElimination.transform(Trees$Tree):338->rgb(207,60,60)
TailCalls$TailCallElimination.transform(Trees$Tree):345->rgb(216,74,74)
TailCalls$TailCallElimination.transform(Trees$Tree):349->rgb(239,107,107)
TailCalls$TailCallElimination.transform(Trees$Tree):350->rgb(235,101,101)
TailCalls$TailCallElimination.transform(Trees$Tree):351->rgb(230,93,93)
TailCalls$TailCallElimination.transform(Trees$Tree):357->rgb(249,122,122)
TailCalls$TailCallElimination.transform(Trees$Tree):376->rgb(248,121,121)
TailCalls$TailCallElimination.transform(Trees$Tree):377->rgb(236,103,103)
TailCalls$TailCallElimination.transform(Trees$Tree):379->rgb(211,66,66)
TailCalls$TailCallElimination.transform(Trees$Tree):380->rgb(227,90,90)
TailCalls$TailCallElimination.transform(Trees$Tree):397->rgb(221,81,81)
TailCalls$TailCallElimination.transform(Trees$Tree):401->rgb(225,87,87)
TailCalls$TailCallElimination.transform(Trees$Tree):402->rgb(215,73,73)
TailCalls$TailCallElimination.transform(Trees$Tree):405->rgb(237,104,104)
TailCalls$TailCallElimination.transform(Trees$Tree, TailCalls$TailCallElimination$TailContext):209->rgb(253,128,128)
TailCalls$TailCallElimination.transform(Trees$TreeApi):90->rgb(233,99,99)
TailCalls$TailCallElimination.transformArgs$1(List, boolean):230->rgb(225,86,86)
TailCalls$TailCallElimination.transformUnit(CompilationUnits$CompilationUnit):196->rgb(253,127,127)
Thread.run():748->rgb(243,113,113)
ThreadLocal$ThreadLocalMap.access$000(ThreadLocal$ThreadLocalMap, ThreadLocal):298->rgb(201,51,51)
ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):414->rgb(205,57,57)
ThreadLocal.get():163->rgb(240,109,109)
ThreadLocalCoders$Cache.forName(Object):62->rgb(247,118,118)
ThreadLocalCoders.encoderFor(Object):131->rgb(211,66,66)
ThreadPoolExecutor$Worker.run():624->rgb(233,99,99)
ThreadPoolExecutor.runWorker(ThreadPoolExecutor$Worker):1149->rgb(226,88,88)
Throwable.<init>():251->rgb(233,99,99)
TimSort.binarySort(Object[], int, int, int, Comparator):296->rgb(243,113,113)
TimSort.binarySort(Object[], int, int, int, Comparator):313->rgb(249,122,122)
TimSort.countRunAndMakeAscending(Object[], int, int, Comparator):355->rgb(223,84,84)
TimSort.countRunAndMakeAscending(Object[], int, int, Comparator):356->rgb(222,82,82)
TimSort.sort(Object[], int, int, Comparator, Object[], int, int):220->rgb(243,113,113)
TimSort.sort(Object[], int, int, Comparator, Object[], int, int):221->rgb(241,110,110)
TimSort.sort(Object[], int, int, Comparator, Object[], int, int):239->rgb(208,62,62)
Transform$Phase.apply(CompilationUnits$CompilationUnit):30->rgb(213,69,69)
TraversableForwarder.copyToArray$(TraversableForwarder, Object, int):62->rgb(237,103,103)
TraversableForwarder.copyToArray(Object, int):62->rgb(247,118,118)
TraversableForwarder.foreach$(TraversableForwarder, Function1):35->rgb(225,87,87)
TraversableForwarder.foreach(Function1):35->rgb(210,65,65)
TraversableLike$WithFilter.$anonfun$foreach$1(TraversableLike$WithFilter, Function1, Object):789->rgb(251,124,124)
TraversableLike$WithFilter.$anonfun$map$2(TraversableLike$WithFilter, Function1, Builder, Object):739->rgb(233,98,98)
TraversableLike$WithFilter.$anonfun$withFilter$1$adapted(TraversableLike$WithFilter, Function1, Object):800->rgb(210,65,65)
TraversableLike$WithFilter.$anonfun$withFilter$1(TraversableLike$WithFilter, Function1, Object):800->rgb(224,85,85)
TraversableLike$WithFilter.foreach(Function1):788->rgb(249,122,122)
TraversableLike$WithFilter.map(Function1, CanBuildFrom):738->rgb(203,55,55)
TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object):248->rgb(241,110,110)
TraversableLike.$anonfun$flatMap$1(Function1, Builder, Object):241->rgb(250,123,123)
TraversableLike.$anonfun$map$1(Function1, Builder, Object):234->rgb(225,86,86)
TraversableLike.$anonfun$partition$1(Function1, Builder, Builder, Object):314->rgb(222,82,82)
TraversableLike.builder$1(CanBuildFrom):229->rgb(213,69,69)
TraversableLike.builder$2(CanBuildFrom):239->rgb(240,108,108)
TraversableLike.collect$(TraversableLike, PartialFunction, CanBuildFrom):269->rgb(234,100,100)
TraversableLike.collect(PartialFunction, CanBuildFrom):271->rgb(220,79,79)
TraversableLike.filter$(TraversableLike, Function1):259->rgb(239,107,107)
TraversableLike.filter(Function1):259->rgb(207,61,61)
TraversableLike.filterImpl$(TraversableLike, Function1, boolean):245->rgb(240,109,109)
TraversableLike.filterImpl(Function1, boolean):246->rgb(207,61,61)
TraversableLike.filterImpl(Function1, boolean):247->rgb(235,102,102)
TraversableLike.filterNot$(TraversableLike, Function1):267->rgb(227,90,90)
TraversableLike.filterNot(Function1):267->rgb(216,73,73)
TraversableLike.flatMap$(TraversableLike, Function1, CanBuildFrom):238->rgb(233,98,98)
TraversableLike.flatMap(Function1, CanBuildFrom):240->rgb(227,90,90)
TraversableLike.flatMap(Function1, CanBuildFrom):241->rgb(242,111,111)
TraversableLike.init$(TraversableLike):450->rgb(248,121,121)
TraversableLike.init():456->rgb(236,102,102)
TraversableLike.map$(TraversableLike, Function1, CanBuildFrom):227->rgb(227,90,90)
TraversableLike.map(Function1, CanBuildFrom):233->rgb(203,55,55)
TraversableLike.map(Function1, CanBuildFrom):234->rgb(203,55,55)
TraversableLike.partition$(TraversableLike, Function1):312->rgb(241,109,109)
TraversableLike.partition(Function1):313->rgb(219,77,77)
TraversableLike.partition(Function1):314->rgb(209,63,63)
TraversableLike.scanLeft$(TraversableLike, Object, Function2, CanBuildFrom):369->rgb(234,99,99)
TraversableLike.scanLeft(Object, Function2, CanBuildFrom):370->rgb(247,119,119)
TraversableLike.to$(TraversableLike, CanBuildFrom):587->rgb(211,67,67)
TraversableLike.to(CanBuildFrom):588->rgb(222,82,82)
TraversableLike.to(CanBuildFrom):589->rgb(214,70,70)
TraversableLike.to(CanBuildFrom):590->rgb(201,52,52)
TraversableLike.withFilter$(TraversableLike, Function1):711->rgb(235,102,102)
TraversableLike.withFilter(Function1):711->rgb(201,51,51)
TraversableOnce.$anonfun$foldLeft$1$adapted(Function2, ObjectRef, Object):157->rgb(232,96,96)
TraversableOnce.$anonfun$foldLeft$1(Function2, ObjectRef, Object):157->rgb(236,103,103)
TraversableOnce.$anonfun$toMap$1(Predef$$less$colon$less, Builder, Object):317->rgb(236,103,103)
TraversableOnce.$div$colon$(TraversableOnce, Object, Function2):151->rgb(240,109,109)
TraversableOnce.$div$colon(Object, Function2):151->rgb(232,97,97)
TraversableOnce.copyToArray$(TraversableOnce, Object, int):277->rgb(208,61,61)
TraversableOnce.copyToArray(Object, int):278->rgb(215,71,71)
TraversableOnce.foldLeft$(TraversableOnce, Object, Function2):155->rgb(219,77,77)
TraversableOnce.foldLeft(Object, Function2):157->rgb(237,103,103)
TraversableOnce.mkString$(TraversableOnce, String, String, String):322->rgb(203,54,54)
TraversableOnce.mkString(String, String, String):323->rgb(216,73,73)
TraversableOnce.nonEmpty$(TraversableOnce):111->rgb(205,58,58)
TraversableOnce.nonEmpty():111->rgb(239,106,106)
TraversableOnce.size$(TraversableOnce):105->rgb(224,85,85)
TraversableOnce.size():107->rgb(248,120,120)
TraversableOnce.to$(TraversableOnce, CanBuildFrom):308->rgb(219,77,77)
TraversableOnce.to(CanBuildFrom):310->rgb(218,76,76)
TraversableOnce.toIndexedSeq$(TraversableOnce):300->rgb(241,110,110)
TraversableOnce.toIndexedSeq():300->rgb(248,120,120)
TraversableOnce.toList$(TraversableOnce):294->rgb(227,89,89)
TraversableOnce.toList():294->rgb(211,66,66)
TraversableOnce.toMap$(TraversableOnce, Predef$$less$colon$less):314->rgb(218,76,76)
TraversableOnce.toMap(Predef$$less$colon$less):316->rgb(222,82,82)
TraversableOnce.toSet$(TraversableOnce):304->rgb(201,52,52)
TraversableOnce.toSet():304->rgb(220,79,79)
TreeAndTypeAnalysis$CheckableTreeAndTypeAnalysis.$anonfun$enumerateSubtypes$13(Symbols$Symbol):168->rgb(247,119,119)
TreeAndTypeAnalysis$CheckableTreeAndTypeAnalysis.enumerateSubtypes$(TreeAndTypeAnalysis$CheckableTreeAndTypeAnalysis, Types$Type, boolean):99->rgb(205,57,57)
TreeAndTypeAnalysis$CheckableTreeAndTypeAnalysis.enumerateSubtypes(Types$Type, boolean):168->rgb(213,70,70)
TreeAndTypeAnalysis$CheckableTreeAndTypeAnalysis.uncheckableType$(TreeAndTypeAnalysis$CheckableTreeAndTypeAnalysis, Types$Type):209->rgb(232,97,97)
TreeAndTypeAnalysis$CheckableTreeAndTypeAnalysis.uncheckableType(Types$Type):211->rgb(210,65,65)
TreeAndTypeAnalysis.instanceOfTpImplies$(TreeAndTypeAnalysis, Types$Type, Types$Type):71->rgb(249,122,122)
TreeAndTypeAnalysis.instanceOfTpImplies(Types$Type, Types$Type):82->rgb(253,127,127)
TreeBuilder.makeTupleType(List):46->rgb(225,87,87)
TreeDSL$CODE$.$anonfun$nullSafe$1(TreeDSL$CODE$, Function1, Trees$Tree, Trees$Tree):26->rgb(235,101,101)
TreeDSL$CODE$.BLOCK(Seq):138->rgb(212,68,68)
TreeDSL$CODE$.FALSE():37->rgb(247,119,119)
TreeDSL$CODE$.REF(Symbols$Symbol):142->rgb(250,123,123)
TreeDSL$CODE$.SOME(Seq):139->rgb(214,71,71)
TreeDSL$CODE$LIT$.typed(Object):31->rgb(215,72,72)
TreeDSL$CODE$TreeMethods.MEMBER_$eq$eq(Trees$Tree):64->rgb(233,99,99)
TreeGen.$anonfun$mkMethodForFunctionBody$4(TreeGen, Trees$Tree, Symbols$Symbol):318->rgb(247,119,119)
TreeGen.mkApplyIfNeeded(Trees$Tree):116->rgb(230,94,94)
TreeGen.mkAsInstanceOf(Trees$Tree, Types$Type, boolean, boolean):262->rgb(222,82,82)
TreeGen.mkAttributedQualifier(Types$Type):62->rgb(245,115,115)
TreeGen.mkAttributedQualifier(Types$Type, Symbols$Symbol):73->rgb(238,106,106)
TreeGen.mkAttributedQualifier(Types$Type, Symbols$Symbol):77->rgb(239,108,108)
TreeGen.mkAttributedQualifier(Types$Type, Symbols$Symbol):84->rgb(221,81,81)
TreeGen.mkAttributedRef(Symbols$Symbol):156->rgb(211,67,67)
TreeGen.mkAttributedRef(Symbols$Symbol):160->rgb(242,111,111)
TreeGen.mkAttributedRef(Symbols$Symbol):162->rgb(201,52,52)
TreeGen.mkAttributedRef(Types$Type, Symbols$Symbol):150->rgb(229,93,93)
TreeGen.mkAttributedSelect(Trees$Tree, Symbols$Symbol):207->rgb(203,55,55)
TreeGen.mkAttributedSelect(Trees$Tree, Symbols$Symbol):221->rgb(208,62,62)
TreeGen.mkAttributedSelect(Trees$Tree, Symbols$Symbol):232->rgb(247,119,119)
TreeGen.mkAttributedSelect(Trees$Tree, Symbols$Symbol):236->rgb(235,101,101)
TreeGen.mkAttributedStableRef(Symbols$Symbol):197->rgb(235,101,101)
TreeGen.mkAttributedThis(Symbols$Symbol):200->rgb(229,93,93)
TreeGen.mkAttributedTypeApply(Trees$Tree, Symbols$Symbol, List):247->rgb(221,81,81)
TreeGen.mkCast(Trees$Tree, Types$Type):151->rgb(223,84,84)
TreeGen.mkImportFromSelector(Symbols$Symbol, List):35->rgb(201,52,52)
TreeGen.mkImportFromSelector(Symbols$Symbol, List):38->rgb(236,103,103)
TreeGen.mkIsInstanceOf(Trees$Tree, Types$Type, boolean, boolean):258->rgb(239,106,106)
TreeGen.mkLiftedFunctionBodyMethod(Typers$Typer, Symbols$Symbol, Trees$Function):264->rgb(215,71,71)
TreeGen.mkLiftedFunctionBodyMethod(Typers$Typer, Symbols$Symbol, Trees$Function):268->rgb(253,128,128)
TreeGen.mkLiftedFunctionBodyMethod(Typers$Typer, Symbols$Symbol, Trees$Function):269->rgb(249,122,122)
TreeGen.mkMethodCall(Symbols$Symbol, Names$Name, List, List):39->rgb(245,115,115)
TreeGen.mkMethodForFunctionBody(Typers$Typer, Symbols$Symbol, Trees$Function, Names$TermName, List, Types$Type, long):321->rgb(214,71,71)
TreeGen.mkNew(List, Trees$ValDef, List, Position, Position):462->rgb(206,59,59)
TreeGen.mkSingleTypeApply(Trees$Tree, Types$Type, Symbols$Symbol, boolean):250->rgb(246,117,117)
TreeGen.mkTupleType(List, boolean):332->rgb(208,63,63)
TreeGen.mkTypeApply(Trees$Tree, List):243->rgb(248,120,120)
TreeGen.mkWildcardImport(Symbols$Symbol):25->rgb(235,101,101)
TreeGen.newModule(Symbols$Symbol, Types$Type):63->rgb(249,121,121)
TreeGen.scalaFunctionConstr(List, Trees$Tree, boolean):23->rgb(221,81,81)
TreeGen.stabilize(Trees$Tree):176->rgb(201,51,51)
TreeGen.stableTypeFor(Trees$Tree):183->rgb(248,120,120)
TreeGen.stableTypeFor(Trees$Tree):186->rgb(224,85,85)
TreeGen.stableTypeFor(Trees$Tree):187->rgb(234,99,99)
TreeGen.substThisForModule$1(Trees$Tree, Symbols$Symbol):318->rgb(242,111,111)
TreeInfo$Applied.callee():774->rgb(251,124,124)
TreeInfo$Applied.core():780->rgb(223,83,83)
TreeInfo$Applied.core():781->rgb(230,94,94)
TreeInfo$Applied.loop$1(Trees$Tree):771->rgb(219,77,77)
TreeInfo$ValueClass$BoxAndUnbox$.unapply(Trees$Tree):64->rgb(246,117,117)
TreeInfo.$anonfun$isExprSafeToInline$1(TreeInfo, Trees$Tree):197->rgb(227,90,90)
TreeInfo.$anonfun$mapMethodParamsAndArgs$1$adapted(Function2, Builder, Symbols$Symbol, Trees$Tree):232->rgb(214,70,70)
TreeInfo.admitsTypeSelection(Trees$Tree):148->rgb(221,80,80)
TreeInfo.foreachMethodParamAndArg(List, List, Function2):246->rgb(232,97,97)
TreeInfo.hasVolatileType(Trees$Tree):138->rgb(234,100,100)
TreeInfo.isExprSafeToInline(Trees$Tree):174->rgb(202,53,53)
TreeInfo.isExprSafeToInline(Trees$Tree):197->rgb(242,112,112)
TreeInfo.isMacroApplication(Trees$Tree):960->rgb(218,76,76)
TreeInfo.isMacroApplication(Trees$Tree):961->rgb(218,77,77)
TreeInfo.isPath(Trees$Tree, boolean):93->rgb(207,60,60)
TreeInfo.isPath(Trees$Tree, boolean):94->rgb(237,103,103)
TreeInfo.isPath(Trees$Tree, boolean):95->rgb(248,120,120)
TreeInfo.isPureDef(Trees$Tree):69->rgb(220,80,80)
TreeInfo.isPureDef(Trees$Tree):98->rgb(200,50,50)
TreeInfo.isPureExprForWarningPurposes(Trees$Tree):210->rgb(251,124,124)
TreeInfo.isPureExprForWarningPurposes(Trees$Tree):224->rgb(237,104,104)
TreeInfo.isPureExprForWarningPurposes(Trees$Tree):226->rgb(205,58,58)
TreeInfo.isSelfConstrCall(Trees$Tree):324->rgb(235,101,101)
TreeInfo.isSelfConstrCall(Trees$Tree):326->rgb(230,93,93)
TreeInfo.isSelfOrSuperConstrCall(Trees$Tree):372->rgb(208,62,62)
TreeInfo.isStableIdent(Trees$Ident, boolean):128->rgb(228,91,91)
TreeInfo.isStableIdent(Trees$Ident, boolean):129->rgb(232,97,97)
TreeInfo.isStableIdent(Trees$Ident, boolean):130->rgb(237,104,104)
TreeInfo.isStableIdent(Trees$Ident, boolean):131->rgb(216,73,73)
TreeInfo.isStableIdent(Trees$Ident, boolean):132->rgb(209,63,63)
TreeInfo.isStableIdentifier(Trees$Tree, boolean):106->rgb(202,53,53)
TreeInfo.isStableIdentifier(Trees$Tree, boolean):107->rgb(203,54,54)
TreeInfo.isStableIdentifier(Trees$Tree, boolean):111->rgb(213,69,69)
TreeInfo.isStableMemberOf(Symbols$Symbol, Trees$Tree, boolean):123->rgb(238,106,106)
TreeInfo.isStableMemberOf(Symbols$Symbol, Trees$Tree, boolean):124->rgb(215,72,72)
TreeInfo.isSuperConstrCall(Trees$Tree):333->rgb(211,66,66)
TreeInfo.isSynthCaseSymbol(Symbols$Symbol):716->rgb(206,58,58)
TreeInfo.isWildcardStarType(Trees$Tree):609->rgb(233,99,99)
TreeInfo.noPredefImportForUnit(Trees$Tree):871->rgb(246,117,117)
TreeInfo.symOk(Symbols$Symbol):114->rgb(202,53,53)
TreeSet.$plus$eq(Object):88->rgb(210,65,65)
Trees$AppliedTypeTree.<init>(SymbolTable, Trees$Tree, List):577->rgb(205,58,58)
Trees$Apply.args():491->rgb(243,112,112)
Trees$Apply.fun():491->rgb(226,89,89)
Trees$Apply.symbol():493->rgb(203,55,55)
Trees$Block.expr():395->rgb(237,105,105)
Trees$ChangeOwnerTraverser.traverse(Trees$Tree):1500->rgb(238,105,105)
Trees$ChangeOwnerTraverser.traverse(Trees$Tree):1504->rgb(232,97,97)
Trees$ChangeOwnerTraverser.traverse(Trees$TreeApi):1481->rgb(216,73,73)
Trees$DefDef$.apply(Symbols$Symbol, Trees$Tree):357->rgb(245,116,116)
Trees$DefDef.<init>(SymbolTable, Trees$Modifiers, Names$TermName, List, List, Trees$Tree, Trees$Tree):355->rgb(224,85,85)
Trees$DefDef.rhs():355->rgb(232,97,97)
Trees$DefDef.tparams():354->rgb(233,98,98)
Trees$DefTree.<init>(SymbolTable):269->rgb(210,64,64)
Trees$Duplicator.transform(Trees$Tree):1682->rgb(224,85,85)
Trees$Duplicator.transform(Trees$TreeApi):1679->rgb(212,67,67)
Trees$FilterTreeTraverser.traverse(Trees$Tree):1656->rgb(222,83,83)
Trees$ForeachTreeTraverser.<init>(SymbolTable, Function1):1645->rgb(215,72,72)
Trees$ForeachTreeTraverser.traverse(Trees$Tree):1648->rgb(253,128,128)
Trees$ForeachTreeTraverser.traverse(Trees$TreeApi):1645->rgb(229,92,92)
Trees$Ident.<init>(SymbolTable, Names$Name):538->rgb(216,74,74)
Trees$Ident.name():538->rgb(210,65,65)
Trees$LazyTreeCopier.<init>(Global):116->rgb(220,79,79)
Trees$LazyTreeCopier.<init>(SymbolTable):751->rgb(202,53,53)
Trees$LazyTreeCopier.AppliedTypeTree(Trees$Tree, Trees$Tree, List):960->rgb(203,55,55)
Trees$LazyTreeCopier.AppliedTypeTree(Trees$TreeApi, Trees$TreeApi, List):750->rgb(226,88,88)
Trees$LazyTreeCopier.Apply(Trees$Tree, Trees$Tree, List):889->rgb(222,83,83)
Trees$LazyTreeCopier.Apply(Trees$Tree, Trees$Tree, List):890->rgb(251,124,124)
Trees$LazyTreeCopier.Apply(Trees$TreeApi, Trees$TreeApi, List):750->rgb(205,58,58)
Trees$LazyTreeCopier.Block(Trees$Tree, List, Trees$Tree):800->rgb(233,98,98)
Trees$LazyTreeCopier.Block(Trees$TreeApi, List, Trees$TreeApi):750->rgb(253,128,128)
Trees$LazyTreeCopier.ClassDef(Trees$Tree, Trees$Modifiers, Names$Name, List, Trees$Template):754->rgb(252,126,126)
Trees$LazyTreeCopier.ClassDef(Trees$TreeApi, Trees$ModifiersApi, Names$NameApi, List, Trees$TemplateApi):750->rgb(229,93,93)
Trees$LazyTreeCopier.DefDef(Trees$Tree, Trees$Modifiers, Names$Name, List, List, Trees$Tree, Trees$Tree):774->rgb(205,57,57)
Trees$LazyTreeCopier.DefDef(Trees$Tree, Trees$Modifiers, Names$Name, List, List, Trees$Tree, Trees$Tree):775->rgb(201,52,52)
Trees$LazyTreeCopier.DefDef(Trees$Tree, Trees$Modifiers, Names$Name, List, List, Trees$Tree, Trees$Tree):776->rgb(212,67,67)
Trees$LazyTreeCopier.DefDef(Trees$TreeApi, Trees$ModifiersApi, Names$NameApi, List, List, Trees$TreeApi, Trees$TreeApi):750->rgb(221,81,81)
Trees$LazyTreeCopier.Function(Trees$Tree, List, Trees$Tree):834->rgb(236,102,102)
Trees$LazyTreeCopier.Function(Trees$TreeApi, List, Trees$TreeApi):750->rgb(237,104,104)
Trees$LazyTreeCopier.If(Trees$Tree, Trees$Tree, Trees$Tree, Trees$Tree):849->rgb(227,90,90)
Trees$LazyTreeCopier.If(Trees$Tree, Trees$Tree, Trees$Tree, Trees$Tree):851->rgb(226,88,88)
Trees$LazyTreeCopier.If(Trees$TreeApi, Trees$TreeApi, Trees$TreeApi, Trees$TreeApi):750->rgb(225,87,87)
Trees$LazyTreeCopier.LabelDef(Trees$TreeApi, Names$NameApi, List, Trees$TreeApi):750->rgb(224,85,85)
Trees$LazyTreeCopier.Literal(Trees$Tree, Constants$Constant):930->rgb(211,67,67)
Trees$LazyTreeCopier.Literal(Trees$TreeApi, Constants$ConstantApi):750->rgb(245,116,116)
Trees$LazyTreeCopier.ModuleDef(Trees$Tree, Trees$Modifiers, Names$Name, Trees$Template):764->rgb(237,104,104)
Trees$LazyTreeCopier.ModuleDef(Trees$TreeApi, Trees$ModifiersApi, Names$NameApi, Trees$TemplateApi):750->rgb(209,63,63)
Trees$LazyTreeCopier.Select(Trees$Tree, Trees$Tree, Names$Name):911->rgb(212,68,68)
Trees$LazyTreeCopier.Select(Trees$TreeApi, Trees$TreeApi, Names$NameApi):750->rgb(233,98,98)
Trees$LazyTreeCopier.Template(Trees$Tree, List, Trees$ValDef, List):794->rgb(249,121,121)
Trees$LazyTreeCopier.Template(Trees$Tree, List, Trees$ValDef, List):795->rgb(244,114,114)
Trees$LazyTreeCopier.Template(Trees$TreeApi, List, Trees$ValDefApi, List):750->rgb(215,72,72)
Trees$LazyTreeCopier.TypeApply(Trees$TreeApi, Trees$TreeApi, List):750->rgb(206,58,58)
Trees$LazyTreeCopier.TypeDef(Trees$TreeApi, Trees$ModifiersApi, Names$NameApi, List, Trees$TreeApi):750->rgb(200,51,51)
Trees$LazyTreeCopier.ValDef(Trees$Tree, Trees$Modifiers, Names$Name, Trees$Tree, Trees$Tree):769->rgb(219,78,78)
Trees$LazyTreeCopier.ValDef(Trees$TreeApi, Trees$ModifiersApi, Names$NameApi, Trees$TreeApi, Trees$TreeApi):750->rgb(221,81,81)
Trees$Literal.<init>(SymbolTable, Constants$Constant):551->rgb(241,110,110)
Trees$MemberDef.<init>(SymbolTable):274->rgb(250,122,122)
Trees$Modifiers$.apply(Object, Names$NameApi, List):1051->rgb(251,124,124)
Trees$Modifiers$.apply(long, Names$Name, List):993->rgb(213,69,69)
Trees$Modifiers.<init>(SymbolTable, long, Names$Name, List):997->rgb(219,78,78)
Trees$Modifiers.annotations():995->rgb(211,66,66)
Trees$Modifiers.copy$default$2():994->rgb(252,126,126)
Trees$Modifiers.copy(long, Names$Name, List):995->rgb(232,97,97)
Trees$Modifiers.equals(Object):993->rgb(216,73,73)
Trees$Modifiers.hasAccessBoundary():1015->rgb(221,81,81)
Trees$Modifiers.hasFlag(long):1017->rgb(245,115,115)
Trees$Modifiers.positions_$eq(Map):997->rgb(220,79,79)
Trees$Modifiers.privateWithin():994->rgb(249,121,121)
Trees$Modifiers.setPositions(Map):1000->rgb(203,55,55)
Trees$Modifiers.withPosition(long, Position):1040->rgb(245,116,116)
Trees$ResetAttrs$MarkLocals.markLocal(Trees$Tree):231->rgb(203,54,54)
Trees$ResetAttrs$MarkLocals.markLocal(Trees$Tree):235->rgb(240,109,109)
Trees$ResetAttrs$MarkLocals.traverse(Trees$Tree):247->rgb(202,53,53)
Trees$ResetAttrs$MarkLocals.traverse(Trees$Tree):252->rgb(240,108,108)
Trees$ResetAttrs$MarkLocals.traverse(Trees$TreeApi):227->rgb(227,90,90)
Trees$ResetAttrs$Transformer.transform(Trees$Tree):258->rgb(236,102,102)
Trees$ResetAttrs$Transformer.transform(Trees$Tree):263->rgb(235,101,101)
Trees$ResetAttrs$Transformer.transform(Trees$Tree):288->rgb(240,109,109)
Trees$ResetAttrs$Transformer.transform(Trees$Tree):291->rgb(254,129,129)
Trees$ResetAttrs$Transformer.transform(Trees$Tree):304->rgb(241,110,110)
Trees$ResetAttrs$Transformer.transform(Trees$Tree):306->rgb(243,113,113)
Trees$ResetAttrs$Transformer.transform(Trees$Tree):310->rgb(240,108,108)
Trees$ResetAttrs$Transformer.transform(Trees$TreeApi):256->rgb(200,51,51)
Trees$ResetAttrs.registerLocal(Symbols$Symbol):223->rgb(200,51,51)
Trees$ResetAttrs.transform(Trees$Tree):317->rgb(215,72,72)
Trees$ResetAttrs.transform(Trees$Tree):325->rgb(221,81,81)
Trees$Select.<init>(SymbolTable, Trees$Tree, Names$Name):530->rgb(250,122,122)
Trees$Select.<init>(SymbolTable, Trees$Tree, Names$Name):531->rgb(231,96,96)
Trees$Select.name():530->rgb(216,73,73)
Trees$Select.qualifier():530->rgb(210,64,64)
Trees$ShallowDuplicator.<init>(SymbolTable, Trees$Tree):1508->rgb(205,57,57)
Trees$StrictTreeCopier.AppliedTypeTree(Trees$Tree, Trees$Tree, List):743->rgb(232,97,97)
Trees$StrictTreeCopier.AppliedTypeTree(Trees$TreeApi, Trees$TreeApi, List):653->rgb(205,58,58)
Trees$StrictTreeCopier.DefDef(Trees$Tree, Trees$Modifiers, Names$Name, List, List, Trees$Tree, Trees$Tree):663->rgb(204,56,56)
Trees$StrictTreeCopier.DefDef(Trees$TreeApi, Trees$ModifiersApi, Names$NameApi, List, List, Trees$TreeApi, Trees$TreeApi):653->rgb(245,116,116)
Trees$StrictTreeCopier.If(Trees$Tree, Trees$Tree, Trees$Tree, Trees$Tree):693->rgb(238,105,105)
Trees$StrictTreeCopier.If(Trees$TreeApi, Trees$TreeApi, Trees$TreeApi, Trees$TreeApi):653->rgb(225,87,87)
Trees$StrictTreeCopier.Select(Trees$Tree, Trees$Tree, Names$Name):723->rgb(232,97,97)
Trees$StrictTreeCopier.Select(Trees$TreeApi, Trees$TreeApi, Names$NameApi):653->rgb(213,70,70)
Trees$StrictTreeCopier.ValDef(Trees$Tree, Trees$Modifiers, Names$Name, Trees$Tree, Trees$Tree):661->rgb(222,82,82)
Trees$StrictTreeCopier.ValDef(Trees$TreeApi, Trees$ModifiersApi, Names$NameApi, Trees$TreeApi, Trees$TreeApi):653->rgb(227,89,89)
Trees$SymTree.<init>(SymbolTable):239->rgb(210,65,65)
Trees$SymTree.symbol_$eq(Symbols$Symbol):241->rgb(229,92,92)
Trees$ThisSubstituter.$anonfun$transform$1(Trees$ThisSubstituter, Types$Type):1552->rgb(248,120,120)
Trees$ThisSubstituter.transform(Trees$Tree):1552->rgb(223,84,84)
Trees$ThisSubstituter.transform(Trees$Tree):1555->rgb(209,64,64)
Trees$ThisSubstituter.transform(Trees$TreeApi):1549->rgb(240,109,109)
Trees$Transformer.$anonfun$transformCaseDefs$1(Trees$Transformer, Trees$CaseDefApi):2581->rgb(247,118,118)
Trees$Transformer.$anonfun$transformStats$1(Trees$Transformer, Symbols$SymbolApi, Trees$TreeApi):2588->rgb(236,103,103)
Trees$Transformer.$anonfun$transformStats$1(Trees$Transformer, Symbols$SymbolApi, Trees$TreeApi):2589->rgb(226,87,87)
Trees$Transformer.$anonfun$transformTrees$1(Trees$Transformer, Trees$TreeApi):2559->rgb(233,99,99)
Trees$Transformer.$anonfun$transformTypeDefs$1(Trees$Transformer, Trees$TypeDefApi):2566->rgb(217,75,75)
Trees$Transformer.$anonfun$transformValDefs$1(Trees$Transformer, Trees$ValDefApi):2573->rgb(230,94,94)
Trees$Transformer.$anonfun$transformValDefss$1(Trees$Transformer, List):2576->rgb(253,127,127)
Trees$Transformer.<init>(Universe):2533->rgb(204,57,57)
Trees$Transformer.atOwner(Symbols$SymbolApi, Function0):2600->rgb(253,128,128)
Trees$Transformer.currentOwner_$eq(Symbols$SymbolApi):2536->rgb(219,78,78)
Trees$Transformer.transform(Trees$TreeApi):2555->rgb(230,95,95)
Trees$Transformer.transformCaseDefs(List):2581->rgb(254,129,129)
Trees$Transformer.transformModifiers(Trees$ModifiersApi):2592->rgb(210,64,64)
Trees$Transformer.transformStats(List, Symbols$SymbolApi):2587->rgb(213,69,69)
Trees$Transformer.transformStats(List, Symbols$SymbolApi):2589->rgb(248,120,120)
Trees$Transformer.transformTemplate(Trees$TemplateApi):2563->rgb(244,114,114)
Trees$Transformer.transformTrees(List):2559->rgb(219,78,78)
Trees$Transformer.transformTypeDefs(List):2566->rgb(214,70,70)
Trees$Transformer.transformUnit(CompilationUnits$CompilationUnit):140->rgb(250,123,123)
Trees$Transformer.transformValDef(Trees$ValDefApi):2569->rgb(200,51,51)
Trees$Transformer.transformValDef(Trees$ValDefApi):2570->rgb(246,118,118)
Trees$Transformer.transformValDefs(List):2573->rgb(214,70,70)
Trees$Transformer.transformValDefss(List):2576->rgb(218,76,76)
Trees$Traverser.$anonfun$traverseParamss$1(Trees$Traverser, List):2493->rgb(251,125,125)
Trees$Traverser.$anonfun$traverseStats$1(Trees$Traverser, Symbols$SymbolApi, Trees$TreeApi):2498->rgb(224,85,85)
Trees$Traverser.$anonfun$traverseStats$2(Trees$Traverser, Trees$TreeApi):2498->rgb(222,82,82)
Trees$Traverser.$anonfun$traverseTrees$1(Trees$Traverser, Trees$TreeApi):2484->rgb(208,62,62)
Trees$Traverser.$anonfun$traverseTreess$1(Trees$Traverser, List):2491->rgb(248,121,121)
Trees$Traverser.<init>(Universe):2466->rgb(242,111,111)
Trees$Traverser.apply(Trees$TreeApi):2513->rgb(211,67,67)
Trees$Traverser.atOwner(Symbols$SymbolApi, Function0):2507->rgb(233,98,98)
Trees$Traverser.traverse(Trees$TreeApi):2475->rgb(222,83,83)
Trees$Traverser.traverseAnnotations(List):2488->rgb(252,125,125)
Trees$Traverser.traverseCases(List):2487->rgb(251,125,125)
Trees$Traverser.traverseModifiers(Trees$ModifiersApi):2472->rgb(219,77,77)
Trees$Traverser.traverseParams(List):2492->rgb(246,117,117)
Trees$Traverser.traverseParamss(List):2493->rgb(224,85,85)
Trees$Traverser.traverseStats(List, Symbols$SymbolApi):2497->rgb(226,88,88)
Trees$Traverser.traverseTrees(List):2484->rgb(213,68,68)
Trees$Traverser.traverseTreess(List):2491->rgb(237,104,104)
Trees$Traverser.traverseTypeArgs(List):2485->rgb(242,111,111)
Trees$Traverser.traverseTypeAscription(Trees$TreeApi):2478->rgb(225,86,86)
Trees$Tree.<init>(SymbolTable):37->rgb(223,83,83)
Trees$Tree.<init>(SymbolTable):41->rgb(213,70,70)
Trees$Tree.clearType():50->rgb(229,93,93)
Trees$Tree.duplicate():100->rgb(234,99,99)
Trees$Tree.equals(Object):97->rgb(215,72,72)
Trees$Tree.getAndRemoveAttachment(ClassTag):37->rgb(240,108,108)
Trees$Tree.hasAttachment(ClassTag):37->rgb(250,123,123)
Trees$Tree.isTerm():74->rgb(229,93,93)
Trees$Tree.pos():44->rgb(203,55,55)
Trees$Tree.pos_$eq(Position):37->rgb(215,72,72)
Trees$Tree.rawatt():37->rgb(214,71,71)
Trees$Tree.rawatt_$eq(Attachments):37->rgb(252,125,125)
Trees$Tree.removeAttachment(ClassTag):37->rgb(207,60,60)
Trees$Tree.setPos(Position):37->rgb(220,79,79)
Trees$Tree.setSymbol(Symbols$Symbol):56->rgb(237,103,103)
Trees$Tree.setType(Types$Type):51->rgb(224,85,85)
Trees$Tree.tpe():47->rgb(200,50,50)
Trees$TreeContextApiImpl.$anonfun$changeOwner$1(Trees$TreeContextApiImpl, Trees$Tree, Tuple2):210->rgb(235,101,101)
Trees$TreeContextApiImpl.changeOwner(Seq):209->rgb(248,120,120)
Trees$TreeContextApiImpl.foreach(Function1):107->rgb(206,58,58)
Trees$TreeContextApiImpl.hasSymbolWhich(Function1):189->rgb(202,53,53)
Trees$TreeContextApiImpl.isErroneous():191->rgb(212,68,68)
Trees$TreeContextApiImpl.isErrorTyped():217->rgb(212,68,68)
Trees$TreeContextApiImpl.modifyType(Function1):198->rgb(210,64,64)
Trees$TreeContextApiImpl.modifyType(Function1):199->rgb(213,69,69)
Trees$TreeContextApiImpl.orElse(Function0):105->rgb(248,119,119)
Trees$TreeContextApiImpl.shallowDuplicate():214->rgb(236,102,102)
Trees$TreeContextApiImpl.substituteSymbols(List, List):180->rgb(245,115,115)
Trees$TreeContextApiImpl.substituteThis(Symbols$Symbol, Function0):186->rgb(207,61,61)
Trees$TreeContextApiImpl.withFilter(Function1):111->rgb(234,100,100)
Trees$TreeSymSubstituter.apply(Trees$Tree):1637->rgb(208,62,62)
Trees$TreeSymSubstituter.transform(Trees$Tree):1600->rgb(249,121,121)
Trees$TreeSymSubstituter.transform(Trees$Tree):1631->rgb(231,95,95)
Trees$TreeSymSubstituter.transform(Trees$Tree):1634->rgb(223,84,84)
Trees$TreeSymSubstituter.transform(Trees$TreeApi):1591->rgb(249,122,122)
Trees$TypeApply.fun():481->rgb(225,86,86)
Trees$TypeApply.symbol():486->rgb(225,87,87)
Trees$TypeMapTreeSubstituter.traverse(Trees$Tree):1562->rgb(203,55,55)
Trees$TypeMapTreeSubstituter.traverse(Trees$Tree):1566->rgb(248,121,121)
Trees$TypeMapTreeSubstituter.traverse(Trees$TreeApi):1560->rgb(203,55,55)
Trees$TypeTree.setOriginal(Trees$Tree):613->rgb(233,98,98)
Trees$UnderConstructionTransformer.transform$(Trees$UnderConstructionTransformer, Trees$Tree):1706->rgb(202,53,53)
Trees$UnderConstructionTransformer.transform(Trees$Tree):1707->rgb(200,50,50)
Trees$UnderConstructionTransformer.transform(Trees$Tree):1709->rgb(242,112,112)
Trees$UnderConstructionTransformer.transform(Trees$Tree):1711->rgb(228,91,91)
Trees$ValDef$.apply(Symbols$Symbol):350->rgb(221,80,80)
Trees$ValDef$.apply(Symbols$Symbol, Trees$Tree):351->rgb(234,100,100)
Trees$ValDef.<init>(SymbolTable, Trees$Modifiers, Names$TermName, Trees$Tree, Trees$Tree):348->rgb(217,75,75)
Trees$ValOrDefDef.<init>(SymbolTable):334->rgb(249,122,122)
Trees.$anonfun$itransform$1(Trees$Transformer, Trees$Tree, Trees$InternalTreeCopierOps, Trees$Modifiers, Names$TermName, Trees$Tree, Trees$Tree):1369->rgb(205,58,58)
Trees.$anonfun$itransform$2(Trees$Transformer, Trees$Tree, Trees$InternalTreeCopierOps, Trees$Modifiers, Names$TermName, List, List, Trees$Tree, Trees$Tree):1374->rgb(206,59,59)
Trees.$anonfun$itransform$2(Trees$Transformer, Trees$Tree, Trees$InternalTreeCopierOps, Trees$Modifiers, Names$TermName, List, List, Trees$Tree, Trees$Tree):1375->rgb(220,79,79)
Trees.$anonfun$itransform$3(Trees$Transformer, Trees$Tree, Trees$InternalTreeCopierOps, List, Trees$Tree):1391->rgb(216,74,74)
Trees.$anonfun$itransform$4(Trees$Transformer, Trees$Tree, Trees$InternalTreeCopierOps, Trees$Modifiers, Names$TypeName, List, Trees$Template):1419->rgb(216,74,74)
Trees.$anonfun$itransform$4(Trees$Transformer, Trees$Tree, Trees$InternalTreeCopierOps, Trees$Modifiers, Names$TypeName, List, Trees$Template):1420->rgb(240,108,108)
Trees.$anonfun$itransform$5(Trees$Transformer, Trees$Tree, Trees$InternalTreeCopierOps, Trees$Modifiers, Names$TermName, Trees$Template):1425->rgb(241,109,109)
Trees.$anonfun$itransform$6(Trees$Transformer, Trees$Tree, Trees$InternalTreeCopierOps, Trees$Modifiers, Names$TypeName, List, Trees$Tree):1430->rgb(239,107,107)
Trees.$anonfun$itransform$7(Trees$Transformer, List):1438->rgb(243,113,113)
Trees.$anonfun$itraverse$1(Trees$Traverser, Trees$MemberDef):1216->rgb(247,119,119)
Trees.$anonfun$itraverse$1(Trees$Traverser, Trees$MemberDef):1219->rgb(232,97,97)
Trees.$anonfun$itraverse$1(Trees$Traverser, Trees$MemberDef):1220->rgb(216,74,74)
Trees.$anonfun$itraverse$1(Trees$Traverser, Trees$MemberDef):1221->rgb(215,73,73)
Trees.$anonfun$itraverse$1(Trees$Traverser, Trees$MemberDef):1222->rgb(249,122,122)
Trees.$anonfun$itraverse$1(Trees$Traverser, Trees$MemberDef):1224->rgb(240,108,108)
Trees.$anonfun$itraverse$1(Trees$Traverser, Trees$MemberDef):1225->rgb(221,80,80)
Trees.$anonfun$itraverse$1(Trees$Traverser, Trees$MemberDef):1226->rgb(241,110,110)
Trees.$anonfun$itraverse$1(Trees$Traverser, Trees$MemberDef):1227->rgb(208,62,62)
Trees.$anonfun$itraverse$3(Trees$Traverser, List, Trees$Tree):1341->rgb(203,54,54)
Trees.$anonfun$newDefDef$default$6$1(Trees, Symbols$Symbol):1113->rgb(214,71,71)
Trees.Block$(Trees, Seq):1193->rgb(250,123,123)
Trees.Block(Seq):1198->rgb(241,109,109)
Trees.Ident$(Trees, Symbols$Symbol):1188->rgb(203,55,55)
Trees.Ident(Symbols$Symbol):1189->rgb(222,82,82)
Trees.Modifiers$(Trees, Object):2677->rgb(240,108,108)
Trees.Modifiers$(Trees, Object, Names$NameApi):2672->rgb(226,87,87)
Trees.Modifiers(Object):2677->rgb(243,113,113)
Trees.Modifiers(Object, Names$NameApi):2672->rgb(232,97,97)
Trees.New$(Trees, Trees$Tree, List):1146->rgb(204,56,56)
Trees.New(Trees$Tree, List):1147->rgb(204,56,56)
Trees.Select$(Trees, Trees$Tree, Symbols$Symbol):1182->rgb(218,76,76)
Trees.Select(Trees$Tree, Symbols$Symbol):1183->rgb(219,78,78)
Trees.SuperSelect$(Trees, Symbols$Symbol, Symbols$Symbol):1172->rgb(217,75,75)
Trees.SuperSelect(Symbols$Symbol, Symbols$Symbol):1173->rgb(253,127,127)
Trees.TypeTree$(Trees, Types$Type):637->rgb(220,80,80)
Trees.TypeTree(Types$Type):637->rgb(209,63,63)
Trees.TypeTreeMemberType(Symbols$Symbol):640->rgb(234,99,99)
Trees.TypeTreeMemberType(Symbols$Symbol):641->rgb(214,70,70)
Trees.copyDefDef$(Trees, Trees$Tree, Trees$Modifiers, Names$Name, List, List, Trees$Tree, Trees$Tree):1730->rgb(210,65,65)
Trees.copyDefDef(Trees$Tree, Trees$Modifiers, Names$Name, List, List, Trees$Tree, Trees$Tree):1745->rgb(230,94,94)
Trees.deriveCaseDef$(Trees, Trees$Tree, Function1):1844->rgb(205,57,57)
Trees.deriveCaseDef(Trees$Tree, Function1):1846->rgb(201,51,51)
Trees.deriveDefDef$(Trees, Trees$Tree, Function1):1814->rgb(253,127,127)
Trees.deriveDefDef(Trees$Tree, Function1):1816->rgb(245,116,116)
Trees.deriveFunction$(Trees, Trees$Tree, Function1):1856->rgb(230,94,94)
Trees.deriveFunction(Trees$Tree, Function1):1858->rgb(212,68,68)
Trees.deriveLabelDef$(Trees, Trees$Tree, Function1):1850->rgb(243,113,113)
Trees.deriveLabelDef(Trees$Tree, Function1):1851->rgb(218,77,77)
Trees.deriveLabelDef(Trees$Tree, Function1):1852->rgb(234,100,100)
Trees.deriveTemplate$(Trees, Trees$Tree, Function1):1826->rgb(238,106,106)
Trees.deriveTemplate(Trees$Tree, Function1):1828->rgb(239,108,108)
Trees.itransform$(Trees, Trees$Transformer, Trees$Tree):1348->rgb(229,93,93)
Trees.itransform(Trees$Transformer, Trees$Tree):1350->rgb(213,69,69)
Trees.itransform(Trees$Transformer, Trees$Tree):1357->rgb(218,76,76)
Trees.itransform(Trees$Transformer, Trees$Tree):1359->rgb(250,122,122)
Trees.itransform(Trees$Transformer, Trees$Tree):1363->rgb(230,93,93)
Trees.itransform(Trees$Transformer, Trees$Tree):1368->rgb(249,121,121)
Trees.itransform(Trees$Transformer, Trees$Tree):1371->rgb(241,110,110)
Trees.itransform(Trees$Transformer, Trees$Tree):1373->rgb(253,127,127)
Trees.itransform(Trees$Transformer, Trees$Tree):1378->rgb(230,94,94)
Trees.itransform(Trees$Transformer, Trees$Tree):1380->rgb(231,95,95)
Trees.itransform(Trees$Transformer, Trees$Tree):1382->rgb(214,71,71)
Trees.itransform(Trees$Transformer, Trees$Tree):1384->rgb(221,81,81)
Trees.itransform(Trees$Transformer, Trees$Tree):1386->rgb(207,60,60)
Trees.itransform(Trees$Transformer, Trees$Tree):1388->rgb(209,64,64)
Trees.itransform(Trees$Transformer, Trees$Tree):1391->rgb(205,58,58)
Trees.itransform(Trees$Transformer, Trees$Tree):1394->rgb(245,116,116)
Trees.itransform(Trees$Transformer, Trees$Tree):1396->rgb(203,55,55)
Trees.itransform(Trees$Transformer, Trees$Tree):1398->rgb(251,125,125)
Trees.itransform(Trees$Transformer, Trees$Tree):1402->rgb(232,97,97)
Trees.itransform(Trees$Transformer, Trees$Tree):1406->rgb(230,94,94)
Trees.itransform(Trees$Transformer, Trees$Tree):1408->rgb(232,97,97)
Trees.itransform(Trees$Transformer, Trees$Tree):1412->rgb(239,108,108)
Trees.itransform(Trees$Transformer, Trees$Tree):1416->rgb(230,94,94)
Trees.itransform(Trees$Transformer, Trees$Tree):1419->rgb(204,56,56)
Trees.itransform(Trees$Transformer, Trees$Tree):1424->rgb(218,76,76)
Trees.itransform(Trees$Transformer, Trees$Tree):1429->rgb(206,58,58)
Trees.itransform(Trees$Transformer, Trees$Tree):1433->rgb(209,63,63)
Trees.itransform(Trees$Transformer, Trees$Tree):1438->rgb(210,65,65)
Trees.itransform(Trees$Transformer, Trees$Tree):1460->rgb(215,73,73)
Trees.itraverse$(Trees, Trees$Traverser, Trees$Tree):1212->rgb(234,99,99)
Trees.itraverse(Trees$Traverser, Trees$Tree):1338->rgb(243,113,113)
Trees.itraverse(Trees$Traverser, Trees$Tree):1339->rgb(208,61,61)
Trees.itraverse(Trees$Traverser, Trees$Tree):1340->rgb(252,126,126)
Trees.itraverse(Trees$Traverser, Trees$Tree):1341->rgb(226,88,88)
Trees.itraverse(Trees$Traverser, Trees$Tree):1342->rgb(201,51,51)
Trees.newDefDef$(Trees, Symbols$Symbol, Trees$Tree, Trees$Modifiers, Names$TermName, List, List, Trees$Tree):1109->rgb(207,61,61)
Trees.newDefDef$default$3$(Trees, Symbols$Symbol, Trees$Tree):1110->rgb(237,104,104)
Trees.newDefDef$default$3(Symbols$Symbol, Trees$Tree):1110->rgb(237,104,104)
Trees.newDefDef$default$6$(Trees, Symbols$Symbol, Trees$Tree):1113->rgb(211,67,67)
Trees.newDefDef$default$6(Symbols$Symbol, Trees$Tree):1113->rgb(204,55,55)
Trees.newDefDef$default$7$(Trees, Symbols$Symbol, Trees$Tree):1114->rgb(246,117,117)
Trees.newDefDef$default$7(Symbols$Symbol, Trees$Tree):1114->rgb(247,118,118)
Trees.newDefDef(Symbols$Symbol, Trees$Tree, Trees$Modifiers, Names$TermName, List, List, Trees$Tree):1116->rgb(239,108,108)
Trees.newLazyTreeCopier$(Trees):102->rgb(241,110,110)
Trees.newLazyTreeCopier():102->rgb(227,89,89)
Trees.newValDef$(Trees, Symbols$Symbol, Trees$Tree, Trees$Modifiers, Names$TermName, Trees$Tree):1101->rgb(223,83,83)
Trees.newValDef$default$3$(Trees, Symbols$Symbol, Trees$Tree):1102->rgb(206,59,59)
Trees.newValDef$default$3(Symbols$Symbol, Trees$Tree):1102->rgb(233,98,98)
Trees.newValDef$default$5$(Trees, Symbols$Symbol, Trees$Tree):1104->rgb(219,79,79)
Trees.newValDef$default$5(Symbols$Symbol, Trees$Tree):1104->rgb(210,65,65)
Trees.newValDef(Symbols$Symbol, Trees$Tree, Trees$Modifiers, Names$TermName, Trees$Tree):1106->rgb(243,113,113)
Trees.resetAttrs$(Trees, Trees$Tree):201->rgb(232,97,97)
Trees.resetAttrs(Trees$Tree):201->rgb(241,110,110)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1231->rgb(215,72,72)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1234->rgb(226,89,89)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1238->rgb(213,70,70)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1244->rgb(254,128,128)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1246->rgb(228,92,92)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1247->rgb(212,68,68)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1251->rgb(236,103,103)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1252->rgb(216,74,74)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1264->rgb(221,80,80)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1265->rgb(249,121,121)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1267->rgb(229,92,92)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1268->rgb(239,106,106)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1272->rgb(225,87,87)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1273->rgb(221,80,80)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1274->rgb(224,85,85)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1276->rgb(201,52,52)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1277->rgb(210,65,65)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1284->rgb(237,104,104)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1285->rgb(249,122,122)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1289->rgb(205,57,57)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1292->rgb(206,59,59)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1294->rgb(219,79,79)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1295->rgb(205,57,57)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1296->rgb(208,62,62)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1301->rgb(201,51,51)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1306->rgb(242,112,112)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1308->rgb(214,70,70)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1312->rgb(207,61,61)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1324->rgb(226,88,88)
Trees.traverseComponents$1(Trees$Traverser, Trees$Tree):1325->rgb(253,127,127)
Trees.traverseMemberDef$1(Trees$MemberDef, Symbols$Symbol, Trees$Traverser):1215->rgb(231,96,96)
Trees.wrappingIntoTerm$(Trees, Trees$Tree, Function1):1719->rgb(254,129,129)
Trees.wrappingIntoTerm(Trees$Tree, Function1):1722->rgb(230,94,94)
TriState$.Unknown():25->rgb(210,64,64)
TrieIterator.<init>(Iterable[]):35->rgb(234,100,100)
TrieIterator.initPosStack():28->rgb(234,100,100)
TrieMap$MangledHashing.hash(Object):984->rgb(206,59,59)
TrieMap.computeHash(Object):829->rgb(245,116,116)
TrieMap.contains(Object):631->rgb(228,91,91)
TrieMap.get(Object):844->rgb(236,103,103)
TrieMap.get(Object):845->rgb(247,118,118)
TrieMap.isReadOnly():784->rgb(249,122,122)
TrieMap.lookuphc(Object, int):749->rgb(202,54,54)
TrieMap.rootupdater():639->rgb(239,107,107)
Tuple2$mcII$sp.<init>(int, int):19->rgb(254,129,129)
Tuple2$mcJJ$sp.<init>(long, long):19->rgb(223,84,84)
Tuple2.<init>(Object, Object):19->rgb(209,63,63)
Tuple2.equals(Object):19->rgb(218,77,77)
Tuple2.hashCode():19->rgb(225,86,86)
Tuple2Zipped$.$anonfun$filter$1(Builder, Builder, Iterator, Function2, Object, Object):77->rgb(228,91,91)
Tuple2Zipped$.$anonfun$foreach$1(Iterator, Function2, Object, Object):109->rgb(201,51,51)
Tuple2Zipped$.$anonfun$map$1(Builder, Iterator, Function2, Object, Object):47->rgb(249,122,122)
Tuple2Zipped$.filter$extension(Tuple2, Function2, CanBuildFrom, CanBuildFrom):74->rgb(227,89,89)
Tuple2Zipped$.map$extension(Tuple2, Function2, CanBuildFrom):45->rgb(232,97,97)
Tuple2Zipped.foreach(Function2):107->rgb(237,103,103)
Type.equals(Object):858->rgb(225,86,86)
Type.getArgumentTypes(String):325->rgb(221,81,81)
Type.getArgumentTypes(String):333->rgb(231,95,95)
Type.getArgumentTypes(String):343->rgb(230,94,94)
Type.getArgumentTypes(String):344->rgb(234,99,99)
Type.getArgumentsAndReturnSizes(String):417->rgb(241,110,110)
Type.getDescriptor():628->rgb(221,80,80)
Type.getDescriptor():629->rgb(240,109,109)
Type.getDescriptor(StringBuilder):664->rgb(200,50,50)
Type.getDescriptor(StringBuilder):673->rgb(236,103,103)
Type.getMethodDescriptor(Type, Type[]):652->rgb(226,88,88)
Type.getReturnType(String):379->rgb(228,91,91)
Type.getReturnType(String):380->rgb(224,85,85)
Type.getType(char[], int):481->rgb(252,126,126)
TypeAdaptingTransformer$TypeAdapter.adaptToType(Trees$Tree, Types$Type):137->rgb(236,102,102)
TypeAdaptingTransformer$TypeAdapter.adaptToType(Trees$Tree, Types$Type):147->rgb(241,110,110)
TypeAdaptingTransformer$TypeAdapter.adaptToType(Trees$Tree, Types$Type):149->rgb(217,75,75)
TypeAdaptingTransformer$TypeAdapter.box(Trees$Tree):49->rgb(212,68,68)
TypeAdaptingTransformer$TypeAdapter.box(Trees$Tree):57->rgb(218,77,77)
TypeAdaptingTransformer$TypeAdapter.box(Trees$Tree):61->rgb(245,116,116)
TypeAdaptingTransformer$TypeAdapter.cast(Trees$Tree, Types$Type):125->rgb(248,121,121)
TypeAdaptingTransformer$TypeAdapter.isPrimitiveValueMember(Symbols$Symbol):32->rgb(223,84,84)
TypeComparers.$anonfun$isSubType2$2$adapted(TypeComparers, Types$Type, int, Symbols$Symbol):504->rgb(247,119,119)
TypeComparers.$anonfun$isSubType2$2(TypeComparers, Types$Type, int, Symbols$Symbol):504->rgb(251,125,125)
TypeComparers.$anonfun$isSubType2$3$adapted(TypeComparers, Types$Type, int, Types$Type):506->rgb(231,95,95)
TypeComparers.$anonfun$isSubType2$3(TypeComparers, Types$Type, int, Types$Type):506->rgb(234,99,99)
TypeComparers.$anonfun$isSubType2$4(TypeComparers, Types$Type, Types$Type, int, Types$Type):563->rgb(207,61,61)
TypeComparers.abstractTypeOnLeft$1(Types$Type, Types$Type, Types$Type, int):544->rgb(243,113,113)
TypeComparers.abstractTypeOnRight$1(Types$Type, int, Types$Type, Types$TypeRef):479->rgb(228,91,91)
TypeComparers.chaseDealiasedUnderlying$1(Types$Type):150->rgb(233,99,99)
TypeComparers.classOnRight$1(Types$Type, Types$Type, int, Types$Type, Types$TypeRef, Symbols$Symbol):481->rgb(202,54,54)
TypeComparers.classOnRight$1(Types$Type, Types$Type, int, Types$Type, Types$TypeRef, Symbols$Symbol):483->rgb(216,74,74)
TypeComparers.equalSymsAndPrefixes(Symbols$Symbol, Types$Type, Symbols$Symbol, Types$Type):64->rgb(229,93,93)
TypeComparers.equalSymsAndPrefixes(Symbols$Symbol, Types$Type, Symbols$Symbol, Types$Type):66->rgb(205,57,57)
TypeComparers.firstTry$1(Types$Type, Types$Type, int):418->rgb(229,93,93)
TypeComparers.firstTry$1(Types$Type, Types$Type, int):419->rgb(232,97,97)
TypeComparers.firstTry$1(Types$Type, Types$Type, int):423->rgb(243,112,112)
TypeComparers.firstTry$1(Types$Type, Types$Type, int):425->rgb(250,124,124)
TypeComparers.firstTry$1(Types$Type, Types$Type, int):426->rgb(202,53,53)
TypeComparers.firstTry$1(Types$Type, Types$Type, int):429->rgb(203,55,55)
TypeComparers.firstTry$1(Types$Type, Types$Type, int):432->rgb(227,89,89)
TypeComparers.firstTry$1(Types$Type, Types$Type, int):434->rgb(202,53,53)
TypeComparers.firstTry$1(Types$Type, Types$Type, int):446->rgb(220,80,80)
TypeComparers.firstTry$1(Types$Type, Types$Type, int):449->rgb(237,104,104)
TypeComparers.fourthTry$1(Types$Type, Types$Type, int):547->rgb(225,86,86)
TypeComparers.fourthTry$1(Types$Type, Types$Type, int):554->rgb(201,52,52)
TypeComparers.fourthTry$1(Types$Type, Types$Type, int):556->rgb(221,81,81)
TypeComparers.fourthTry$1(Types$Type, Types$Type, int):557->rgb(239,107,107)
TypeComparers.fourthTry$1(Types$Type, Types$Type, int):559->rgb(233,99,99)
TypeComparers.fourthTry$1(Types$Type, Types$Type, int):560->rgb(231,96,96)
TypeComparers.fourthTry$1(Types$Type, Types$Type, int):563->rgb(203,54,54)
TypeComparers.fourthTry$1(Types$Type, Types$Type, int):564->rgb(240,108,108)
TypeComparers.isDifferentTypeConstructor$(TypeComparers, Types$Type, Types$Type):81->rgb(204,55,55)
TypeComparers.isDifferentTypeConstructor(Types$Type, Types$Type):81->rgb(238,105,105)
TypeComparers.isHKSubType$(TypeComparers, Types$Type, Types$Type, int):369->rgb(236,103,103)
TypeComparers.isHKSubType(Types$Type, Types$Type, int):386->rgb(249,121,121)
TypeComparers.isNoArgStaticClassTypeRef(Types$Type):364->rgb(243,113,113)
TypeComparers.isPolySubType(Types$PolyType, Types$PolyType):351->rgb(214,71,71)
TypeComparers.isSameSingletonType(Types$SingletonType, Types$SingletonType):155->rgb(251,124,124)
TypeComparers.isSameType$(TypeComparers, Types$Type, Types$Type):94->rgb(223,84,84)
TypeComparers.isSameType(Types$Type, Types$Type):103->rgb(209,63,63)
TypeComparers.isSameType(Types$Type, Types$Type):106->rgb(243,112,112)
TypeComparers.isSameType(Types$Type, Types$Type):95->rgb(217,76,76)
TypeComparers.isSameType1(Types$Type, Types$Type):128->rgb(221,81,81)
TypeComparers.isSameType1(Types$Type, Types$Type):130->rgb(239,107,107)
TypeComparers.isSameType1(Types$Type, Types$Type):131->rgb(230,94,94)
TypeComparers.isSameType2$(TypeComparers, Types$Type, Types$Type):184->rgb(224,85,85)
TypeComparers.isSameType2(Types$Type, Types$Type):244->rgb(248,120,120)
TypeComparers.isSameType2(Types$Type, Types$Type):245->rgb(207,60,60)
TypeComparers.isSameType2(Types$Type, Types$Type):247->rgb(246,117,117)
TypeComparers.isSameType2(Types$Type, Types$Type):248->rgb(233,98,98)
TypeComparers.isSameTypeConstructor(Types$Type, Types$Type):88->rgb(241,110,110)
TypeComparers.isSameTypeConstructor(Types$Type, Types$Type):90->rgb(214,71,71)
TypeComparers.isSameTypeRef(Types$TypeRef, Types$TypeRef):140->rgb(248,120,120)
TypeComparers.isSameTypeRef(Types$TypeRef, Types$TypeRef):141->rgb(248,120,120)
TypeComparers.isSub$1(Types$Type, Types$Type, Types$Type, Types$Type):373->rgb(238,105,105)
TypeComparers.isSubType$(TypeComparers, Types$Type, Types$Type, int):252->rgb(222,82,82)
TypeComparers.isSubType(Types$Type, Types$Type, int):253->rgb(232,96,96)
TypeComparers.isSubType(Types$Type, Types$Type, int):274->rgb(242,111,111)
TypeComparers.isSubType(Types$Type, Types$Type, int):290->rgb(235,101,101)
TypeComparers.isSubType(Types$Type, Types$Type, int):294->rgb(227,89,89)
TypeComparers.isSubType(Types$Type, Types$Type, int):296->rgb(225,87,87)
TypeComparers.isSubType1(Types$Type, Types$Type, int):329->rgb(214,70,70)
TypeComparers.isSubType1(Types$Type, Types$Type, int):331->rgb(215,72,72)
TypeComparers.isSubType1(Types$Type, Types$Type, int):332->rgb(219,78,78)
TypeComparers.isSubType2(Types$Type, Types$Type, int):395->rgb(241,110,110)
TypeComparers.isSubType2(Types$Type, Types$Type, int):398->rgb(200,50,50)
TypeComparers.isSubType2(Types$Type, Types$Type, int):399->rgb(252,126,126)
TypeComparers.isSubType2(Types$Type, Types$Type, int):569->rgb(227,89,89)
TypeComparers.isUnifiable(Types$Type, Types$Type):39->rgb(207,60,60)
TypeComparers.isWeakSubType$(TypeComparers, Types$Type, Types$Type):573->rgb(209,64,64)
TypeComparers.isWeakSubType(Types$Type, Types$Type):575->rgb(212,68,68)
TypeComparers.isWeakSubType(Types$Type, Types$Type):578->rgb(242,111,111)
TypeComparers.isWeakSubType(Types$Type, Types$Type):580->rgb(227,89,89)
TypeComparers.isWeakSubType(Types$Type, Types$Type):582->rgb(208,61,61)
TypeComparers.isWeakSubType(Types$Type, Types$Type):592->rgb(242,111,111)
TypeComparers.mutateNonTypeConstructs$1(Types$Type, Types$Type, Types$Type):202->rgb(221,81,81)
TypeComparers.retry$1(Types$Type, Types$Type):189->rgb(237,104,104)
TypeComparers.retry$1(Types$Type, Types$Type):191->rgb(213,70,70)
TypeComparers.retry$1(Types$Type, Types$Type):192->rgb(218,76,76)
TypeComparers.retry$3(Types$Type, Types$Type, Types$Type, Types$Type, int):543->rgb(253,127,127)
TypeComparers.retry$4(Types$Type, Types$Type, int):478->rgb(210,65,65)
TypeComparers.sameAnnotatedTypes(Types$Type, Types$Type):121->rgb(218,77,77)
TypeComparers.sameAnnotatedTypes(Types$Type, Types$Type):122->rgb(221,81,81)
TypeComparers.sameSingletonType$1(Types$Type, Types$Type):221->rgb(218,77,77)
TypeComparers.sameTypeAndSameCaseClass$1(Types$Type, Types$Type):231->rgb(223,84,84)
TypeComparers.secondTry$1(Types$Type, Types$Type, int):463->rgb(228,91,91)
TypeComparers.secondTry$1(Types$Type, Types$Type, int):464->rgb(234,100,100)
TypeComparers.secondTry$1(Types$Type, Types$Type, int):468->rgb(218,77,77)
TypeComparers.secondTry$1(Types$Type, Types$Type, int):473->rgb(205,58,58)
TypeComparers.thirdTry$1(Types$Type, Types$Type, int):500->rgb(253,128,128)
TypeComparers.thirdTry$1(Types$Type, Types$Type, int):501->rgb(216,74,74)
TypeComparers.thirdTry$1(Types$Type, Types$Type, int):504->rgb(251,124,124)
TypeComparers.thirdTry$1(Types$Type, Types$Type, int):506->rgb(243,113,113)
TypeComparers.thirdTry$1(Types$Type, Types$Type, int):515->rgb(247,118,118)
TypeComparers.thirdTry$1(Types$Type, Types$Type, int):524->rgb(217,74,74)
TypeComparers.thirdTryRef$1(Types$Type, Types$TypeRef, Types$Type, Types$Type, int):486->rgb(206,58,58)
TypeComparers.thirdTryRef$1(Types$Type, Types$TypeRef, Types$Type, Types$Type, int):487->rgb(202,53,53)
TypeComparers.thirdTryRef$1(Types$Type, Types$TypeRef, Types$Type, Types$Type, int):488->rgb(229,92,92)
TypeComparers.thirdTryRef$1(Types$Type, Types$TypeRef, Types$Type, Types$Type, int):489->rgb(252,125,125)
TypeComparers.typeRelationPreCheck(Types$Type, Types$Type):324->rgb(238,105,105)
TypeComparers.typeRelationPreCheck(Types$Type, Types$Type):326->rgb(253,128,128)
TypeConstraints$TypeConstraint.$anonfun$isWithinBounds$1(Types$Type, Types$Type):149->rgb(246,117,117)
TypeConstraints$TypeConstraint.<init>(SymbolTable):73->rgb(213,70,70)
TypeConstraints$TypeConstraint.<init>(SymbolTable, List, List):71->rgb(229,93,93)
TypeConstraints$TypeConstraint.<init>(SymbolTable, List, List, Types$Type, Types$Type, boolean):87->rgb(242,112,112)
TypeConstraints$TypeConstraint.addHiBound(Types$Type, boolean):135->rgb(252,125,125)
TypeConstraints$TypeConstraint.checkWidening(Types$Type):122->rgb(206,58,58)
TypeConstraints$TypeConstraint.cloneInternal():161->rgb(218,76,76)
TypeConstraints$TypeConstraint.instValid():157->rgb(238,105,105)
TypeConstraints$TypeConstraint.instWithinBounds():146->rgb(239,107,107)
TypeConstraints$TypeConstraint.inst_$eq(Types$Type):155->rgb(221,81,81)
TypeConstraints$TypeConstraint.isWithinBounds(Types$Type):149->rgb(226,89,89)
TypeConstraints$TypeConstraint.isWithinBounds(Types$Type):151->rgb(206,58,58)
TypeConstraints$TypeConstraint.numlo():89->rgb(200,50,50)
TypeConstraints$UndoLog.log():23->rgb(223,84,84)
TypeConstraints$UndoLog.log_$eq(List):23->rgb(224,85,85)
TypeConstraints$UndoLog.record(Types$TypeVar):44->rgb(202,52,52)
TypeConstraints$UndoLog.undo(Function0):56->rgb(235,101,101)
TypeConstraints.$anonfun$solve$1(TypeConstraints, List, List, List, boolean, int, Symbols$Symbol, boolean, Types$Type, BooleanRef, Types$TypeVar, Symbols$Symbol, int):204->rgb(235,101,101)
TypeConstraints.$anonfun$solve$1(TypeConstraints, List, List, List, boolean, int, Symbols$Symbol, boolean, Types$Type, BooleanRef, Types$TypeVar, Symbols$Symbol, int):205->rgb(249,121,121)
TypeConstraints.$anonfun$solve$11(TypeConstraints, Types$TypeVar):267->rgb(240,109,109)
TypeConstraints.$anonfun$solve$9(TypeConstraints, List, List, List, boolean, int, Types$TypeVar, Symbols$Symbol, int):260->rgb(208,62,62)
TypeConstraints.solve$(TypeConstraints, List, List, List, boolean, int):192->rgb(207,61,61)
TypeConstraints.solve(List, List, List, boolean, int):260->rgb(243,113,113)
TypeConstraints.solve(List, List, List, boolean, int):267->rgb(220,79,79)
TypeConstraints.solveOne$1(Types$TypeVar, Symbols$Symbol, int, List, List, List, boolean, int):196->rgb(251,125,125)
TypeConstraints.solveOne$1(Types$TypeVar, Symbols$Symbol, int, List, List, List, boolean, int):200->rgb(212,67,67)
TypeConstraints.solveOne$1(Types$TypeVar, Symbols$Symbol, int, List, List, List, boolean, int):201->rgb(230,94,94)
TypeConstraints.solveOne$1(Types$TypeVar, Symbols$Symbol, int, List, List, List, boolean, int):214->rgb(237,104,104)
TypeConstraints.solveOne$1(Types$TypeVar, Symbols$Symbol, int, List, List, List, boolean, int):249->rgb(249,122,122)
TypeConstraints.solveOne$1(Types$TypeVar, Symbols$Symbol, int, List, List, List, boolean, int):253->rgb(221,81,81)
TypeConstraints.solveOne$1(Types$TypeVar, Symbols$Symbol, int, List, List, List, boolean, int):254->rgb(241,110,110)
TypeConstraints.undoLog$(TypeConstraints):17->rgb(205,58,58)
TypeConstraints.undoLog():17->rgb(234,99,99)
TypeDiagnostics$TyperDiagnostics$checkDead$.<init>(Typers$Typer):680->rgb(227,90,90)
TypeDiagnostics$TyperDiagnostics$checkDead$.<init>(Typers$Typer):681->rgb(220,79,79)
TypeDiagnostics$TyperDiagnostics$checkDead$.apply(Trees$Tree):701->rgb(252,126,126)
TypeDiagnostics$TyperDiagnostics$checkDead$.inMode(int, Trees$Tree):707->rgb(214,70,70)
TypeDiagnostics.typingInPattern$(TypeDiagnostics, Function0):60->rgb(250,122,122)
TypeDiagnostics.typingInPattern(Function0):63->rgb(203,55,55)
TypeMaps$$anon$1.apply(Object):322->rgb(238,105,105)
TypeMaps$$anon$1.apply(Types$Type):325->rgb(252,127,127)
TypeMaps$$anon$1.apply(Types$Type):335->rgb(244,114,114)
TypeMaps$ApproximateDependentMap$.apply(Object):918->rgb(247,119,119)
TypeMaps$ApproximateDependentMap$.apply(Types$Type):921->rgb(212,68,68)
TypeMaps$AsSeenFromMap.$anonfun$correspondingTypeArgument$2$adapted(Symbols$Symbol, Symbols$Symbol):552->rgb(252,126,126)
TypeMaps$AsSeenFromMap.$anonfun$correspondingTypeArgument$2(Symbols$Symbol, Symbols$Symbol):552->rgb(245,116,116)
TypeMaps$AsSeenFromMap.<init>(SymbolTable, Types$Type, Symbols$Symbol):455->rgb(219,78,78)
TypeMaps$AsSeenFromMap.<init>(SymbolTable, Types$Type, Symbols$Symbol):489->rgb(201,51,51)
TypeMaps$AsSeenFromMap.apply(Object):454->rgb(212,67,67)
TypeMaps$AsSeenFromMap.apply(Types$Type):481->rgb(234,100,100)
TypeMaps$AsSeenFromMap.apply(Types$Type):482->rgb(252,126,126)
TypeMaps$AsSeenFromMap.apply(Types$Type):483->rgb(200,50,50)
TypeMaps$AsSeenFromMap.apply(Types$Type):484->rgb(244,114,114)
TypeMaps$AsSeenFromMap.captureThis(Types$Type, Symbols$Symbol):524->rgb(231,96,96)
TypeMaps$AsSeenFromMap.classParameterAsSeen(Types$Type):608->rgb(229,93,93)
TypeMaps$AsSeenFromMap.correspondingTypeArgument(Types$Type, Types$Type):544->rgb(202,54,54)
TypeMaps$AsSeenFromMap.correspondingTypeArgument(Types$Type, Types$Type):552->rgb(212,68,68)
TypeMaps$AsSeenFromMap.correspondingTypeArgument(Types$Type, Types$Type):571->rgb(206,59,59)
TypeMaps$AsSeenFromMap.correspondingTypeArgument(Types$Type, Types$Type):573->rgb(235,101,101)
TypeMaps$AsSeenFromMap.isBaseClassOfEnclosingClass(Symbols$Symbol):500->rgb(245,116,116)
TypeMaps$AsSeenFromMap.isTypeParamOfEnclosingClass(Symbols$Symbol):507->rgb(236,102,102)
TypeMaps$AsSeenFromMap.isTypeParamOfEnclosingClass(Symbols$Symbol):509->rgb(246,117,117)
TypeMaps$AsSeenFromMap.loop$2(Symbols$Symbol, Symbols$Symbol):495->rgb(249,122,122)
TypeMaps$AsSeenFromMap.loop$2(Symbols$Symbol, Symbols$Symbol):496->rgb(234,100,100)
TypeMaps$AsSeenFromMap.loop$3(Types$Type, Symbols$Symbol, Types$Type, Symbols$Symbol):597->rgb(220,80,80)
TypeMaps$AsSeenFromMap.loop$3(Types$Type, Symbols$Symbol, Types$Type, Symbols$Symbol):599->rgb(219,78,78)
TypeMaps$AsSeenFromMap.loop$3(Types$Type, Symbols$Symbol, Types$Type, Symbols$Symbol):601->rgb(227,90,90)
TypeMaps$AsSeenFromMap.loop$3(Types$Type, Symbols$Symbol, Types$Type, Symbols$Symbol):603->rgb(224,86,86)
TypeMaps$AsSeenFromMap.loop$4(Types$Type, Symbols$Symbol, Types$ThisType):674->rgb(239,107,107)
TypeMaps$AsSeenFromMap.loop$4(Types$Type, Symbols$Symbol, Types$ThisType):677->rgb(200,50,50)
TypeMaps$AsSeenFromMap.loop$4(Types$Type, Symbols$Symbol, Types$ThisType):680->rgb(231,95,95)
TypeMaps$AsSeenFromMap.loop$4(Types$Type, Symbols$Symbol, Types$ThisType):684->rgb(231,95,95)
TypeMaps$AsSeenFromMap.nextBase$1(Types$Type, Symbols$Symbol):595->rgb(224,86,86)
TypeMaps$AsSeenFromMap.scala$reflect$internal$tpe$TypeMaps$AsSeenFromMap$$matchesPrefixAndClass(Types$Type, Symbols$Symbol, Symbols$Symbol):629->rgb(216,73,73)
TypeMaps$AsSeenFromMap.singleTypeAsSeen(Types$SingleType):692->rgb(227,90,90)
TypeMaps$AsSeenFromMap.singleTypeAsSeen(Types$SingleType):694->rgb(235,101,101)
TypeMaps$AsSeenFromMap.thisTypeAsSeen(Types$ThisType):686->rgb(214,71,71)
TypeMaps$CollectTypeCollector.collect(Types$Type):1092->rgb(205,58,58)
TypeMaps$CollectTypeCollector.traverse(Types$Type):1095->rgb(218,77,77)
TypeMaps$ContainsCollector.traverse(Types$Type):1056->rgb(243,113,113)
TypeMaps$ContainsCollector.traverse(Types$Type):1058->rgb(214,71,71)
TypeMaps$ContainsCollector.traverse(Types$Type):1064->rgb(237,104,104)
TypeMaps$ErroneousCollector$.traverse(Types$Type):1121->rgb(210,65,65)
TypeMaps$ErroneousCollector$.traverse(Types$Type):1122->rgb(203,55,55)
TypeMaps$ExistentialExtrapolation.$anonfun$extrapolate$2(TypeMaps$ExistentialExtrapolation, Symbols$Symbol):369->rgb(249,122,122)
TypeMaps$ExistentialExtrapolation.apply(Object):355->rgb(229,92,92)
TypeMaps$ExistentialExtrapolation.apply(Types$Type):382->rgb(248,120,120)
TypeMaps$ExistentialExtrapolation.countOccs(Types$Type):358->rgb(205,58,58)
TypeMaps$ExistentialExtrapolation.extrapolate(Types$Type):367->rgb(218,77,77)
TypeMaps$ExistentialExtrapolation.extrapolate(Types$Type):368->rgb(226,88,88)
TypeMaps$ExistentialExtrapolation.extrapolate(Types$Type):371->rgb(246,117,117)
TypeMaps$ExistentialExtrapolation.mapOver(Types$Type):409->rgb(218,77,77)
TypeMaps$FindTypeCollector.traverse(Types$Type):1110->rgb(232,97,97)
TypeMaps$FindTypeCollector.traverse(Types$Type):1111->rgb(218,76,76)
TypeMaps$FindTypeCollector.traverse(Types$Type):1112->rgb(215,72,72)
TypeMaps$ForEachTypeTraverser.traverse(Types$Type):1102->rgb(222,83,83)
TypeMaps$ForEachTypeTraverser.traverse(Types$Type):1103->rgb(209,63,63)
TypeMaps$InstantiateDependentMap.<init>(SymbolTable, List, List):927->rgb(244,115,115)
TypeMaps$InstantiateDependentMap.apply(Object):926->rgb(237,104,104)
TypeMaps$InstantiateDependentMap.apply(Types$Type):990->rgb(247,119,119)
TypeMaps$SubstMap.<init>(SymbolTable, List, List):704->rgb(233,98,98)
TypeMaps$SubstMap.apply(Object):702->rgb(253,128,128)
TypeMaps$SubstMap.apply(Types$Type):763->rgb(218,77,77)
TypeMaps$SubstMap.apply(Types$Type):764->rgb(217,74,74)
TypeMaps$SubstMap.apply(Types$Type):779->rgb(202,52,52)
TypeMaps$SubstMap.apply(Types$Type):780->rgb(214,70,70)
TypeMaps$SubstMap.apply(Types$Type):782->rgb(210,65,65)
TypeMaps$SubstMap.apply(Types$Type):783->rgb(241,110,110)
TypeMaps$SubstMap.apply(Types$Type):784->rgb(235,102,102)
TypeMaps$SubstMap.fromContains(List):756->rgb(241,110,110)
TypeMaps$SubstMap.renameBoundSyms(Types$Type):727->rgb(241,111,111)
TypeMaps$SubstMap.subst(Types$Type, Symbols$Symbol, List, List):740->rgb(244,114,114)
TypeMaps$SubstMap.substFor$1(Symbols$Symbol, Types$Type):765->rgb(243,112,112)
TypeMaps$SubstSymMap.<init>(SymbolTable, List, List):798->rgb(202,53,53)
TypeMaps$SubstSymMap.apply(Object):798->rgb(213,69,69)
TypeMaps$SubstSymMap.apply(Types$Type):816->rgb(235,100,100)
TypeMaps$SubstSymMap.apply(Types$Type):817->rgb(211,66,66)
TypeMaps$SubstSymMap.apply(Types$Type):819->rgb(203,55,55)
TypeMaps$SubstSymMap.apply(Types$Type):821->rgb(216,74,74)
TypeMaps$SubstSymMap.apply(Types$Type):823->rgb(223,84,84)
TypeMaps$SubstSymMap.apply(Types$Type):825->rgb(240,109,109)
TypeMaps$SubstSymMap.subst(Symbols$Symbol, List, List):808->rgb(226,88,88)
TypeMaps$SubstSymMap.substFor(Symbols$Symbol):811->rgb(241,110,110)
TypeMaps$SubstSymMap.toType(Types$Type, Object):798->rgb(247,118,118)
TypeMaps$SubstSymMap.toType(Types$Type, Symbols$Symbol):802->rgb(244,114,114)
TypeMaps$SubstThisMap.apply(Object):889->rgb(217,74,74)
TypeMaps$SubstThisMap.apply(Types$Type):891->rgb(229,92,92)
TypeMaps$SubstThisMap.apply(Types$Type):892->rgb(230,94,94)
TypeMaps$SubstTypeMap.<init>(SymbolTable, List, List):866->rgb(211,66,66)
TypeMaps$TypeCollector.collect(Types$Type):308->rgb(220,79,79)
TypeMaps$TypeCollector.collect(Types$Type):309->rgb(244,114,114)
TypeMaps$TypeMap.$anonfun$mapOver$1(TypeMaps$TypeMap, List):125->rgb(251,125,125)
TypeMaps$TypeMap.$anonfun$mapOver$2(TypeMaps$TypeMap, List):130->rgb(247,118,118)
TypeMaps$TypeMap.$anonfun$mapOver$3(TypeMaps$TypeMap, Types$Type):145->rgb(243,113,113)
TypeMaps$TypeMap.$anonfun$mapOverAnnotations$1(TypeMaps$TypeMap, AnnotationInfos$AnnotationInfo):257->rgb(217,75,75)
TypeMaps$TypeMap.$anonfun$mapOverArgs$1(TypeMaps$TypeMap, Types$Type, Symbols$Symbol):204->rgb(251,124,124)
TypeMaps$TypeMap.$anonfun$mapOverArgs$2(TypeMaps$TypeMap, Types$Type):204->rgb(212,68,68)
TypeMaps$TypeMap.applyToSymbolInfo(Symbols$Symbol):212->rgb(214,71,71)
TypeMaps$TypeMap.applyToSymbolInfo(Symbols$Symbol):215->rgb(204,56,56)
TypeMaps$TypeMap.loop$1(List):224->rgb(247,118,118)
TypeMaps$TypeMap.mapOver(AnnotationInfos$AnnotationInfo):246->rgb(225,87,87)
TypeMaps$TypeMap.mapOver(List):240->rgb(228,91,91)
TypeMaps$TypeMap.mapOver(List):242->rgb(242,111,111)
TypeMaps$TypeMap.mapOver(Scopes$Scope):232->rgb(250,123,123)
TypeMaps$TypeMap.mapOver(Scopes$Scope):234->rgb(229,93,93)
TypeMaps$TypeMap.mapOver(Types$Type):101->rgb(226,88,88)
TypeMaps$TypeMap.mapOver(Types$Type):102->rgb(219,77,77)
TypeMaps$TypeMap.mapOver(Types$Type):105->rgb(217,74,74)
TypeMaps$TypeMap.mapOver(Types$Type):109->rgb(236,103,103)
TypeMaps$TypeMap.mapOver(Types$Type):111->rgb(253,128,128)
TypeMaps$TypeMap.mapOver(Types$Type):115->rgb(244,114,114)
TypeMaps$TypeMap.mapOver(Types$Type):120->rgb(217,75,75)
TypeMaps$TypeMap.mapOver(Types$Type):122->rgb(231,95,95)
TypeMaps$TypeMap.mapOver(Types$Type):126->rgb(246,117,117)
TypeMaps$TypeMap.mapOver(Types$Type):131->rgb(232,96,96)
TypeMaps$TypeMap.mapOver(Types$Type):133->rgb(226,88,88)
TypeMaps$TypeMap.mapOver(Types$Type):135->rgb(222,82,82)
TypeMaps$TypeMap.mapOver(Types$Type):143->rgb(208,61,61)
TypeMaps$TypeMap.mapOver(Types$Type):146->rgb(247,119,119)
TypeMaps$TypeMap.mapOver(Types$Type):148->rgb(211,66,66)
TypeMaps$TypeMap.mapOver(Types$Type):154->rgb(211,66,66)
TypeMaps$TypeMap.mapOver(Types$Type):155->rgb(240,108,108)
TypeMaps$TypeMap.mapOver(Types$Type):156->rgb(214,71,71)
TypeMaps$TypeMap.mapOver(Types$Type):159->rgb(213,69,69)
TypeMaps$TypeMap.mapOver(Types$Type):175->rgb(205,57,57)
TypeMaps$TypeMap.mapOver(Types$Type):199->rgb(227,89,89)
TypeMaps$TypeMap.mapOverAnnotations(List):257->rgb(209,63,63)
TypeMaps$TypeMap.mapOverArgs(List, List):204->rgb(211,66,66)
TypeMaps$TypeMap.noChangeToSymbols(List):226->rgb(227,89,89)
TypeMaps$TypeMap.withVariance(int, Function0):195->rgb(201,52,52)
TypeMaps$TypeTraverser.apply(Object):295->rgb(234,100,100)
TypeMaps$TypeTraverser.apply(Types$Type):297->rgb(245,116,116)
TypeMaps$dropIllegalStarTypes$.apply(Object):59->rgb(243,113,113)
TypeMaps$dropIllegalStarTypes$.apply(Types$Type):69->rgb(226,88,88)
TypeMaps$normalizeAliases$.apply(Object):19->rgb(244,115,115)
TypeMaps$normalizeAliases$.apply(Types$Type):22->rgb(233,99,99)
TypeMaps$normalizeAliases$.apply(Types$Type):23->rgb(252,126,126)
TypeMaps$typeVarToOriginMap$.apply(Types$Type):1041->rgb(218,77,77)
TypeMaps.isPossiblePrefix$(TypeMaps, Symbols$Symbol):443->rgb(225,86,86)
TypeMaps.isPossiblePrefix(Symbols$Symbol):443->rgb(238,106,106)
TypeMaps.skipPrefixOf$(TypeMaps, Types$Type, Symbols$Symbol):445->rgb(215,72,72)
TypeMaps.skipPrefixOf(Types$Type, Symbols$Symbol):446->rgb(241,110,110)
Typers$NormalTyper.<init>(Analyzer, Contexts$Context):104->rgb(248,120,120)
Typers$Typer$$anon$2.$anonfun$isCoercible$1(Typers$Typer$$anon$2, Types$Type, Types$Type):125->rgb(210,65,65)
Typers$Typer$$anon$2.isCoercible(Types$Type, Types$Type):125->rgb(233,99,99)
Typers$Typer$$anon$3.apply(Object):3929->rgb(244,114,114)
Typers$Typer$$anon$3.apply(Types$Type):3932->rgb(204,56,56)
Typers$Typer$$anon$3.apply(Types$Type):3934->rgb(236,103,103)
Typers$Typer$$anon$3.apply(Types$Type):3940->rgb(249,122,122)
Typers$Typer$$anon$3.apply(Types$Type):3943->rgb(201,52,52)
Typers$Typer$ArrayInstantiation$2$.unapply(Trees$Apply):4734->rgb(202,53,53)
Typers$Typer$ArrayInstantiation$2$.unapply(Trees$Apply):4735->rgb(221,80,80)
Typers$Typer$checkNoEscaping$.apply(Object):367->rgb(232,97,97)
Typers$Typer$checkNoEscaping$.apply(Types$Type):433->rgb(247,118,118)
Typers$Typer$checkNoEscaping$.apply(Types$Type):436->rgb(221,80,80)
Typers$Typer$checkNoEscaping$.check(Symbols$Symbol, Scopes$Scope, Types$Type, Trees$Tree):383->rgb(240,108,108)
Typers$Typer$checkNoEscaping$.checkNoEscape$1(Symbols$Symbol):410->rgb(244,114,114)
Typers$Typer$checkNoEscaping$.privates(Symbols$Symbol, Trees$Tree):377->rgb(240,109,109)
Typers$Typer$dyna$.acceptsApplyDynamic(Types$Type):4089->rgb(229,93,93)
Typers$Typer.$anonfun$adapt$1(Typers$Typer, Trees$Tree, int, Types$Type, Trees$Tree, Typers$Typer):846->rgb(241,110,110)
Typers$Typer.$anonfun$adapt$1(Typers$Typer, Trees$Tree, int, Types$Type, Trees$Tree, Typers$Typer):885->rgb(201,52,52)
Typers$Typer.$anonfun$adapt$12(Symbols$Symbol):1138->rgb(211,66,66)
Typers$Typer.$anonfun$adapt$14(Typers$Typer, Trees$Tree, Symbols$Symbol):1205->rgb(217,75,75)
Typers$Typer.$anonfun$adapt$2(Trees$Tree, int, Types$Type, Typers$Typer):847->rgb(205,58,58)
Typers$Typer.$anonfun$adaptToMemberWithArgs$7(Typers$Typer, Trees$Tree, Names$Name, Typers$Typer):1327->rgb(227,89,89)
Typers$Typer.$anonfun$applyImplicitArgs$2(Typers$Typer, Trees$Tree, ListBuffer, ListBuffer, BooleanRef, ObjectRef, Symbols$Symbol):174->rgb(213,69,69)
Typers$Typer.$anonfun$applyImplicitArgs$5$adapted(Trees$Tree, List, Implicits$SearchResult):196->rgb(228,91,91)
Typers$Typer.$anonfun$applyImplicitArgs$5(Trees$Tree, List, Implicits$SearchResult):197->rgb(201,51,51)
Typers$Typer.$anonfun$checkFeature$3(Typers$Typer, Position, Symbols$Symbol, Function0, String):746->rgb(210,65,65)
Typers$Typer.$anonfun$doTypedApply$13(Typers$Typer, List, int, Trees$Tree, Types$Type, List):3373->rgb(235,101,101)
Typers$Typer.$anonfun$doTypedApply$13(Typers$Typer, List, int, Trees$Tree, Types$Type, List):3375->rgb(213,69,69)
Typers$Typer.$anonfun$doTypedApply$14(Typers$Typer, Types$Type, int, Trees$Tree, List):3405->rgb(223,83,83)
Typers$Typer.$anonfun$doTypedApply$28(Typers$Typer, Trees$Tree):3566->rgb(234,99,99)
Typers$Typer.$anonfun$doTypedApply$29(Typers$Typer, Trees$Tree):3593->rgb(226,89,89)
Typers$Typer.$anonfun$doTypedApply$3$adapted(Typers$Typer, Types$Type, List, Types$Type, Symbols$Symbol):3311->rgb(225,86,86)
Typers$Typer.$anonfun$doTypedApply$3(Typers$Typer, Types$Type, List, Types$Type, Symbols$Symbol):3322->rgb(232,97,97)
Typers$Typer.$anonfun$doTypedApply$31(Typers$Typer, Trees$Tree, List, int, Trees$Tree, List, Types$MethodType):3613->rgb(223,83,83)
Typers$Typer.$anonfun$doTypedApply$34(Typers$Typer, int, Trees$Tree, List, List, List, ObjectRef, Trees$Tree, Types$Type):3640->rgb(224,85,85)
Typers$Typer.$anonfun$doTypedApply$4$adapted(Typers$Typer, List, Types$Type, Symbols$Symbol):3327->rgb(231,95,95)
Typers$Typer.$anonfun$doTypedApply$4(Typers$Typer, List, Types$Type, Symbols$Symbol):3328->rgb(248,120,120)
Typers$Typer.$anonfun$enterSyms$1(Typers$Typer, ObjectRef, Trees$Tree):1901->rgb(220,79,79)
Typers$Typer.$anonfun$needsInstantiation$1(Typers$Typer, List, Types$Type, Trees$Tree):3261->rgb(251,124,124)
Typers$Typer.$anonfun$needsInstantiation$3(List, Types$Type, Trees$ValDef):3262->rgb(202,53,53)
Typers$Typer.$anonfun$needsInstantiation$4(Types$Type, Symbols$Symbol):3262->rgb(221,81,81)
Typers$Typer.$anonfun$packedType$2$adapted(Typers$Typer, Trees$Tree, Symbols$Symbol, Types$Type):3927->rgb(235,101,101)
Typers$Typer.$anonfun$packedType$2(Typers$Typer, Trees$Tree, Symbols$Symbol, Types$Type):3927->rgb(241,110,110)
Typers$Typer.$anonfun$packedType$3$adapted(Typers$Typer, Trees$Tree, Symbols$Symbol, ObjectRef, ObjectRef, ListBuffer, Types$Type):3961->rgb(222,83,83)
Typers$Typer.$anonfun$packedType$3(Typers$Typer, Trees$Tree, Symbols$Symbol, ObjectRef, ObjectRef, ListBuffer, Types$Type):3965->rgb(202,54,54)
Typers$Typer.$anonfun$packedType$3(Typers$Typer, Trees$Tree, Symbols$Symbol, ObjectRef, ObjectRef, ListBuffer, Types$Type):3980->rgb(229,93,93)
Typers$Typer.$anonfun$packedType$3(Typers$Typer, Trees$Tree, Symbols$Symbol, ObjectRef, ObjectRef, ListBuffer, Types$Type):3981->rgb(200,50,50)
Typers$Typer.$anonfun$packedTypes$1(Typers$Typer, Trees$Tree):2545->rgb(236,103,103)
Typers$Typer.$anonfun$reenterValueParams$1(Typers$Typer, List):443->rgb(217,75,75)
Typers$Typer.$anonfun$samToFunctionType$1(Typers$Typer, Types$Type):775->rgb(222,82,82)
Typers$Typer.$anonfun$silent$2(Typers$Typer, Function1, Tuple2, Tuple2, Tuple2, Tuple2):686->rgb(201,51,51)
Typers$Typer.$anonfun$silent$2(Typers$Typer, Function1, Tuple2, Tuple2, Tuple2, Tuple2):714->rgb(201,52,52)
Typers$Typer.$anonfun$typed1$25(Trees$Tree, int, Types$Type, Trees$Tree, List, Typers$Typer):4638->rgb(236,103,103)
Typers$Typer.$anonfun$typed1$3(Typers$Typer, int, Trees$Tree, Trees$Tree):4329->rgb(229,93,93)
Typers$Typer.$anonfun$typed1$35(int, Types$Type, Trees$Tree, Typers$Typer):4683->rgb(209,63,63)
Typers$Typer.$anonfun$typed1$38(int, Trees$Tree, Types$Type, Typers$Typer):4703->rgb(211,67,67)
Typers$Typer.$anonfun$typed1$50(Typers$Typer, Trees$Tree, Names$Name):4885->rgb(243,113,113)
Typers$Typer.$anonfun$typed1$55(Trees$Tree, Symbols$Symbol, Trees$RefTree, Typers$Typer):4951->rgb(231,95,95)
Typers$Typer.$anonfun$typed1$58(Typers$Typer, int, Trees$Tree, Types$Type):4992->rgb(247,118,118)
Typers$Typer.$anonfun$typed1$61$adapted(Typers$Typer, int, Symbols$Symbol):5053->rgb(209,64,64)
Typers$Typer.$anonfun$typed1$61(Typers$Typer, int, Symbols$Symbol):5053->rgb(233,98,98)
Typers$Typer.$anonfun$typed1$69(Typers$Typer, int, Trees$Tree, Trees$Tree, Symbols$Symbol):5145->rgb(215,73,73)
Typers$Typer.$anonfun$typed1$92(Typers$Typer, int, Trees$ExistentialTypeTree, Typers$Typer):5439->rgb(238,105,105)
Typers$Typer.$anonfun$typed1$95(int, Types$Type, Trees$Function, Typers$Typer):5466->rgb(243,112,112)
Typers$Typer.$anonfun$typed1$96(int, Types$Type, Trees$Block, Typers$Typer):5500->rgb(238,106,106)
Typers$Typer.$anonfun$typedArg$1(Trees$Tree, Types$Type, int, Typers$Typer):3242->rgb(251,124,124)
Typers$Typer.$anonfun$typedArgs$1(Typers$Typer, int, Trees$Tree):3247->rgb(206,59,59)
Typers$Typer.$anonfun$typedBlock$1(Typers$Typer, Trees$Tree):2406->rgb(202,53,53)
Typers$Typer.$anonfun$typedBlock$3(Typers$Typer, Types$Type, ListBuffer, Scopes$Scope, Trees$ClassDef, LazyRef, Symbols$Symbol):2443->rgb(232,97,97)
Typers$Typer.$anonfun$typedCases$1(Typers$Typer, Types$Type, Types$Type, Trees$CaseDef):2540->rgb(237,104,104)
Typers$Typer.$anonfun$typedClassDef$2(Typers$Typer, Trees$TypeDef):1812->rgb(250,123,123)
Typers$Typer.$anonfun$typedDefDef$11(Typers$Typer, List):2306->rgb(240,109,109)
Typers$Typer.$anonfun$typedDefDef$12(Symbols$Symbol):2306->rgb(208,62,62)
Typers$Typer.$anonfun$typedDefDef$13(Typers$Typer, List, Symbols$Symbol):2312->rgb(228,91,91)
Typers$Typer.$anonfun$typedDefDef$4(Typers$Typer, Trees$TypeDef):2261->rgb(239,108,108)
Typers$Typer.$anonfun$typedDefDef$5(Typers$Typer, List):2262->rgb(248,120,120)
Typers$Typer.$anonfun$typedDefDef$6(Typers$Typer, Trees$ValDef):2262->rgb(238,105,105)
Typers$Typer.$anonfun$typedDefDef$8(Typers$Typer, List):2268->rgb(204,56,56)
Typers$Typer.$anonfun$typedDefDef$9(Typers$Typer, Trees$ValDef):2269->rgb(232,97,97)
Typers$Typer.$anonfun$typedFunction$12(Typers$Typer, Trees$ValDef):3022->rgb(243,112,112)
Typers$Typer.$anonfun$typedFunction$13(Typers$Typer, Trees$ValDef):3026->rgb(206,59,59)
Typers$Typer.$anonfun$typedFunction$14(Symbols$Symbol):3027->rgb(229,92,92)
Typers$Typer.$anonfun$typedHigherKindedType$1(Typers$Typer, Trees$Tree, Types$Type):5710->rgb(222,82,82)
Typers$Typer.$anonfun$typedInternal$1(Typers$Typer, int, Types$Type, Trees$Tree, Types$Type):5588->rgb(207,60,60)
Typers$Typer.$anonfun$typedParentTypes$1(Typers$Typer, Trees$Template, Trees$Tree):1682->rgb(223,84,84)
Typers$Typer.$anonfun$typedPattern$1(Typers$Typer, Trees$Tree, Types$Type):5697->rgb(204,56,56)
Typers$Typer.$anonfun$typedPattern$2(Typers$Typer, Trees$Tree, Types$Type):5697->rgb(233,99,99)
Typers$Typer.$anonfun$typedStats$10(Typers$Typer, List, Symbols$Symbol, boolean, boolean, boolean, Trees$Tree):3226->rgb(238,105,105)
Typers$Typer.$anonfun$typedStats$4$adapted(Typers$Typer, List, Symbols$Symbol, boolean, boolean, boolean, List, ObjectRef, Symbols$Symbol):3174->rgb(214,70,70)
Typers$Typer.$anonfun$typedStats$4(Typers$Typer, List, Symbols$Symbol, boolean, boolean, boolean, List, ObjectRef, Symbols$Symbol):3176->rgb(202,53,53)
Typers$Typer.$anonfun$typedStats$6$adapted(Typers$Typer, List, Symbols$Symbol, boolean, boolean, boolean, ObjectRef, Symbols$Symbol, Trees$Tree):3176->rgb(242,111,111)
Typers$Typer.$anonfun$typedStats$6(Typers$Typer, List, Symbols$Symbol, boolean, boolean, boolean, ObjectRef, Symbols$Symbol, Trees$Tree):3178->rgb(201,51,51)
Typers$Typer.$anonfun$typedStats$6(Typers$Typer, List, Symbols$Symbol, boolean, boolean, boolean, ObjectRef, Symbols$Symbol, Trees$Tree):3179->rgb(211,67,67)
Typers$Typer.$anonfun$typedStats$7$adapted(Typers$Typer, Trees$Tree, Trees$Tree):3214->rgb(251,125,125)
Typers$Typer.$anonfun$typedStats$7(Typers$Typer, Trees$Tree, Trees$Tree):3214->rgb(230,95,95)
Typers$Typer.$anonfun$typedStats$8(Typers$Typer, ObjectRef, Trees$Tree, List):3221->rgb(213,70,70)
Typers$Typer.$anonfun$typedTemplate$1(Trees$Tree):1916->rgb(242,112,112)
Typers$Typer.$anonfun$typedTypeDef$2(Trees$TypeDef, Typers$Typer):2332->rgb(243,113,113)
Typers$Typer.$anonfun$typerWithLocalContext$1(Typers$Typer, Contexts$Context, Function1):488->rgb(245,116,116)
Typers$Typer.$anonfun$validateParentClasses$7(Trees$Tree):1775->rgb(207,60,60)
Typers$Typer.$anonfun$validateParentClasses$8(Typers$Typer, List, Types$Type, ListBuffer, Symbols$Symbol, Trees$Tree):1777->rgb(231,96,96)
Typers$Typer.<init>(Analyzer, Contexts$Context):122->rgb(233,99,99)
Typers$Typer.adapt(Trees$Tree, int, Types$Type, Trees$Tree):1177->rgb(214,71,71)
Typers$Typer.adapt(Trees$Tree, int, Types$Type, Trees$Tree):1183->rgb(215,73,73)
Typers$Typer.adapt(Trees$Tree, int, Types$Type, Trees$Tree):1184->rgb(209,64,64)
Typers$Typer.adapt(Trees$Tree, int, Types$Type, Trees$Tree):1185->rgb(205,57,57)
Typers$Typer.adapt(Trees$Tree, int, Types$Type, Trees$Tree):1189->rgb(225,87,87)
Typers$Typer.adapt(Trees$Tree, int, Types$Type, Trees$Tree):1190->rgb(243,113,113)
Typers$Typer.adapt(Trees$Tree, int, Types$Type, Trees$Tree):1192->rgb(206,60,60)
Typers$Typer.adapt(Trees$Tree, int, Types$Type, Trees$Tree):1194->rgb(212,68,68)
Typers$Typer.adapt(Trees$Tree, int, Types$Type, Trees$Tree):1202->rgb(213,69,69)
Typers$Typer.adapt(Trees$Tree, int, Types$Type, Trees$Tree):1205->rgb(206,59,59)
Typers$Typer.adapt(Trees$Tree, int, Types$Type, Trees$Tree):1208->rgb(249,122,122)
Typers$Typer.adapt(Trees$Tree, int, Types$Type, Trees$Tree):1209->rgb(224,85,85)
Typers$Typer.adapt(Trees$Tree, int, Types$Type, Trees$Tree):1212->rgb(207,61,61)
Typers$Typer.adapt(Trees$Tree, int, Types$Type, Trees$Tree):1214->rgb(201,52,52)
Typers$Typer.adapt(Trees$Tree, int, Types$Type, Trees$Tree):1216->rgb(250,123,123)
Typers$Typer.adaptAfterOverloadResolution(Trees$Tree, int, Types$Type, Trees$Tree):1223->rgb(254,128,128)
Typers$Typer.adaptConstant$1(Constants$Constant, Trees$Tree):1000->rgb(240,109,109)
Typers$Typer.adaptExprNotFunMode$1(Trees$Tree, int, Types$Type):1111->rgb(209,64,64)
Typers$Typer.adaptExprNotFunMode$1(Trees$Tree, int, Types$Type):1120->rgb(238,106,106)
Typers$Typer.adaptToImplicitMethod$1(Types$MethodType, Trees$Tree, int, Types$Type, Trees$Tree):479->rgb(200,50,50)
Typers$Typer.adaptToImplicitMethod$1(Types$MethodType, Trees$Tree, int, Types$Type, Trees$Tree):837->rgb(208,62,62)
Typers$Typer.adaptToMember(Trees$Tree, Types$Type, boolean, boolean):1277->rgb(204,56,56)
Typers$Typer.adaptToMemberWithArgs(Trees$Tree, Trees$Tree, Names$Name, int, boolean, boolean):1327->rgb(252,126,126)
Typers$Typer.adaptToName(Trees$Tree, Names$Name):1340->rgb(230,94,94)
Typers$Typer.adaptType$1(Trees$Tree, int, Types$Type):977->rgb(225,87,87)
Typers$Typer.addIfLocal$1(Symbols$Symbol, Types$Type, Trees$Tree, Symbols$Symbol, ObjectRef, ObjectRef, ListBuffer):3951->rgb(226,89,89)
Typers$Typer.addLocals$1(Types$Type, Trees$Tree, Symbols$Symbol, ObjectRef, ObjectRef):3961->rgb(253,127,127)
Typers$Typer.addSynthetics$1(List, Scopes$Scope, List, Symbols$Symbol, boolean, boolean, boolean):3152->rgb(217,75,75)
Typers$Typer.addSynthetics$1(List, Scopes$Scope, List, Symbols$Symbol, boolean, boolean, boolean):3174->rgb(219,77,77)
Typers$Typer.addSynthetics$1(List, Scopes$Scope, List, Symbols$Symbol, boolean, boolean, boolean):3220->rgb(231,96,96)
Typers$Typer.applyImplicitArgs(Trees$Tree):167->rgb(223,84,84)
Typers$Typer.applyImplicitArgs(Trees$Tree):196->rgb(243,113,113)
Typers$Typer.applyMeth$1(Trees$Tree):1136->rgb(201,51,51)
Typers$Typer.applyOrElseMethodDef$1(Names$TermName, Position, boolean, Trees$Tree, int, Types$Type, Types$Type, Symbols$ClassSymbol, Trees$Tree, List):2677->rgb(214,70,70)
Typers$Typer.applyPossible$1(int, Trees$Tree):1140->rgb(203,54,54)
Typers$Typer.applyPossible$1(int, Trees$Tree):1144->rgb(212,68,68)
Typers$Typer.atOwner(Trees$Tree, Symbols$Symbol):5631->rgb(225,86,86)
Typers$Typer.body$2(Trees$Tree, int, Types$Type):5549->rgb(234,100,100)
Typers$Typer.body$2(Trees$Tree, int, Types$Type):5552->rgb(223,84,84)
Typers$Typer.checkDead$lzycompute$1():113->rgb(236,103,103)
Typers$Typer.checkDead():113->rgb(210,64,64)
Typers$Typer.checkExistentialsFeature(Position, Types$Type, String):763->rgb(221,81,81)
Typers$Typer.checkExistentialsFeature(Position, Types$Type, String):765->rgb(219,78,78)
Typers$Typer.checkNoDoubleDefs$1(Scopes$Scope, boolean):3109->rgb(237,104,104)
Typers$Typer.checkNoDoubleDefs$1(Scopes$Scope, boolean):3111->rgb(232,97,97)
Typers$Typer.checkNonCyclic(Position, Types$Type):312->rgb(214,71,71)
Typers$Typer.checkNonCyclic(Position, Types$Type):313->rgb(214,70,70)
Typers$Typer.checkNonCyclic(Position, Types$Type, Symbols$Symbol):330->rgb(236,103,103)
Typers$Typer.checkNonCyclic(Symbols$Symbol):336->rgb(212,68,68)
Typers$Typer.checkNonCyclic(Trees$Tree, Trees$Tree):340->rgb(236,103,103)
Typers$Typer.checkNotLocked$1(Symbols$Symbol, Position):308->rgb(209,63,63)
Typers$Typer.checkStablePrefixClassType(Trees$Tree):284->rgb(221,80,80)
Typers$Typer.computeType(Trees$Tree, Types$Type):5739->rgb(225,86,86)
Typers$Typer.computeType(Trees$Tree, Types$Type):5741->rgb(253,128,128)
Typers$Typer.computeType(Trees$Tree, Types$Type):5742->rgb(251,125,125)
Typers$Typer.containsDef$1(Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):3916->rgb(224,86,86)
Typers$Typer.containsDef$1(Symbols$Symbol, Symbols$Symbol, Symbols$Symbol):3918->rgb(238,105,105)
Typers$Typer.context():255->rgb(220,79,79)
Typers$Typer.convertToAssignment$1(Trees$Tree, Trees$Tree, Names$Name, List, Trees$Tree):4760->rgb(238,105,105)
Typers$Typer.dealias$1(Symbols$Symbol, Trees$Tree):551->rgb(218,77,77)
Typers$Typer.defDefTyper$1(Trees$DefDef, Symbols$Symbol):5213->rgb(201,52,52)
Typers$Typer.doTypedApply(Trees$Tree, Trees$Tree, List, int, Types$Type):3338->rgb(246,117,117)
Typers$Typer.doTypedApply(Trees$Tree, Trees$Tree, List, int, Types$Type):3341->rgb(239,107,107)
Typers$Typer.doTypedApply(Trees$Tree, Trees$Tree, List, int, Types$Type):3416->rgb(213,69,69)
Typers$Typer.doTypedApply(Trees$Tree, Trees$Tree, List, int, Types$Type):3418->rgb(232,96,96)
Typers$Typer.doTypedApply(Trees$Tree, Trees$Tree, List, int, Types$Type):3435->rgb(238,105,105)
Typers$Typer.doTypedApply(Trees$Tree, Trees$Tree, List, int, Types$Type):3437->rgb(217,75,75)
Typers$Typer.doTypedApply(Trees$Tree, Trees$Tree, List, int, Types$Type):3566->rgb(229,93,93)
Typers$Typer.doTypedApply(Trees$Tree, Trees$Tree, List, int, Types$Type):3612->rgb(208,62,62)
Typers$Typer.doTypedApply(Trees$Tree, Trees$Tree, List, int, Types$Type):3613->rgb(231,95,95)
Typers$Typer.doTypedApply(Trees$Tree, Trees$Tree, List, int, Types$Type):3615->rgb(226,89,89)
Typers$Typer.doTypedApply(Trees$Tree, Trees$Tree, List, int, Types$Type):3651->rgb(240,108,108)
Typers$Typer.dropExistential(Types$Type):259->rgb(245,115,115)
Typers$Typer.dropExistential(Types$Type):262->rgb(252,125,125)
Typers$Typer.emptyApplication$1(Trees$Tree, int, Types$Type, Trees$Tree):900->rgb(237,103,103)
Typers$Typer.enterSym(Contexts$Context, Trees$Tree):1905->rgb(252,126,126)
Typers$Typer.enterSym(Contexts$Context, Trees$Tree):1906->rgb(210,65,65)
Typers$Typer.enterSyms(Contexts$Context, List):1901->rgb(220,80,80)
Typers$Typer.expectsStable$1(Trees$Tree, int, Types$Type):523->rgb(231,95,95)
Typers$Typer.expectsStable$1(Trees$Tree, int, Types$Type):524->rgb(210,65,65)
Typers$Typer.expectsStable$1(Trees$Tree, int, Types$Type):525->rgb(245,115,115)
Typers$Typer.extractorForUncheckedType(Position, Types$Type):113->rgb(207,61,61)
Typers$Typer.finishMethodSynthesis(Trees$Template, Symbols$Symbol, Contexts$Context):1888->rgb(231,95,95)
Typers$Typer.fixDuplicateSyntheticParents(List):1671->rgb(217,75,75)
Typers$Typer.fixDuplicateSyntheticParents(List):1672->rgb(214,71,71)
Typers$Typer.handleMonomorphicCall$1(Trees$Tree, List, int, Trees$Tree, List, Types$MethodType):3584->rgb(253,128,128)
Typers$Typer.handleMonomorphicCall$1(Trees$Tree, List, int, Trees$Tree, List, Types$MethodType):3585->rgb(210,65,65)
Typers$Typer.handleMonomorphicCall$1(Trees$Tree, List, int, Trees$Tree, List, Types$MethodType):3587->rgb(227,90,90)
Typers$Typer.handleMonomorphicCall$1(Trees$Tree, List, int, Trees$Tree, List, Types$MethodType):3593->rgb(246,117,117)
Typers$Typer.handleMonomorphicCall$1(Trees$Tree, List, int, Trees$Tree, List, Types$MethodType):3607->rgb(243,112,112)
Typers$Typer.handleMonomorphicCall$1(Trees$Tree, List, int, Trees$Tree, List, Types$MethodType):3610->rgb(254,128,128)
Typers$Typer.handleOverloaded$1(Trees$Tree, List, int, Types$Type, Trees$Tree, int, Types$Type, List):3372->rgb(240,109,109)
Typers$Typer.handleOverloaded$1(Trees$Tree, List, int, Types$Type, Trees$Tree, int, Types$Type, List):3412->rgb(230,94,94)
Typers$Typer.handleOverloaded$1(Trees$Tree, List, int, Types$Type, Trees$Tree, int, Types$Type, List):3413->rgb(248,120,120)
Typers$Typer.handlePolymorphicCall$1(Trees$Tree, Trees$Tree, List, int, Types$Type, Trees$Tree, List, List, List, Types$MethodType):3622->rgb(227,89,89)
Typers$Typer.handlePolymorphicCall$1(Trees$Tree, Trees$Tree, List, int, Types$Type, Trees$Tree, List, List, List, Types$MethodType):3623->rgb(208,61,61)
Typers$Typer.handlePolymorphicCall$1(Trees$Tree, Trees$Tree, List, int, Types$Type, Trees$Tree, List, List, List, Types$MethodType):3640->rgb(214,71,71)
Typers$Typer.handlePolymorphicCall$1(Trees$Tree, Trees$Tree, List, int, Types$Type, Trees$Tree, List, List, List, Types$MethodType):3641->rgb(206,58,58)
Typers$Typer.handlePolymorphicCall$1(Trees$Tree, Trees$Tree, List, int, Types$Type, Trees$Tree, List, List, List, Types$MethodType):3646->rgb(209,64,64)
Typers$Typer.handlePolymorphicCall$1(Trees$Tree, Trees$Tree, List, int, Types$Type, Trees$Tree, List, List, List, Types$MethodType):3647->rgb(246,117,117)
Typers$Typer.hasImport$1(Symbols$Symbol):744->rgb(207,60,60)
Typers$Typer.hasMonomorphicApply$1(Trees$Tree):1138->rgb(231,95,95)
Typers$Typer.inferView(Trees$Tree, Types$Type, Types$Type, boolean, boolean):234->rgb(220,79,79)
Typers$Typer.inferView(Trees$Tree, Types$Type, Types$Type, boolean, boolean):235->rgb(218,76,76)
Typers$Typer.insertApply$1(Trees$Tree, int, Types$Type):989->rgb(232,97,97)
Typers$Typer.insertApply$1(Trees$Tree, int, Types$Type):990->rgb(206,59,59)
Typers$Typer.insertApply$1(Trees$Tree, int, Types$Type):992->rgb(209,63,63)
Typers$Typer.instantiate(Trees$Tree, int, Types$Type):1227->rgb(203,54,54)
Typers$Typer.instantiate(Trees$Tree, int, Types$Type):1228->rgb(237,104,104)
Typers$Typer.instantiatePossiblyExpectingUnit(Trees$Tree, int, Types$Type):1247->rgb(238,105,105)
Typers$Typer.instantiateToMethodType$1(Types$MethodType, Trees$Tree, int, Types$Type, Trees$Tree):925->rgb(209,63,63)
Typers$Typer.instantiateToMethodType$1(Types$MethodType, Trees$Tree, int, Types$Type, Trees$Tree):936->rgb(241,109,109)
Typers$Typer.instantiateToMethodType$1(Types$MethodType, Trees$Tree, int, Types$Type, Trees$Tree):940->rgb(229,93,93)
Typers$Typer.isCapturedExistential(Symbols$Symbol):3888->rgb(215,73,73)
Typers$Typer.isGetClassCall$1(Types$Type, Symbols$Symbol):614->rgb(237,104,104)
Typers$Typer.isLocal$1(Symbols$Symbol, Trees$Tree, Symbols$Symbol):3923->rgb(212,68,68)
Typers$Typer.isLocal$1(Symbols$Symbol, Trees$Tree, Symbols$Symbol):3925->rgb(240,108,108)
Typers$Typer.isModuleTypedExpr$1(Trees$Tree, int, Types$Type, Symbols$Symbol):601->rgb(250,123,123)
Typers$Typer.isModuleTypedExpr$1(Trees$Tree, int, Types$Type, Symbols$Symbol):602->rgb(230,94,94)
Typers$Typer.isNarrowable(Types$Type):638->rgb(202,54,54)
Typers$Typer.isNarrowable(Types$Type):639->rgb(213,69,69)
Typers$Typer.isStableContext(Trees$Tree, int, Types$Type):528->rgb(208,62,62)
Typers$Typer.isStableContext(Trees$Tree, int, Types$Type):529->rgb(218,77,77)
Typers$Typer.isStableContext(Trees$Tree, int, Types$Type):530->rgb(254,128,128)
Typers$Typer.isStale(Symbols$Symbol):511->rgb(205,58,58)
Typers$Typer.isStale(Symbols$Symbol):512->rgb(253,127,127)
Typers$Typer.isVisibleParameter$1(Symbols$Symbol, Symbols$Symbol):3910->rgb(230,94,94)
Typers$Typer.lookupTransformed(Trees$Tree):5795->rgb(248,120,120)
Typers$Typer.makeAccessible(Trees$Tree, Symbols$Symbol, Types$Type, Trees$Tree):543->rgb(230,94,94)
Typers$Typer.makeAccessible(Trees$Tree, Symbols$Symbol, Types$Type, Trees$Tree):555->rgb(253,127,127)
Typers$Typer.makeAccessible(Trees$Tree, Symbols$Symbol, Types$Type, Trees$Tree):566->rgb(220,79,79)
Typers$Typer.makeAccessible(Trees$Tree, Symbols$Symbol, Types$Type, Trees$Tree):567->rgb(222,82,82)
Typers$Typer.makeAccessible(Trees$Tree, Symbols$Symbol, Types$Type, Trees$Tree):577->rgb(222,82,82)
Typers$Typer.makeAccessible(Trees$Tree, Symbols$Symbol, Types$Type, Trees$Tree):579->rgb(241,110,110)
Typers$Typer.matches$1(Trees$Tree, Trees$Tree):3208->rgb(205,57,57)
Typers$Typer.matching$1(Trees$Tree, ObjectRef):3214->rgb(254,128,128)
Typers$Typer.member(Trees$Tree, Names$Name):668->rgb(203,54,54)
Typers$Typer.member(Trees$Tree, Names$Name):669->rgb(224,85,85)
Typers$Typer.narrowIf$1(Trees$Tree, boolean, Types$Type, Symbols$Symbol):617->rgb(235,102,102)
Typers$Typer.needsInstantiation(List, List, List):3255->rgb(208,62,62)
Typers$Typer.noExpectedType$1(Trees$Tree):3581->rgb(250,123,123)
Typers$Typer.normalTypedApply$1(Trees$Tree, Trees$Tree, List, Trees$Tree, int, Types$Type):4648->rgb(253,128,128)
Typers$Typer.normalTypedApply$1(Trees$Tree, Trees$Tree, List, Trees$Tree, int, Types$Type):4649->rgb(226,87,87)
Typers$Typer.normalTypedApply$1(Trees$Tree, Trees$Tree, List, Trees$Tree, int, Types$Type):4705->rgb(239,107,107)
Typers$Typer.normalTypedApply$1(Trees$Tree, Trees$Tree, List, Trees$Tree, int, Types$Type):4710->rgb(228,91,91)
Typers$Typer.normalTypedApply$1(Trees$Tree, Trees$Tree, List, Trees$Tree, int, Types$Type):4722->rgb(202,53,53)
Typers$Typer.normalTypedApply$1(Trees$Tree, Trees$Tree, List, Trees$Tree, int, Types$Type):4724->rgb(242,111,111)
Typers$Typer.normalTypedApply$1(Trees$Tree, Trees$Tree, List, Trees$Tree, int, Types$Type):4725->rgb(211,66,66)
Typers$Typer.onError$3(Typers$SilentTypeError, Trees$Tree, int, Types$Type, Trees$Tree, Trees$Tree, List, Tuple2, Tuple2):4682->rgb(210,65,65)
Typers$Typer.onError$3(Typers$SilentTypeError, Trees$Tree, int, Types$Type, Trees$Tree, Trees$Tree, List, Tuple2, Tuple2):4683->rgb(217,75,75)
Typers$Typer.packedType(Trees$Tree, Symbols$Symbol):3986->rgb(252,126,126)
Typers$Typer.packedType(Trees$Tree, Symbols$Symbol):3987->rgb(251,125,125)
Typers$Typer.packedTypes(List):2545->rgb(221,80,80)
Typers$Typer.phasedAppliedType(Symbols$Symbol, List):145->rgb(231,96,96)
Typers$Typer.preSelectOverloaded$1(Trees$Tree, List, int, Types$Type):3311->rgb(223,84,84)
Typers$Typer.preSelectOverloaded$1(Trees$Tree, List, int, Types$Type):3327->rgb(244,115,115)
Typers$Typer.preSelectOverloaded$1(Trees$Tree, List, int, Types$Type):3334->rgb(250,124,124)
Typers$Typer.qualifies$1(Symbols$Symbol, int):5027->rgb(228,92,92)
Typers$Typer.qualifies$1(Symbols$Symbol, int):5028->rgb(221,81,81)
Typers$Typer.reallyExists(Symbols$Symbol):503->rgb(204,56,56)
Typers$Typer.reallyExists(Symbols$Symbol):504->rgb(249,122,122)
Typers$Typer.reenterTypeParams(List):448->rgb(250,122,122)
Typers$Typer.reenterValueParams(List):442->rgb(211,66,66)
Typers$Typer.retypingOk$1(Trees$Tree, Types$Type):5564->rgb(235,102,102)
Typers$Typer.runTyper$1(Trees$Tree, int, Types$Type, Types$Type):5569->rgb(221,81,81)
Typers$Typer.runTyper$1(Trees$Tree, int, Types$Type, Types$Type):5573->rgb(242,112,112)
Typers$Typer.runTyper$1(Trees$Tree, int, Types$Type, Types$Type):5574->rgb(235,101,101)
Typers$Typer.runTyper$1(Trees$Tree, int, Types$Type, Types$Type):5575->rgb(216,74,74)
Typers$Typer.runTyper$1(Trees$Tree, int, Types$Type, Types$Type):5578->rgb(201,52,52)
Typers$Typer.runTyper$1(Trees$Tree, int, Types$Type, Types$Type):5579->rgb(251,125,125)
Typers$Typer.runTyper$1(Trees$Tree, int, Types$Type, Types$Type):5581->rgb(226,88,88)
Typers$Typer.runTyper$1(Trees$Tree, int, Types$Type, Types$Type):5585->rgb(200,50,50)
Typers$Typer.runTyper$1(Trees$Tree, int, Types$Type, Types$Type):5588->rgb(219,78,78)
Typers$Typer.runTyper$1(Trees$Tree, int, Types$Type, Types$Type):5591->rgb(248,120,120)
Typers$Typer.runTyper$1(Trees$Tree, int, Types$Type, Types$Type):5593->rgb(226,88,88)
Typers$Typer.runTyper$1(Trees$Tree, int, Types$Type, Types$Type):5594->rgb(252,126,126)
Typers$Typer.runTyper$1(Trees$Tree, int, Types$Type, Types$Type):5598->rgb(223,83,83)
Typers$Typer.runTyper$1(Trees$Tree, int, Types$Type, Types$Type):5600->rgb(203,54,54)
Typers$Typer.runTyper$1(Trees$Tree, int, Types$Type, Types$Type):5601->rgb(218,76,76)
Typers$Typer.runTyper$1(Trees$Tree, int, Types$Type, Types$Type):5603->rgb(246,117,117)
Typers$Typer.samToFunctionType(Types$Type, Symbols$Symbol):775->rgb(237,104,104)
Typers$Typer.samePackedTypes$1(Trees$Tree, Trees$Tree):4395->rgb(220,80,80)
Typers$Typer.scala$tools$nsc$typechecker$TypeDiagnostics$TyperDiagnostics$$$outer():465->rgb(241,109,109)
Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$$outer():113->rgb(247,118,118)
Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$containsLocal$1(Types$Type, Trees$Tree, Symbols$Symbol):3927->rgb(208,62,62)
Typers$Typer.shouldInsertApply$1(Trees$Tree, int, Trees$Tree):1150->rgb(222,82,82)
Typers$Typer.silent$default$2():673->rgb(218,77,77)
Typers$Typer.silent(Function1, boolean, Trees$Tree):675->rgb(232,97,97)
Typers$Typer.silent(Function1, boolean, Trees$Tree):676->rgb(216,74,74)
Typers$Typer.silent(Function1, boolean, Trees$Tree):677->rgb(228,91,91)
Typers$Typer.silent(Function1, boolean, Trees$Tree):678->rgb(252,126,126)
Typers$Typer.silent(Function1, boolean, Trees$Tree):689->rgb(232,97,97)
Typers$Typer.silent(Function1, boolean, Trees$Tree):695->rgb(246,117,117)
Typers$Typer.silent(Function1, boolean, Trees$Tree):699->rgb(202,53,53)
Typers$Typer.silent(Function1, boolean, Trees$Tree):700->rgb(247,119,119)
Typers$Typer.silent(Function1, boolean, Trees$Tree):701->rgb(233,99,99)
Typers$Typer.silent(Function1, boolean, Trees$Tree):706->rgb(234,100,100)
Typers$Typer.silent(Function1, boolean, Trees$Tree):714->rgb(205,58,58)
Typers$Typer.stabilize(Trees$Tree, Types$Type, int, Types$Type):595->rgb(231,95,95)
Typers$Typer.stabilize(Trees$Tree, Types$Type, int, Types$Type):623->rgb(204,56,56)
Typers$Typer.stabilize(Trees$Tree, Types$Type, int, Types$Type):630->rgb(227,89,89)
Typers$Typer.stabilize(Trees$Tree, Types$Type, int, Types$Type):631->rgb(227,89,89)
Typers$Typer.stabilize(Trees$Tree, Types$Type, int, Types$Type):632->rgb(234,100,100)
Typers$Typer.synthesizePartialFunction(Names$TermName, Position, boolean, Trees$Tree, int, Types$Type):2789->rgb(219,78,78)
Typers$Typer.synthesizePartialFunction(Names$TermName, Position, boolean, Trees$Tree, int, Types$Type):2798->rgb(228,90,90)
Typers$Typer.synthesizePartialFunction(Names$TermName, Position, boolean, Trees$Tree, int, Types$Type):2802->rgb(242,112,112)
Typers$Typer.transformedOrTyped(Trees$Tree, int, Types$Type):5789->rgb(220,79,79)
Typers$Typer.transformedOrTyped(Trees$Tree, int, Types$Type):5791->rgb(207,61,61)
Typers$Typer.tryTypedApply$1(Trees$Tree, List, Trees$Tree, int, Types$Type):4584->rgb(210,64,64)
Typers$Typer.tryTypedApply$1(Trees$Tree, List, Trees$Tree, int, Types$Type):4638->rgb(205,58,58)
Typers$Typer.typed(Trees$Tree):5636->rgb(213,70,70)
Typers$Typer.typed(Trees$Tree, Types$Type):5651->rgb(221,81,81)
Typers$Typer.typed(Trees$Tree, int):5654->rgb(207,60,60)
Typers$Typer.typed(Trees$Tree, int, Types$Type):5547->rgb(232,97,97)
Typers$Typer.typed(Trees$Tree, int, Types$Type):5554->rgb(240,109,109)
Typers$Typer.typed(Trees$Tree, int, Types$Type):5557->rgb(233,99,99)
Typers$Typer.typed1(Trees$Tree, int, Types$Type):5195->rgb(209,63,63)
Typers$Typer.typed1(Trees$Tree, int, Types$Type):5540->rgb(201,52,52)
Typers$Typer.typed1(Trees$Tree, int, Types$Type):5541->rgb(253,128,128)
Typers$Typer.typed1(Trees$Tree, int, Types$Type):5542->rgb(222,83,83)
Typers$Typer.typedAnnotated$1(Trees$Annotated, Trees$Tree, int, Types$Type):4223->rgb(248,120,120)
Typers$Typer.typedAnnotated$1(Trees$Annotated, Trees$Tree, int, Types$Type):4259->rgb(247,118,118)
Typers$Typer.typedAnnotated$1(Trees$Annotated, Trees$Tree, int, Types$Type):4269->rgb(226,88,88)
Typers$Typer.typedAnnotation(Trees$Tree, int):3770->rgb(249,121,121)
Typers$Typer.typedAppliedTypeTree$1(Trees$AppliedTypeTree, int):5121->rgb(216,73,73)
Typers$Typer.typedAppliedTypeTree$1(Trees$AppliedTypeTree, int):5125->rgb(200,50,50)
Typers$Typer.typedAppliedTypeTree$1(Trees$AppliedTypeTree, int):5130->rgb(221,81,81)
Typers$Typer.typedAppliedTypeTree$1(Trees$AppliedTypeTree, int):5134->rgb(254,128,128)
Typers$Typer.typedAppliedTypeTree$1(Trees$AppliedTypeTree, int):5173->rgb(229,93,93)
Typers$Typer.typedAppliedTypeTree$1(Trees$AppliedTypeTree, int):5174->rgb(245,116,116)
Typers$Typer.typedAppliedTypeTree$1(Trees$AppliedTypeTree, int):5183->rgb(226,88,88)
Typers$Typer.typedApply$1(Trees$Apply, Trees$Tree, int, Types$Type, LazyRef):4752->rgb(208,62,62)
Typers$Typer.typedApply$1(Trees$Apply, Trees$Tree, int, Types$Type, LazyRef):4753->rgb(212,68,68)
Typers$Typer.typedArg(Trees$Tree, int, int, Types$Type):3243->rgb(241,110,110)
Typers$Typer.typedArg(Trees$Tree, int, int, Types$Type):475->rgb(249,122,122)
Typers$Typer.typedArg(Trees$Tree, int, int, Types$Type):479->rgb(229,92,92)
Typers$Typer.typedArg0$1(Trees$Tree, Types$Type, int, List):3385->rgb(205,57,57)
Typers$Typer.typedArgToPoly$1(Trees$Tree, Types$Type, int, Trees$Tree, List, List, List, ObjectRef):3627->rgb(211,66,66)
Typers$Typer.typedArgToPoly$1(Trees$Tree, Types$Type, int, Trees$Tree, List, List, List, ObjectRef):3632->rgb(235,101,101)
Typers$Typer.typedArgs(List, int):3247->rgb(245,116,116)
Typers$Typer.typedArgsForFormals(List, List, int):113->rgb(219,78,78)
Typers$Typer.typedArrayValue$1(Trees$ArrayValue, int, Types$Type):4329->rgb(213,69,69)
Typers$Typer.typedAssign$1(Trees$Tree, Trees$Tree, Trees$Tree, int, Types$Type):4339->rgb(254,129,129)
Typers$Typer.typedAssign$1(Trees$Tree, Trees$Tree, Trees$Tree, int, Types$Type):4355->rgb(215,73,73)
Typers$Typer.typedAssign$1(Trees$Tree, Trees$Tree, Trees$Tree, int, Types$Type):4364->rgb(225,86,86)
Typers$Typer.typedAssign$1(Trees$Tree, Trees$Tree, Trees$Tree, int, Types$Type):4365->rgb(248,119,119)
Typers$Typer.typedBind$1(Trees$Bind, int, Types$Type):4307->rgb(230,93,93)
Typers$Typer.typedBlock(Trees$Block, int, Types$Type):2402->rgb(243,113,113)
Typers$Typer.typedBlock(Trees$Block, int, Types$Type):2404->rgb(215,72,72)
Typers$Typer.typedBlock(Trees$Block, int, Types$Type):2405->rgb(221,81,81)
Typers$Typer.typedBlock(Trees$Block, int, Types$Type):2406->rgb(230,94,94)
Typers$Typer.typedBlock(Trees$Block, int, Types$Type):2428->rgb(249,122,122)
Typers$Typer.typedBlock(Trees$Block, int, Types$Type):2429->rgb(219,78,78)
Typers$Typer.typedBlock(Trees$Block, int, Types$Type):2441->rgb(240,108,108)
Typers$Typer.typedBlock(Trees$Block, int, Types$Type):2458->rgb(202,52,52)
Typers$Typer.typedBlock(Trees$Block, int, Types$Type):2459->rgb(214,70,70)
Typers$Typer.typedBlock(Trees$Block, int, Types$Type):2462->rgb(221,81,81)
Typers$Typer.typedBlock(Trees$Block, int, Types$Type):2484->rgb(213,69,69)
Typers$Typer.typedByValueExpr$default$2():5640->rgb(238,106,106)
Typers$Typer.typedByValueExpr(Trees$Tree, Types$Type):5640->rgb(247,119,119)
Typers$Typer.typedCase(Trees$CaseDef, Types$Type, Types$Type):2494->rgb(220,79,79)
Typers$Typer.typedCase(Trees$CaseDef, Types$Type, Types$Type):2500->rgb(204,56,56)
Typers$Typer.typedCase(Trees$CaseDef, Types$Type, Types$Type):2508->rgb(240,108,108)
Typers$Typer.typedCase(Trees$CaseDef, Types$Type, Types$Type):2520->rgb(208,62,62)
Typers$Typer.typedCase(Trees$CaseDef, Types$Type, Types$Type):2521->rgb(234,100,100)
Typers$Typer.typedCase(Trees$CaseDef, Types$Type, Types$Type):2523->rgb(230,94,94)
Typers$Typer.typedCases(List, Types$Type, Types$Type):2539->rgb(201,51,51)
Typers$Typer.typedClassDef(Trees$ClassDef):1812->rgb(203,55,55)
Typers$Typer.typedClassDef(Trees$ClassDef):1813->rgb(217,75,75)
Typers$Typer.typedClassDef(Trees$ClassDef):1814->rgb(230,93,93)
Typers$Typer.typedClassDef(Trees$ClassDef):1833->rgb(216,73,73)
Typers$Typer.typedConstructorPattern(Trees$Tree, Types$Type):113->rgb(225,86,86)
Typers$Typer.typedDefDef(Trees$DefDef):2247->rgb(232,96,96)
Typers$Typer.typedDefDef(Trees$DefDef):2249->rgb(246,117,117)
Typers$Typer.typedDefDef(Trees$DefDef):2250->rgb(218,77,77)
Typers$Typer.typedDefDef(Trees$DefDef):2253->rgb(212,68,68)
Typers$Typer.typedDefDef(Trees$DefDef):2261->rgb(248,120,120)
Typers$Typer.typedDefDef(Trees$DefDef):2262->rgb(210,65,65)
Typers$Typer.typedDefDef(Trees$DefDef):2268->rgb(222,82,82)
Typers$Typer.typedDefDef(Trees$DefDef):2272->rgb(224,85,85)
Typers$Typer.typedDefDef(Trees$DefDef):2273->rgb(228,92,92)
Typers$Typer.typedDefDef(Trees$DefDef):2275->rgb(203,54,54)
Typers$Typer.typedDefDef(Trees$DefDef):2277->rgb(209,63,63)
Typers$Typer.typedDefDef(Trees$DefDef):2283->rgb(241,111,111)
Typers$Typer.typedDefDef(Trees$DefDef):2289->rgb(241,110,110)
Typers$Typer.typedDefDef(Trees$DefDef):2302->rgb(225,87,87)
Typers$Typer.typedDefDef(Trees$DefDef):2303->rgb(233,98,98)
Typers$Typer.typedDefDef(Trees$DefDef):2305->rgb(252,126,126)
Typers$Typer.typedDefDef(Trees$DefDef):2306->rgb(245,116,116)
Typers$Typer.typedDefDef(Trees$DefDef):2310->rgb(206,58,58)
Typers$Typer.typedDefDef(Trees$DefDef):2311->rgb(206,59,59)
Typers$Typer.typedDefDef(Trees$DefDef):2327->rgb(245,116,116)
Typers$Typer.typedExistentialTypeTree$1(Trees$ExistentialTypeTree, int):488->rgb(233,98,98)
Typers$Typer.typedExistentialTypeTree(Trees$ExistentialTypeTree, int):4004->rgb(221,81,81)
Typers$Typer.typedFunction$1(Trees$Function, int, Types$Type):488->rgb(206,59,59)
Typers$Typer.typedFunction$1(Trees$Function, int, Types$Type):5466->rgb(201,52,52)
Typers$Typer.typedFunction(Trees$Function, int, Types$Type):2940->rgb(249,122,122)
Typers$Typer.typedFunction(Trees$Function, int, Types$Type):2942->rgb(208,62,62)
Typers$Typer.typedFunction(Trees$Function, int, Types$Type):2970->rgb(245,116,116)
Typers$Typer.typedFunction(Trees$Function, int, Types$Type):3021->rgb(253,127,127)
Typers$Typer.typedFunction(Trees$Function, int, Types$Type):3026->rgb(215,71,71)
Typers$Typer.typedFunction(Trees$Function, int, Types$Type):3027->rgb(235,102,102)
Typers$Typer.typedFunction(Trees$Function, int, Types$Type):3028->rgb(219,77,77)
Typers$Typer.typedFunction(Trees$Function, int, Types$Type):3029->rgb(233,98,98)
Typers$Typer.typedFunction(Trees$Function, int, Types$Type):3030->rgb(215,73,73)
Typers$Typer.typedHigherKindedType(Trees$Tree, int, Types$Type):5709->rgb(205,58,58)
Typers$Typer.typedHigherKindedType(Trees$Tree, int, Types$Type):5710->rgb(238,105,105)
Typers$Typer.typedIdent$2(Trees$Tree, Names$Name, int, Types$Type):5053->rgb(250,123,123)
Typers$Typer.typedIdent$2(Trees$Tree, Names$Name, int, Types$Type):5054->rgb(248,120,120)
Typers$Typer.typedIdent$2(Trees$Tree, Names$Name, int, Types$Type):5060->rgb(217,75,75)
Typers$Typer.typedIdent$2(Trees$Tree, Names$Name, int, Types$Type):5067->rgb(208,61,61)
Typers$Typer.typedIdent$2(Trees$Tree, Names$Name, int, Types$Type):5069->rgb(230,94,94)
Typers$Typer.typedIdent$2(Trees$Tree, Names$Name, int, Types$Type):5075->rgb(229,93,93)
Typers$Typer.typedIdent$2(Trees$Tree, Names$Name, int, Types$Type):5078->rgb(213,68,68)
Typers$Typer.typedIdent$2(Trees$Tree, Names$Name, int, Types$Type):5080->rgb(253,128,128)
Typers$Typer.typedIdent$2(Trees$Tree, Names$Name, int, Types$Type):5083->rgb(233,98,98)
Typers$Typer.typedIdentOrWildcard$1(Trees$Ident, int, Types$Type):5089->rgb(246,117,117)
Typers$Typer.typedIdentOrWildcard$1(Trees$Ident, int, Types$Type):5090->rgb(233,98,98)
Typers$Typer.typedIdentOrWildcard$1(Trees$Ident, int, Types$Type):5091->rgb(224,86,86)
Typers$Typer.typedIdentOrWildcard$1(Trees$Ident, int, Types$Type):5092->rgb(250,124,124)
Typers$Typer.typedIdentOrWildcard$1(Trees$Ident, int, Types$Type):5093->rgb(231,95,95)
Typers$Typer.typedIdentOrWildcard$1(Trees$Ident, int, Types$Type):5095->rgb(240,108,108)
Typers$Typer.typedIf$1(Trees$If, int, Types$Type):4378->rgb(245,115,115)
Typers$Typer.typedIf$1(Trees$If, int, Types$Type):4381->rgb(252,125,125)
Typers$Typer.typedIf$1(Trees$If, int, Types$Type):4383->rgb(246,118,118)
Typers$Typer.typedIf$1(Trees$If, int, Types$Type):4384->rgb(205,57,57)
Typers$Typer.typedIf$1(Trees$If, int, Types$Type):4404->rgb(237,104,104)
Typers$Typer.typedIf$1(Trees$If, int, Types$Type):4405->rgb(246,117,117)
Typers$Typer.typedIf$1(Trees$If, int, Types$Type):4406->rgb(251,125,125)
Typers$Typer.typedInAnyMode$1(Trees$Tree, Trees$Tree, int, Types$Type, LazyRef):5523->rgb(252,126,126)
Typers$Typer.typedInAnyMode$1(Trees$Tree, Trees$Tree, int, Types$Type, LazyRef):5524->rgb(250,123,123)
Typers$Typer.typedInAnyMode$1(Trees$Tree, Trees$Tree, int, Types$Type, LazyRef):5525->rgb(254,129,129)
Typers$Typer.typedInAnyMode$1(Trees$Tree, Trees$Tree, int, Types$Type, LazyRef):5526->rgb(225,86,86)
Typers$Typer.typedInAnyMode$1(Trees$Tree, Trees$Tree, int, Types$Type, LazyRef):5527->rgb(204,55,55)
Typers$Typer.typedInAnyMode$1(Trees$Tree, Trees$Tree, int, Types$Type, LazyRef):5528->rgb(203,54,54)
Typers$Typer.typedInAnyMode$1(Trees$Tree, Trees$Tree, int, Types$Type, LazyRef):5529->rgb(213,69,69)
Typers$Typer.typedInAnyMode$1(Trees$Tree, Trees$Tree, int, Types$Type, LazyRef):5535->rgb(224,85,85)
Typers$Typer.typedInPattern(Trees$Typed, int, Types$Type):113->rgb(209,64,64)
Typers$Typer.typedInternal(Trees$Tree, int, Types$Type):5562->rgb(235,101,101)
Typers$Typer.typedInternal(Trees$Tree, int, Types$Type):5609->rgb(207,61,61)
Typers$Typer.typedLabelDef(Trees$LabelDef):2378->rgb(228,92,92)
Typers$Typer.typedLabelDef(Trees$LabelDef):2380->rgb(215,72,72)
Typers$Typer.typedLabelDef(Trees$LabelDef):2384->rgb(253,127,127)
Typers$Typer.typedLhs$1(Trees$Tree):4338->rgb(252,126,126)
Typers$Typer.typedLiteral$1(Trees$Literal):5413->rgb(208,62,62)
Typers$Typer.typedMatch(Trees$Tree, List, int, Types$Type, Trees$Tree):2549->rgb(229,93,93)
Typers$Typer.typedMatch(Trees$Tree, List, int, Types$Type, Trees$Tree):2551->rgb(221,81,81)
Typers$Typer.typedMatch(Trees$Tree, List, int, Types$Type, Trees$Tree):2558->rgb(216,74,74)
Typers$Typer.typedMatch(Trees$Tree, List, int, Types$Type, Trees$Tree):2559->rgb(230,93,93)
Typers$Typer.typedMemberDef$1(Trees$MemberDef, Trees$Tree, Symbols$Symbol):5489->rgb(226,88,88)
Typers$Typer.typedMemberDef$1(Trees$MemberDef, Trees$Tree, Symbols$Symbol):5490->rgb(217,75,75)
Typers$Typer.typedMemberDef$1(Trees$MemberDef, Trees$Tree, Symbols$Symbol):5491->rgb(216,73,73)
Typers$Typer.typedMemberDef$1(Trees$MemberDef, Trees$Tree, Symbols$Symbol):5492->rgb(246,117,117)
Typers$Typer.typedMemberDef$1(Trees$MemberDef, Trees$Tree, Symbols$Symbol):5493->rgb(244,114,114)
Typers$Typer.typedMemberDef$1(Trees$MemberDef, Trees$Tree, Symbols$Symbol):5494->rgb(244,114,114)
Typers$Typer.typedModifiers(Trees$Modifiers):2016->rgb(210,65,65)
Typers$Typer.typedModuleDef(Trees$ModuleDef):1846->rgb(241,110,110)
Typers$Typer.typedModuleDef(Trees$ModuleDef):1855->rgb(205,58,58)
Typers$Typer.typedModuleDef(Trees$ModuleDef):1856->rgb(210,65,65)
Typers$Typer.typedModuleDef(Trees$ModuleDef):1860->rgb(222,83,83)
Typers$Typer.typedModuleDef(Trees$ModuleDef):1863->rgb(200,50,50)
Typers$Typer.typedModuleDef(Trees$ModuleDef):1869->rgb(229,92,92)
Typers$Typer.typedModuleDef(Trees$ModuleDef):1874->rgb(214,71,71)
Typers$Typer.typedNew$1(Trees$New):4482->rgb(207,61,61)
Typers$Typer.typedNew$1(Trees$New):4483->rgb(229,92,92)
Typers$Typer.typedNew$1(Trees$New):4508->rgb(209,63,63)
Typers$Typer.typedNew$1(Trees$New):4511->rgb(224,86,86)
Typers$Typer.typedNew$1(Trees$New):4515->rgb(252,126,126)
Typers$Typer.typedOperator(Trees$Tree):5671->rgb(239,107,107)
Typers$Typer.typedOutsidePatternMode$1(Trees$Tree, Trees$Tree, int, Types$Type):488->rgb(248,119,119)
Typers$Typer.typedOutsidePatternMode$1(Trees$Tree, Trees$Tree, int, Types$Type):5500->rgb(219,78,78)
Typers$Typer.typedOutsidePatternMode$1(Trees$Tree, Trees$Tree, int, Types$Type):5501->rgb(216,74,74)
Typers$Typer.typedOutsidePatternMode$1(Trees$Tree, Trees$Tree, int, Types$Type):5502->rgb(236,102,102)
Typers$Typer.typedOutsidePatternMode$1(Trees$Tree, Trees$Tree, int, Types$Type):5503->rgb(232,97,97)
Typers$Typer.typedOutsidePatternMode$1(Trees$Tree, Trees$Tree, int, Types$Type):5504->rgb(212,68,68)
Typers$Typer.typedOutsidePatternMode$1(Trees$Tree, Trees$Tree, int, Types$Type):5505->rgb(201,52,52)
Typers$Typer.typedOutsidePatternMode$1(Trees$Tree, Trees$Tree, int, Types$Type):5506->rgb(212,68,68)
Typers$Typer.typedOutsidePatternMode$1(Trees$Tree, Trees$Tree, int, Types$Type):5508->rgb(237,104,104)
Typers$Typer.typedOutsidePatternMode$1(Trees$Tree, Trees$Tree, int, Types$Type):5509->rgb(244,114,114)
Typers$Typer.typedOutsidePatternMode$1(Trees$Tree, Trees$Tree, int, Types$Type):5511->rgb(246,117,117)
Typers$Typer.typedOutsidePatternMode$1(Trees$Tree, Trees$Tree, int, Types$Type):5512->rgb(207,60,60)
Typers$Typer.typedOutsidePatternMode$1(Trees$Tree, Trees$Tree, int, Types$Type):5513->rgb(220,79,79)
Typers$Typer.typedOutsidePatternMode$1(Trees$Tree, Trees$Tree, int, Types$Type):5516->rgb(245,115,115)
Typers$Typer.typedPackageDef$1(Trees$PackageDef, Trees$Tree, Symbols$Symbol):5199->rgb(212,67,67)
Typers$Typer.typedPackageDef$1(Trees$PackageDef, Trees$Tree, Symbols$Symbol):5202->rgb(249,121,121)
Typers$Typer.typedParentType(Trees$Tree, Trees$Template, boolean):1518->rgb(240,108,108)
Typers$Typer.typedParentType(Trees$Tree, Trees$Template, boolean):1520->rgb(247,118,118)
Typers$Typer.typedParentType(Trees$Tree, Trees$Template, boolean):1522->rgb(235,101,101)
Typers$Typer.typedParentType(Trees$Tree, Trees$Template, boolean):1529->rgb(252,126,126)
Typers$Typer.typedParentType(Trees$Tree, Trees$Template, boolean):1531->rgb(240,109,109)
Typers$Typer.typedParentTypes(Trees$Template):1678->rgb(239,107,107)
Typers$Typer.typedParentTypes(Trees$Template):1681->rgb(218,76,76)
Typers$Typer.typedParentTypes(Trees$Template):1682->rgb(243,112,112)
Typers$Typer.typedParentTypes(Trees$Template):1693->rgb(252,126,126)
Typers$Typer.typedPattern(Trees$Tree, Types$Type):5697->rgb(238,105,105)
Typers$Typer.typedPos(Position, Trees$Tree):5643->rgb(207,60,60)
Typers$Typer.typedPos(Position, int, Types$Type, Trees$Tree):5642->rgb(213,69,69)
Typers$Typer.typedQualifier(Trees$Tree):5668->rgb(219,78,78)
Typers$Typer.typedQualifier(Trees$Tree, int):5666->rgb(215,72,72)
Typers$Typer.typedQualifier(Trees$Tree, int, Types$Type):5660->rgb(221,81,81)
Typers$Typer.typedSelect$1(Trees$Tree, Trees$Tree, Names$Name, Trees$Tree, int, Types$Type):4875->rgb(207,60,60)
Typers$Typer.typedSelect$1(Trees$Tree, Trees$Tree, Names$Name, Trees$Tree, int, Types$Type):4876->rgb(225,86,86)
Typers$Typer.typedSelect$1(Trees$Tree, Trees$Tree, Names$Name, Trees$Tree, int, Types$Type):4877->rgb(217,75,75)
Typers$Typer.typedSelect$1(Trees$Tree, Trees$Tree, Names$Name, Trees$Tree, int, Types$Type):4885->rgb(240,108,108)
Typers$Typer.typedSelect$1(Trees$Tree, Trees$Tree, Names$Name, Trees$Tree, int, Types$Type):4891->rgb(227,89,89)
Typers$Typer.typedSelect$1(Trees$Tree, Trees$Tree, Names$Name, Trees$Tree, int, Types$Type):4893->rgb(245,115,115)
Typers$Typer.typedSelect$1(Trees$Tree, Trees$Tree, Names$Name, Trees$Tree, int, Types$Type):4903->rgb(234,99,99)
Typers$Typer.typedSelect$1(Trees$Tree, Trees$Tree, Names$Name, Trees$Tree, int, Types$Type):4905->rgb(223,84,84)
Typers$Typer.typedSelect$1(Trees$Tree, Trees$Tree, Names$Name, Trees$Tree, int, Types$Type):4912->rgb(228,91,91)
Typers$Typer.typedSelect$1(Trees$Tree, Trees$Tree, Names$Name, Trees$Tree, int, Types$Type):4948->rgb(206,59,59)
Typers$Typer.typedSelect$1(Trees$Tree, Trees$Tree, Names$Name, Trees$Tree, int, Types$Type):4951->rgb(220,79,79)
Typers$Typer.typedSelect$1(Trees$Tree, Trees$Tree, Names$Name, Trees$Tree, int, Types$Type):4958->rgb(230,94,94)
Typers$Typer.typedSelect$1(Trees$Tree, Trees$Tree, Names$Name, Trees$Tree, int, Types$Type):4985->rgb(211,66,66)
Typers$Typer.typedSelectOrSuperCall$1(Trees$Select, Trees$Tree, int, Types$Type):4997->rgb(234,99,99)
Typers$Typer.typedSelectOrSuperCall$1(Trees$Select, Trees$Tree, int, Types$Type):5000->rgb(229,93,93)
Typers$Typer.typedSelectOrSuperCall$1(Trees$Select, Trees$Tree, int, Types$Type):5002->rgb(232,96,96)
Typers$Typer.typedSelectOrSuperCall$1(Trees$Select, Trees$Tree, int, Types$Type):5003->rgb(203,54,54)
Typers$Typer.typedSelectOrSuperCall$1(Trees$Select, Trees$Tree, int, Types$Type):5004->rgb(224,85,85)
Typers$Typer.typedStarInPattern(Trees$Tree, int, Types$Type):113->rgb(242,112,112)
Typers$Typer.typedStat$1(Trees$Tree, List, Symbols$Symbol, boolean, boolean, boolean):3069->rgb(206,60,60)
Typers$Typer.typedStat$1(Trees$Tree, List, Symbols$Symbol, boolean, boolean, boolean):3077->rgb(235,102,102)
Typers$Typer.typedStat$1(Trees$Tree, List, Symbols$Symbol, boolean, boolean, boolean):3081->rgb(245,116,116)
Typers$Typer.typedStat$1(Trees$Tree, List, Symbols$Symbol, boolean, boolean, boolean):3083->rgb(211,67,67)
Typers$Typer.typedStat$1(Trees$Tree, List, Symbols$Symbol, boolean, boolean, boolean):3092->rgb(249,122,122)
Typers$Typer.typedStats(List, Symbols$Symbol, boolean):3062->rgb(235,101,101)
Typers$Typer.typedStats(List, Symbols$Symbol, boolean):3065->rgb(229,92,92)
Typers$Typer.typedStats(List, Symbols$Symbol, boolean):3226->rgb(224,86,86)
Typers$Typer.typedStats(List, Symbols$Symbol, boolean):3227->rgb(253,127,127)
Typers$Typer.typedStats(List, Symbols$Symbol, boolean):3234->rgb(215,72,72)
Typers$Typer.typedStats(List, Symbols$Symbol, boolean):3236->rgb(217,76,76)
Typers$Typer.typedSuper$1(Trees$Super):4846->rgb(207,60,60)
Typers$Typer.typedTemplate(Trees$Template, List):1916->rgb(217,75,75)
Typers$Typer.typedTemplate(Trees$Template, List):1935->rgb(230,94,94)
Typers$Typer.typedTemplate(Trees$Template, List):1942->rgb(225,87,87)
Typers$Typer.typedTemplate(Trees$Template, List):1944->rgb(250,122,122)
Typers$Typer.typedTemplate(Trees$Template, List):1950->rgb(227,89,89)
Typers$Typer.typedTemplate(Trees$Template, List):1962->rgb(222,82,82)
Typers$Typer.typedTemplate(Trees$Template, List):1963->rgb(208,62,62)
Typers$Typer.typedTemplate(Trees$Template, List):1964->rgb(224,86,86)
Typers$Typer.typedTemplate(Trees$Template, List):1973->rgb(246,117,117)
Typers$Typer.typedTemplate(Trees$Template, List):1979->rgb(245,115,115)
Typers$Typer.typedTemplate(Trees$Template, List):1983->rgb(235,101,101)
Typers$Typer.typedTemplate(Trees$Template, List):1989->rgb(227,90,90)
Typers$Typer.typedTemplate(Trees$Template, List):1991->rgb(203,54,54)
Typers$Typer.typedTemplate(Trees$Template, List):2000->rgb(221,81,81)
Typers$Typer.typedThis$1(Trees$This, int, Types$Type):4856->rgb(247,119,119)
Typers$Typer.typedThrow$1(Trees$Throw):5273->rgb(200,50,50)
Typers$Typer.typedTry$1(Trees$Try, int, Types$Type):5252->rgb(254,129,129)
Typers$Typer.typedTypTree$1(Trees$TypTree, Trees$Tree, int, Types$Type):5478->rgb(216,74,74)
Typers$Typer.typedTypTree$1(Trees$TypTree, Trees$Tree, int, Types$Type):5479->rgb(227,90,90)
Typers$Typer.typedTypTree$1(Trees$TypTree, Trees$Tree, int, Types$Type):5481->rgb(224,85,85)
Typers$Typer.typedTypTree$1(Trees$TypTree, Trees$Tree, int, Types$Type):5483->rgb(246,118,118)
Typers$Typer.typedType(Trees$Tree):5705->rgb(226,88,88)
Typers$Typer.typedType(Trees$Tree, int):5702->rgb(251,124,124)
Typers$Typer.typedTypeApply$1(Trees$TypeApply, int):5315->rgb(222,82,82)
Typers$Typer.typedTypeApply$1(Trees$TypeApply, int):5326->rgb(206,59,59)
Typers$Typer.typedTypeApply$1(Trees$TypeApply, int):5339->rgb(223,84,84)
Typers$Typer.typedTypeApply(Trees$Tree, int, Trees$Tree, List):4052->rgb(226,87,87)
Typers$Typer.typedTypeApply(Trees$Tree, int, Trees$Tree, List):4063->rgb(239,107,107)
Typers$Typer.typedTypeBoundsTree$1(Trees$TypeBoundsTree, int):5429->rgb(251,125,125)
Typers$Typer.typedTypeBoundsTree$1(Trees$TypeBoundsTree, int):5430->rgb(225,87,87)
Typers$Typer.typedTypeConstructor(Trees$Tree):5734->rgb(245,116,116)
Typers$Typer.typedTypeConstructor(Trees$Tree, int):5717->rgb(200,51,51)
Typers$Typer.typedTypeDef(Trees$TypeDef):488->rgb(251,124,124)
Typers$Typer.typedTypeDefImpl(Trees$TypeDef):2351->rgb(204,56,56)
Typers$Typer.typedTypeDefImpl(Trees$TypeDef):2352->rgb(211,66,66)
Typers$Typer.typedTypeSelectionQualifier$1(Trees$Tree, Types$Type, int):4992->rgb(234,100,100)
Typers$Typer.typedTyped$1(Trees$Typed, int, Types$Type):5278->rgb(207,60,60)
Typers$Typer.typedTyped$1(Trees$Typed, int, Types$Type):5279->rgb(235,101,101)
Typers$Typer.typedTyped$1(Trees$Typed, int, Types$Type):5281->rgb(224,85,85)
Typers$Typer.typedTyped$1(Trees$Typed, int, Types$Type):5297->rgb(211,67,67)
Typers$Typer.typedTyped$1(Trees$Typed, int, Types$Type):5298->rgb(238,105,105)
Typers$Typer.typedValDef(Trees$ValDef):2022->rgb(246,117,117)
Typers$Typer.typedValDef(Trees$ValDef):2024->rgb(228,91,91)
Typers$Typer.typedValDef(Trees$ValDef):2026->rgb(251,125,125)
Typers$Typer.typedValDefImpl(Trees$ValDef):2031->rgb(232,97,97)
Typers$Typer.typedValDefImpl(Trees$ValDef):2037->rgb(226,88,88)
Typers$Typer.typedValDefImpl(Trees$ValDef):2040->rgb(245,116,116)
Typers$Typer.typedValDefImpl(Trees$ValDef):2041->rgb(250,123,123)
Typers$Typer.typedValDefImpl(Trees$ValDef):2050->rgb(253,127,127)
Typers$Typer.typedValDefImpl(Trees$ValDef):2058->rgb(236,102,102)
Typers$Typer.typedValDefImpl(Trees$ValDef):2069->rgb(247,118,118)
Typers$Typer.typedValDefImpl(Trees$ValDef):2070->rgb(238,105,105)
Typers$Typer.typedValDefImpl(Trees$ValDef):2072->rgb(222,83,83)
Typers$Typer.typedVirtualizedMatch$1(Trees$Match, int, Types$Type):4421->rgb(236,103,103)
Typers$Typer.typedVirtualizedMatch$1(Trees$Match, int, Types$Type):4437->rgb(211,66,66)
Typers$Typer.typedVirtualizedMatch$1(Trees$Match, int, Types$Type):4440->rgb(229,92,92)
Typers$Typer.validateParentClass$1(Trees$Tree, Symbols$Symbol, List, Types$Type, ListBuffer):1743->rgb(246,118,118)
Typers$Typer.validateParentClass$1(Trees$Tree, Symbols$Symbol, List, Types$Type, ListBuffer):1746->rgb(238,105,105)
Typers$Typer.validateParentClass$1(Trees$Tree, Symbols$Symbol, List, Types$Type, ListBuffer):1748->rgb(220,79,79)
Typers$Typer.validateParentClass$1(Trees$Tree, Symbols$Symbol, List, Types$Type, ListBuffer):1757->rgb(249,122,122)
Typers$Typer.validateParentClass$1(Trees$Tree, Symbols$Symbol, List, Types$Type, ListBuffer):1759->rgb(212,68,68)
Typers$Typer.validateParentClass$1(Trees$Tree, Symbols$Symbol, List, Types$Type, ListBuffer):1769->rgb(214,71,71)
Typers$Typer.validateParentClass$1(Trees$Tree, Symbols$Symbol, List, Types$Type, ListBuffer):1772->rgb(236,103,103)
Typers$Typer.validateParentClasses(List, Types$Type):1775->rgb(208,61,61)
Typers$Typer.validateParentClasses(List, Types$Type):1777->rgb(205,57,57)
Typers$Typer.vanillaAdapt$1(Trees$Tree, Trees$Tree, int, Types$Type, Trees$Tree):1154->rgb(249,122,122)
Typers$Typer.vanillaAdapt$1(Trees$Tree, Trees$Tree, int, Types$Type, Trees$Tree):1155->rgb(237,104,104)
Typers$Typer.vanillaAdapt$1(Trees$Tree, Trees$Tree, int, Types$Type, Trees$Tree):1156->rgb(246,117,117)
Typers$Typer.vanillaAdapt$1(Trees$Tree, Trees$Tree, int, Types$Type, Trees$Tree):1158->rgb(226,88,88)
Typers$Typer.vanillaAdapt$1(Trees$Tree, Trees$Tree, int, Types$Type, Trees$Tree):1159->rgb(220,79,79)
Typers$Typer.vanillaAdapt$1(Trees$Tree, Trees$Tree, int, Types$Type, Trees$Tree):1160->rgb(219,78,78)
Typers$Typer.vanillaAdapt$1(Trees$Tree, Trees$Tree, int, Types$Type, Trees$Tree):1163->rgb(217,75,75)
Typers$Typer.vanillaAdapt$1(Trees$Tree, Trees$Tree, int, Types$Type, Trees$Tree):1165->rgb(251,124,124)
Typers$Typer.vanillaAdapt$1(Trees$Tree, Trees$Tree, int, Types$Type, Trees$Tree):1170->rgb(251,125,125)
Typers$Typer.vanillaAdapt$1(Trees$Tree, Trees$Tree, int, Types$Type, Trees$Tree):1172->rgb(206,59,59)
Typers$Typer.viewExists(Types$Type, Types$Type):209->rgb(240,108,108)
Typers$Typer.viewExists(Types$Type, Types$Type):210->rgb(233,99,99)
Typers.$anonfun$typecheck$2(Typers, int, Types$Type, boolean, boolean, Trees$Tree):26->rgb(217,74,74)
Typers.$anonfun$typecheck$3(Typers, int, Types$Type, boolean, Trees$Tree):26->rgb(231,95,95)
Typers.$anonfun$typecheck$4(Typers, int, Types$Type, Trees$Tree, Typers$Typer):26->rgb(246,117,117)
Typers.$anonfun$typecheck$7(Typers, int, Types$Type, boolean, boolean, boolean, Trees$Tree):38->rgb(242,112,112)
Typers.doTypecheck$1(Trees$Tree, int, Types$Type, boolean, boolean, boolean):25->rgb(233,98,98)
Typers.newTyper$(Typers, Contexts$Context):102->rgb(222,82,82)
Typers.newTyper(Contexts$Context):102->rgb(250,123,123)
Typers.typecheck$(Typers, Trees$Tree, int, Types$Type, boolean, boolean, boolean):20->rgb(251,124,124)
Typers.typecheck(Trees$Tree, int, Types$Type, boolean, boolean, boolean):38->rgb(247,118,118)
Types$AbstractArgsTypeRef.<init>(SymbolTable, Types$Type, Symbols$Symbol, List):2431->rgb(248,120,120)
Types$AbstractNoArgsTypeRef.<init>(SymbolTable, Types$Type, Symbols$Symbol):2434->rgb(203,54,54)
Types$AbstractNoArgsTypeRef.bounds():2434->rgb(254,129,129)
Types$AbstractNoArgsTypeRef.relativeInfo():2434->rgb(232,97,97)
Types$AbstractNoArgsTypeRef.scala$reflect$internal$Types$NonClassTypeRef$$super$relativeInfo():2434->rgb(243,113,113)
Types$AbstractTypeRef.bounds$(Types$AbstractTypeRef):2089->rgb(252,126,126)
Types$AbstractTypeRef.bounds():2089->rgb(230,93,93)
Types$AliasArgsTypeRef.<init>(SymbolTable, Types$Type, Symbols$Symbol, List):2430->rgb(220,80,80)
Types$AliasArgsTypeRef.baseClasses():2430->rgb(209,63,63)
Types$AliasArgsTypeRef.betaReduce():2430->rgb(224,84,84)
Types$AliasArgsTypeRef.dealias():2430->rgb(213,69,69)
Types$AliasArgsTypeRef.normalizeImpl():2430->rgb(242,112,112)
Types$AliasArgsTypeRef.relativeInfo():2430->rgb(237,104,104)
Types$AliasArgsTypeRef.scala$reflect$internal$Types$NonClassTypeRef$$super$relativeInfo():2430->rgb(221,81,81)
Types$AliasArgsTypeRef.typeSymbol():2430->rgb(217,75,75)
Types$AliasNoArgsTypeRef.<init>(SymbolTable, Types$Type, Symbols$Symbol):2433->rgb(246,117,117)
Types$AliasNoArgsTypeRef.betaReduce():2433->rgb(204,56,56)
Types$AliasNoArgsTypeRef.dealias():2433->rgb(225,87,87)
Types$AliasNoArgsTypeRef.normalizeImpl():2433->rgb(239,108,108)
Types$AliasNoArgsTypeRef.termSymbol():2433->rgb(210,65,65)
Types$AliasNoArgsTypeRef.typeSymbol():2433->rgb(231,95,95)
Types$AliasTypeRef.$init$(Types$AliasTypeRef):1989->rgb(207,61,61)
Types$AliasTypeRef.baseClasses$(Types$AliasTypeRef):2005->rgb(213,69,69)
Types$AliasTypeRef.baseClasses():2005->rgb(230,94,94)
Types$AliasTypeRef.betaReduce$(Types$AliasTypeRef):2037->rgb(242,111,111)
Types$AliasTypeRef.betaReduce():2037->rgb(242,112,112)
Types$AliasTypeRef.dealias$(Types$AliasTypeRef):1991->rgb(239,107,107)
Types$AliasTypeRef.dealias():1991->rgb(222,82,82)
Types$AliasTypeRef.normalizeImpl$(Types$AliasTypeRef):2016->rgb(245,116,116)
Types$AliasTypeRef.normalizeImpl():2017->rgb(226,88,88)
Types$AliasTypeRef.termSymbol$(Types$AliasTypeRef):1994->rgb(244,114,114)
Types$AliasTypeRef.termSymbol():1994->rgb(225,86,86)
Types$AliasTypeRef.typeSymbol$(Types$AliasTypeRef):1995->rgb(228,90,90)
Types$AliasTypeRef.typeSymbol():1995->rgb(242,111,111)
Types$AnnotatedType.hashCode():3376->rgb(247,119,119)
Types$ArgsTypeRef.<init>(SymbolTable, Types$Type, Symbols$Symbol, List):1867->rgb(222,83,83)
Types$ArgsTypeRef.<init>(SymbolTable, Types$Type, Symbols$Symbol, List):1868->rgb(212,67,67)
Types$ArgsTypeRef.typeParams():1867->rgb(248,120,120)
Types$ArgsTypeRef.typeParams():1872->rgb(235,101,101)
Types$ClassArgsTypeRef.<init>(SymbolTable, Types$Type, Symbols$Symbol, List):2432->rgb(209,63,63)
Types$ClassInfoType.<init>(SymbolTable, List, Scopes$Scope, Symbols$Symbol):1677->rgb(216,73,73)
Types$ClassInfoType.copy(List, Scopes$Scope, Symbols$Symbol):1679->rgb(210,65,65)
Types$ClassUnwrapper.apply(Types$Type):3836->rgb(202,53,53)
Types$CompoundType.baseClasses():1393->rgb(241,111,111)
Types$CompoundType.baseType(Symbols$Symbol):1424->rgb(247,119,119)
Types$CompoundType.baseType(Symbols$Symbol):1425->rgb(203,54,54)
Types$CompoundType.baseTypeSeq():1379->rgb(227,90,90)
Types$CompoundType.memo(Function0, Function1):1409->rgb(253,127,127)
Types$CompoundType.memo(Function0, Function1):1410->rgb(206,59,59)
Types$CompoundType.memo(Function0, Function1):1413->rgb(208,63,63)
Types$CompoundType.memo(Function0, Function1):1415->rgb(225,87,87)
Types$CompoundType.memo(Function0, Function1):1416->rgb(242,111,111)
Types$CompoundType.narrow():1428->rgb(221,81,81)
Types$ConstantType$.apply(Constants$Constant):1857->rgb(225,87,87)
Types$ConstantType$.scala$reflect$internal$Types$ConstantType$$$outer():1856->rgb(226,88,88)
Types$ConstantType.<init>(SymbolTable, Constants$Constant):1846->rgb(209,64,64)
Types$ConstantType.underlying():1845->rgb(204,56,56)
Types$ExistentialType.$anonfun$skolemizeExistential$3(Object, Symbols$Symbol, Symbols$Symbol):2742->rgb(220,79,79)
Types$ExistentialType.$anonfun$withTypeVars$1(Types$ExistentialType, Symbols$Symbol):2815->rgb(254,129,129)
Types$ExistentialType.baseType(Symbols$Symbol):2687->rgb(208,61,61)
Types$ExistentialType.maybeRewrap(Types$Type):2661->rgb(205,57,57)
Types$ExistentialType.newSkolem$1(Symbols$Symbol, Object, Symbols$Symbol):2722->rgb(218,76,76)
Types$ExistentialType.rewrap(Types$Type):2664->rgb(204,56,56)
Types$ExistentialType.skolemizeExistential(Symbols$Symbol, Object):2742->rgb(236,102,102)
Types$ExistentialType.withTypeVars(Function1, int):2815->rgb(231,95,95)
Types$ExistentialType.withTypeVars(Function1, int):2816->rgb(220,79,79)
Types$ExistentialType.withTypeVars(Function1, int):2817->rgb(248,120,120)
Types$ExistentialType.withTypeVars(Function1, int):2818->rgb(249,121,121)
Types$ExistentialType.withTypeVars(Function1, int):2819->rgb(235,102,102)
Types$HasTypeMember$.unapply(Types$Type):2870->rgb(243,113,113)
Types$MethodType.areTrivialParams(List):2506->rgb(240,108,108)
Types$MethodType.cloneInfo(Symbols$Symbol):2546->rgb(230,94,94)
Types$MethodType.isImplicit():2512->rgb(230,95,95)
Types$MethodType.isTrivial():2497->rgb(214,71,71)
Types$MethodType.isTrivialResult():2502->rgb(230,94,94)
Types$MethodType.paramTypes():2519->rgb(230,94,94)
Types$MethodType.params():2492->rgb(215,72,72)
Types$MethodType.paramss():2517->rgb(253,128,128)
Types$MethodType.resultType(List):2525->rgb(204,56,56)
Types$MethodType.resultType(List):2527->rgb(253,127,127)
Types$MethodType.resultType(List):2528->rgb(236,102,102)
Types$MethodType.scala$reflect$internal$Types$MethodType$$$outer():2492->rgb(246,116,116)
Types$NoArgsTypeRef.<init>(SymbolTable, Types$Type, Symbols$Symbol):1915->rgb(209,63,63)
Types$NoArgsTypeRef.isHigherKinded():1921->rgb(221,80,80)
Types$NoArgsTypeRef.narrow():1937->rgb(214,71,71)
Types$NoArgsTypeRef.normalizeImpl():1943->rgb(249,122,122)
Types$NoArgsTypeRef.typeParams():1922->rgb(223,83,83)
Types$NonClassTypeRef.relativeInfo$(Types$NonClassTypeRef):1964->rgb(209,63,63)
Types$NonClassTypeRef.relativeInfo():1965->rgb(236,103,103)
Types$NonClassTypeRef.relativeInfo():1967->rgb(236,102,102)
Types$NullaryMethodType.typeSymbol():2572->rgb(244,114,114)
Types$PolyType.baseClasses():2617->rgb(220,79,79)
Types$PolyType.baseType(Symbols$Symbol):2618->rgb(248,121,121)
Types$PolyType.baseTypeSeq():2615->rgb(244,115,115)
Types$PolyType.cloneInfo(Symbols$Symbol):2599->rgb(224,85,85)
Types$PolyType.cloneInfo(Symbols$Symbol):2638->rgb(210,64,64)
Types$PolyType.resultType():2599->rgb(214,70,70)
Types$RefinedType$.apply(List, Scopes$Scope, Symbols$Symbol):1668->rgb(213,69,69)
Types$RefinedType.hashCode():1599->rgb(203,54,54)
Types$RefinedType.isHigherKinded():1603->rgb(239,106,106)
Types$RefinedType.normalize():1615->rgb(243,113,113)
Types$RefinedType.normalize():1617->rgb(240,108,108)
Types$RefinedType.normalizeImpl():1632->rgb(224,86,86)
Types$RewrappingTypeProxy.maybeRewrap$(Types$RewrappingTypeProxy, Types$Type):171->rgb(233,98,98)
Types$RewrappingTypeProxy.maybeRewrap(Types$Type):181->rgb(224,86,86)
Types$SimpleTypeProxy.baseClasses$(Types$SimpleTypeProxy):163->rgb(229,92,92)
Types$SimpleTypeProxy.baseClasses():163->rgb(245,115,115)
Types$SimpleTypeProxy.baseType$(Types$SimpleTypeProxy, Symbols$Symbol):160->rgb(231,95,95)
Types$SimpleTypeProxy.baseType(Symbols$Symbol):160->rgb(254,129,129)
Types$SimpleTypeProxy.isError$(Types$SimpleTypeProxy):141->rgb(232,97,97)
Types$SimpleTypeProxy.isError():141->rgb(220,79,79)
Types$SimpleTypeProxy.termSymbol$(Types$SimpleTypeProxy):147->rgb(243,112,112)
Types$SimpleTypeProxy.termSymbol():147->rgb(215,73,73)
Types$SimpleTypeProxy.typeSymbol$(Types$SimpleTypeProxy):152->rgb(229,93,93)
Types$SimpleTypeProxy.typeSymbol():152->rgb(211,66,66)
Types$SimpleTypeProxy.typeSymbolDirect$(Types$SimpleTypeProxy):153->rgb(210,64,64)
Types$SimpleTypeProxy.typeSymbolDirect():153->rgb(230,94,94)
Types$SingleType$.apply(Types$Type, Symbols$Symbol):1267->rgb(254,129,129)
Types$SingleType$.scala$reflect$internal$Types$SingleType$$$outer():1265->rgb(226,88,88)
Types$SingleType.<init>(SymbolTable, Types$Type, Symbols$Symbol):1213->rgb(229,92,92)
Types$SingleType.equals(Object):1213->rgb(219,79,79)
Types$SingleType.isGround():1219->rgb(241,110,110)
Types$SingleType.scala$reflect$internal$Types$SingleType$$$outer():1213->rgb(254,129,129)
Types$SingleType.underlying():1229->rgb(234,99,99)
Types$SingleType.underlying():1231->rgb(237,104,104)
Types$SingletonType.<init>(SymbolTable):1095->rgb(251,125,125)
Types$SingletonType.baseClasses():1095->rgb(200,51,51)
Types$SingletonType.baseType(Symbols$Symbol):1095->rgb(210,65,65)
Types$SingletonType.isError():1095->rgb(211,66,66)
Types$SingletonType.termSymbol():1095->rgb(224,85,85)
Types$SingletonType.typeSymbol():1095->rgb(217,74,74)
Types$SingletonType.typeSymbolDirect():1095->rgb(213,69,69)
Types$SingletonType.widen():1098->rgb(211,66,66)
Types$SubType.<init>(SymbolTable):1082->rgb(242,111,111)
Types$SubType.baseType(Symbols$Symbol):1086->rgb(214,71,71)
Types$SuperType$.apply(Types$Type, Types$Type):1302->rgb(240,108,108)
Types$SuperType$.scala$reflect$internal$Types$SuperType$$$outer():1299->rgb(212,67,67)
Types$ThisType$.apply(Symbols$Symbol):1205->rgb(237,104,104)
Types$ThisType$.apply(Symbols$Symbol):1206->rgb(251,124,124)
Types$ThisType$.scala$reflect$internal$Types$ThisType$$$outer():1203->rgb(234,100,100)
Types$ThisType.<init>(SymbolTable, Symbols$Symbol):1177->rgb(210,65,65)
Types$ThisType.equals(Object):1177->rgb(246,117,117)
Types$ThisType.underlying():1186->rgb(217,75,75)
Types$Type.$anonfun$asSeenFrom$1(Types$Type):683->rgb(231,95,95)
Types$Type.$anonfun$stat_$less$colon$less$1(Types$Type):838->rgb(203,55,55)
Types$Type.$eq$colon$eq(Types$Type):864->rgb(253,127,127)
Types$Type.$less$colon$less(Types$Type):805->rgb(204,56,56)
Types$Type.<init>(SymbolTable):263->rgb(209,64,64)
Types$Type.asSeenFrom(Types$Type, Symbols$Symbol):683->rgb(203,54,54)
Types$Type.asSeenFrom(Types$Type, Symbols$Symbol):686->rgb(207,60,60)
Types$Type.asSeenFrom(Types$Type, Symbols$Symbol):687->rgb(205,58,58)
Types$Type.asSeenFrom(Types$Type, Symbols$Symbol):688->rgb(210,65,65)
Types$Type.asSeenFrom(Types$Type, Symbols$Symbol):692->rgb(224,85,85)
Types$Type.asSeenFrom(Types$Type, Symbols$Symbol):693->rgb(226,88,88)
Types$Type.asSeenFrom(Types$Type, Symbols$Symbol):694->rgb(243,113,113)
Types$Type.asSeenFrom(Types$Type, Symbols$Symbol):699->rgb(217,76,76)
Types$Type.baseTypeIndex(Symbols$Symbol):920->rgb(213,69,69)
Types$Type.collect(PartialFunction):790->rgb(234,100,100)
Types$Type.computeMemberType(Symbols$Symbol):724->rgb(218,76,76)
Types$Type.computeMemberType(Symbols$Symbol):725->rgb(222,83,83)
Types$Type.computeMemberType(Symbols$Symbol):728->rgb(214,70,70)
Types$Type.contains(Symbols$Symbol):801->rgb(203,55,55)
Types$Type.dealiasWiden():537->rgb(240,108,108)
Types$Type.dealiasWiden():538->rgb(213,70,70)
Types$Type.dealiasWiden():540->rgb(237,104,104)
Types$Type.dealiasWiden():541->rgb(206,59,59)
Types$Type.decl(Names$Name):586->rgb(222,82,82)
Types$Type.dummyArgs():437->rgb(252,126,126)
Types$Type.exists(Function1):798->rgb(238,106,106)
Types$Type.finalResultType():450->rgb(226,89,89)
Types$Type.find(Function1):784->rgb(208,62,62)
Types$Type.findDecl(Names$Name, int):990->rgb(234,100,100)
Types$Type.findDecl(Names$Name, int):992->rgb(237,104,104)
Types$Type.findDecl(Names$Name, int):993->rgb(219,78,78)
Types$Type.findDecl(Names$Name, int):999->rgb(254,129,129)
Types$Type.findMember(Names$Name, long, long, boolean):1035->rgb(252,127,127)
Types$Type.findMemberInternal$1(Names$Name, long, long, boolean):1033->rgb(213,70,70)
Types$Type.findMembers(long, long):1019->rgb(241,110,110)
Types$Type.findMembersInternal$1(long, long):1018->rgb(230,94,94)
Types$Type.firstParent():413->rgb(209,63,63)
Types$Type.foreach(Function1):787->rgb(243,113,113)
Types$Type.hasAnnotation(Symbols$Symbol):263->rgb(233,99,99)
Types$Type.hasNonPrivateMember(Names$Name):634->rgb(224,85,85)
Types$Type.implicitMembers():614->rgb(201,52,52)
Types$Type.instantiateTypeParams(List, List):482->rgb(242,112,112)
Types$Type.isErroneous():302->rgb(229,93,93)
Types$Type.isError():299->rgb(218,77,77)
Types$Type.isGround():978->rgb(236,102,102)
Types$Type.isGround():981->rgb(249,122,122)
Types$Type.isStable():274->rgb(251,125,125)
Types$Type.isVolatile():282->rgb(230,93,93)
Types$Type.matches(Types$Type):879->rgb(249,122,122)
Types$Type.member(Names$Name):625->rgb(254,129,129)
Types$Type.memberBasedOnName(Names$Name, long):661->rgb(219,78,78)
Types$Type.memberInfo(Symbols$Symbol):713->rgb(239,107,107)
Types$Type.memberType(Symbols$Symbol):718->rgb(229,93,93)
Types$Type.memberType(Symbols$Symbol):719->rgb(226,87,87)
Types$Type.memberType(Symbols$Symbol):721->rgb(241,109,109)
Types$Type.members():601->rgb(221,81,81)
Types$Type.membersBasedOnFlags(long, long):658->rgb(201,51,51)
Types$Type.narrow():392->rgb(221,81,81)
Types$Type.narrow():394->rgb(248,120,120)
Types$Type.narrow():395->rgb(226,88,88)
Types$Type.nonLocalMember(Names$Name):652->rgb(217,75,75)
Types$Type.nonPrivateDecl(Names$Name):595->rgb(214,70,70)
Types$Type.nonPrivateMember(Names$Name):632->rgb(239,107,107)
Types$Type.nonPrivateMemberAdmitting(Names$Name, long):647->rgb(219,77,77)
Types$Type.nonPrivateMembers():604->rgb(228,91,91)
Types$Type.nonPrivateMembersAdmitting(long):609->rgb(246,117,117)
Types$Type.packageObject():637->rgb(250,123,123)
Types$Type.resultApprox():446->rgb(246,117,117)
Types$Type.scala$reflect$internal$Types$Type$$$outer():263->rgb(226,88,88)
Types$Type.skolemizeExistential():493->rgb(246,118,118)
Types$Type.stat_$less$colon$less(Types$Type):837->rgb(211,66,66)
Types$Type.stat_$less$colon$less(Types$Type):838->rgb(220,79,79)
Types$Type.stat_$less$colon$less(Types$Type):842->rgb(224,85,85)
Types$Type.stat_$less$colon$less(Types$Type):843->rgb(229,92,92)
Types$Type.subst(List, List):735->rgb(236,103,103)
Types$Type.substSym(List, List):744->rgb(210,65,65)
Types$Type.substSym(List, List):745->rgb(249,121,121)
Types$Type.substThis(Symbols$Symbol, Types$Type):754->rgb(231,95,95)
Types$Type.substThisAndSym(Symbols$Symbol, Types$Type, List, List):769->rgb(227,89,89)
Types$Type.typeParams():470->rgb(218,77,77)
Types$Type.typeSymbolDirect():345->rgb(246,118,118)
Types$Type.weak_$less$colon$less(Types$Type):850->rgb(239,107,107)
Types$Type.weak_$less$colon$less(Types$Type):851->rgb(244,115,115)
Types$Type.weak_$less$colon$less(Types$Type):855->rgb(218,76,76)
Types$Type.weak_$less$colon$less(Types$Type):856->rgb(233,98,98)
Types$TypeApi.<init>(Universe):403->rgb(246,117,117)
Types$TypeApi.<init>(Universe):86->rgb(208,62,62)
Types$TypeApiImpl.<init>(SymbolTable):221->rgb(227,90,90)
Types$TypeBounds$.apply(Types$Type, Types$Type):1347->rgb(231,96,96)
Types$TypeBounds$.upper(Types$Type):1344->rgb(235,101,101)
Types$TypeBounds.<init>(SymbolTable, Types$Type, Types$Type):1308->rgb(229,92,92)
Types$TypeBounds.containsType(Types$Type):1314->rgb(253,128,128)
Types$TypeRef$.apply(Types$Type, Symbols$Symbol, List):2438->rgb(214,70,70)
Types$TypeRef$.apply(Types$Type, Symbols$Symbol, List):2440->rgb(242,112,112)
Types$TypeRef$.apply(Types$Type, Symbols$Symbol, List):2441->rgb(239,107,107)
Types$TypeRef$.apply(Types$Type, Symbols$Symbol, List):2442->rgb(249,122,122)
Types$TypeRef$.apply(Types$Type, Symbols$Symbol, List):2445->rgb(236,103,103)
Types$TypeRef$.apply(Types$Type, Symbols$Symbol, List):2446->rgb(203,55,55)
Types$TypeRef$.apply(Types$Type, Symbols$Symbol, List):2450->rgb(237,104,104)
Types$TypeRef.$anonfun$baseTypeSeqImpl$1$adapted(Types$Type):2310->rgb(200,51,51)
Types$TypeRef.$anonfun$baseTypeSeqImpl$1(Types$Type):2310->rgb(207,60,60)
Types$TypeRef.$anonfun$baseTypeSeqImpl$2(Types$TypeRef, Types$Type):2316->rgb(242,111,111)
Types$TypeRef.<init>(SymbolTable, Types$Type, Symbols$Symbol, List):2104->rgb(234,99,99)
Types$TypeRef.args():2104->rgb(238,105,105)
Types$TypeRef.argsOrDummies():2218->rgb(235,100,100)
Types$TypeRef.baseClasses():2304->rgb(243,112,112)
Types$TypeRef.baseType(Symbols$Symbol):2223->rgb(220,79,79)
Types$TypeRef.baseType(Symbols$Symbol):2224->rgb(204,56,56)
Types$TypeRef.baseTypeOfNonClassTypeRef(Symbols$Symbol):2233->rgb(217,75,75)
Types$TypeRef.baseTypeSeq():2323->rgb(252,126,126)
Types$TypeRef.baseTypeSeqDepth():2279->rgb(220,79,79)
Types$TypeRef.baseTypeSeqImpl():2310->rgb(218,76,76)
Types$TypeRef.baseTypeSeqImpl():2316->rgb(242,111,111)
Types$TypeRef.computeHashCode():2137->rgb(200,50,50)
Types$TypeRef.computeHashCode():2138->rgb(251,124,124)
Types$TypeRef.computeHashCode():2141->rgb(242,112,112)
Types$TypeRef.computeHashCode():2142->rgb(227,89,89)
Types$TypeRef.computeHashCode():2143->rgb(250,123,123)
Types$TypeRef.computeHashCode():2146->rgb(227,89,89)
Types$TypeRef.decls():2307->rgb(237,104,104)
Types$TypeRef.equals(Object):2151->rgb(202,53,53)
Types$TypeRef.equals(Object):2152->rgb(204,56,56)
Types$TypeRef.equals(Object):2153->rgb(216,73,73)
Types$TypeRef.initializedTypeParams():2275->rgb(246,117,117)
Types$TypeRef.isTrivial():2107->rgb(245,115,115)
Types$TypeRef.isTrivial():2108->rgb(238,105,105)
Types$TypeRef.normalize():2250->rgb(228,91,91)
Types$TypeRef.normalize():2251->rgb(229,92,92)
Types$TypeRef.normalize():2254->rgb(228,92,92)
Types$TypeRef.pre():2104->rgb(227,89,89)
Types$TypeRef.relativeInfo():2159->rgb(217,75,75)
Types$TypeRef.relativize(Types$Type):2176->rgb(249,121,121)
Types$TypeRef.relativize(Types$Type):2177->rgb(254,129,129)
Types$TypeRef.relativize(Types$Type):2214->rgb(209,64,64)
Types$TypeRef.scala$reflect$internal$Types$TypeRef$$$outer():2104->rgb(246,118,118)
Types$TypeRef.seenFromOwnerInstantiated$1(Types$Type, List):2210->rgb(214,71,71)
Types$TypeRef.sym():2104->rgb(207,60,60)
Types$TypeRef.trivial():2105->rgb(200,50,50)
Types$TypeRef.typeParamsMatchArgs():2276->rgb(227,89,89)
Types$TypeRef.typeSymbol():2285->rgb(202,53,53)
Types$TypeUnwrapper.apply(Types$Type):3829->rgb(207,60,60)
Types$TypeUnwrapper.apply(Types$Type):3830->rgb(228,90,90)
Types$TypeVar$.apply(Symbols$Symbol):2922->rgb(228,92,92)
Types$TypeVar$.createTypeVar(Symbols$Symbol, boolean):2951->rgb(217,75,75)
Types$TypeVar$.deriveConstraint(Symbols$Symbol):2911->rgb(206,59,59)
Types$TypeVar$.deriveConstraint(Symbols$Symbol):2919->rgb(203,55,55)
Types$TypeVar.$anonfun$isRelatable$1$adapted(Types$TypeVar, Types$Type):3317->rgb(251,125,125)
Types$TypeVar.$anonfun$isRelatable$1(Types$TypeVar, Types$Type):3317->rgb(209,63,63)
Types$TypeVar.addBound$1(Types$Type, boolean, boolean):3146->rgb(215,72,72)
Types$TypeVar.addHiBound(Types$Type, boolean):3101->rgb(215,73,73)
Types$TypeVar.addHiBound(Types$Type, boolean):3102->rgb(208,62,62)
Types$TypeVar.instWithinBounds():3031->rgb(210,64,64)
Types$TypeVar.isRelatable(Types$Type):3317->rgb(253,127,127)
Types$TypeVar.isSkolemAboveLevel(Types$Type):3308->rgb(207,61,61)
Types$TypeVar.registerBound(Types$Type, boolean, boolean):3265->rgb(230,94,94)
Types$TypeVar.registerBound(Types$Type, boolean, boolean):3266->rgb(221,81,81)
Types$TypeVar.scala$reflect$internal$Types$TypeVar$$$outer():3008->rgb(244,114,114)
Types$TypeVar.setInst(Types$Type):3078->rgb(250,122,122)
Types$TypeVar.unifySimple$1(Types$Type, boolean, boolean):3172->rgb(216,74,74)
Types$TypeVar.unifySimple$1(Types$Type, boolean, boolean):3179->rgb(250,123,123)
Types$UniqueConstantType.<init>(SymbolTable, Constants$Constant):1854->rgb(234,99,99)
Types$UniqueSingleType.<init>(SymbolTable, Types$Type, Symbols$Symbol):1263->rgb(251,124,124)
Types$UniqueThisType.<init>(SymbolTable, Symbols$Symbol):1201->rgb(218,77,77)
Types$UniqueType.<init>(SymbolTable):1074->rgb(232,96,96)
Types$UniqueType.<init>(SymbolTable):1075->rgb(207,60,60)
Types$UniqueType.computeHashCode():1076->rgb(253,127,127)
Types$UniqueTypeBounds.<init>(SymbolTable, Types$Type, Types$Type):1340->rgb(243,113,113)
Types$substTypeMapCache$.apply(List, List):107->rgb(233,98,98)
Types.$anonfun$boundsContainType$1$adapted(Types$TypeBounds, Types$Type):4752->rgb(252,127,127)
Types.$anonfun$boundsContainType$1(Types$TypeBounds, Types$Type):4752->rgb(237,104,104)
Types.$anonfun$copyRefinedType$2(Types$RefinedType, List, List, Types$Type, Symbols$Symbol):3588->rgb(221,81,81)
Types.$anonfun$copyRefinedType$3(Types$RefinedType, List, List, Types$Type, Types$Type):3588->rgb(243,112,112)
Types.$anonfun$defineBaseClassesOfCompoundType$2(Types, Types$CompoundType):1583->rgb(251,125,125)
Types.$anonfun$defineBaseClassesOfCompoundType$3(Types$CompoundType, Types$Type):1583->rgb(203,55,55)
Types.$anonfun$defineBaseTypeSeqOfCompoundType$5(Types):1504->rgb(221,81,81)
Types.$anonfun$defineBaseTypeSeqOfCompoundType$6(Types, Types$CompoundType):1509->rgb(253,128,128)
Types.$anonfun$defineBaseTypeSeqOfCompoundType$7(Types$CompoundType, Types$Type):1509->rgb(211,67,67)
Types.$anonfun$existentialAbstraction$1$adapted(Types$Type, Symbols$Symbol):3789->rgb(216,74,74)
Types.$anonfun$existentialAbstraction$1(Types$Type, Symbols$Symbol):3789->rgb(228,91,91)
Types.$anonfun$inheritsJavaVarArgsMethod$1(Types, Symbols$Symbol):4625->rgb(200,51,51)
Types.$anonfun$instantiatedBounds$1(Types$Type, Symbols$Symbol, List, List, Symbols$Symbol):4450->rgb(203,55,55)
Types.$anonfun$isSameTypes$1(Types$Type, Types$Type):4070->rgb(223,83,83)
Types.$anonfun$isSubArgs$1(Symbols$Symbol):4239->rgb(223,83,83)
Types.$anonfun$isSubArgs$2(Types, int, Types$Type, Types$Type, int):4239->rgb(231,95,95)
Types.$anonfun$mergePrefixAndArgs$2(Types$Type):4528->rgb(209,63,63)
Types.$anonfun$mergePrefixAndArgs$7(Types, int, int, ListBuffer, IntRef, Symbols$Symbol, List):4555->rgb(211,66,66)
Types.$anonfun$mergePrefixAndArgs$7(Types, int, int, ListBuffer, IntRef, Symbols$Symbol, List):4566->rgb(202,54,54)
Types.$anonfun$mergePrefixAndArgs$7(Types, int, int, ListBuffer, IntRef, Symbols$Symbol, List):4567->rgb(250,123,123)
Types.$anonfun$symTpe$1(Symbols$Symbol):4749->rgb(235,101,101)
Types.$anonfun$symTypeIsError$1$adapted(Symbols$Symbol):4747->rgb(209,64,64)
Types.$anonfun$symTypeIsError$1(Symbols$Symbol):4747->rgb(227,90,90)
Types.$anonfun$typeContainsTypeVar$1$adapted(Types, Types$Type):4743->rgb(239,107,107)
Types.$anonfun$typeContainsTypeVar$1(Types, Types$Type):4743->rgb(247,119,119)
Types.$anonfun$typeIsHigherKinded$1$adapted(Types$Type):4757->rgb(235,100,100)
Types.$anonfun$typeIsHigherKinded$1(Types$Type):4757->rgb(246,118,118)
Types.addMixinBaseClasses$1(List, Types$Type, List, ObjectRef):1460->rgb(240,108,108)
Types.appliedType$(Types, Symbols$Symbol, List):3720->rgb(244,114,114)
Types.appliedType$(Types, Symbols$Symbol, Seq):3724->rgb(235,102,102)
Types.appliedType$(Types, Types$Type, List):3688->rgb(254,129,129)
Types.appliedType(Symbols$Symbol, List):3721->rgb(249,122,122)
Types.appliedType(Symbols$Symbol, Seq):3725->rgb(237,104,104)
Types.appliedType(Types$Type, List):3703->rgb(222,83,83)
Types.appliedType(Types$Type, List):3705->rgb(251,124,124)
Types.baseTypeSeqDepth(List):4001->rgb(209,63,63)
Types.compareLengths$(Types, List, List):4076->rgb(249,122,122)
Types.compareLengths(List, List):4077->rgb(249,121,121)
Types.computeBaseClasses$(Types, Types$Type):1439->rgb(218,77,77)
Types.computeBaseClasses(Types$Type):1448->rgb(233,99,99)
Types.computeBaseClasses(Types$Type):1462->rgb(241,110,110)
Types.copyRefinedType$(Types, Types$RefinedType, List, Scopes$Scope):3575->rgb(242,111,111)
Types.copyRefinedType(Types$RefinedType, List, Scopes$Scope):3586->rgb(230,94,94)
Types.copyRefinedType(Types$RefinedType, List, Scopes$Scope):3587->rgb(244,115,115)
Types.copyTypeRef$(Types, Types$Type, Types$Type, Symbols$Symbol, List):3619->rgb(201,52,52)
Types.copyTypeRef(Types$Type, Types$Type, Symbols$Symbol, List):3620->rgb(235,100,100)
Types.copyTypeRef(Types$Type, Types$Type, Symbols$Symbol, List):3625->rgb(246,117,117)
Types.copyTypeRef(Types$Type, Types$Type, Symbols$Symbol, List):3627->rgb(235,100,100)
Types.copyTypeRef(Types$Type, Types$Type, Symbols$Symbol, List):3629->rgb(217,75,75)
Types.define$1(Types$CompoundType):1550->rgb(228,91,91)
Types.defineBaseClassesOfCompoundType$(Types, Types$CompoundType):1549->rgb(226,88,88)
Types.defineBaseClassesOfCompoundType(Types$CompoundType):1551->rgb(202,53,53)
Types.defineBaseClassesOfCompoundType(Types$CompoundType, boolean):1568->rgb(250,123,123)
Types.defineBaseClassesOfCompoundType(Types$CompoundType, boolean):1578->rgb(247,118,118)
Types.defineBaseClassesOfCompoundType(Types$CompoundType, boolean):1580->rgb(235,102,102)
Types.defineBaseClassesOfCompoundType(Types$CompoundType, boolean):1583->rgb(203,54,54)
Types.defineBaseTypeSeqOfCompoundType$(Types, Types$CompoundType):1471->rgb(225,86,86)
Types.defineBaseTypeSeqOfCompoundType(Types$CompoundType):1475->rgb(234,100,100)
Types.defineBaseTypeSeqOfCompoundType(Types$CompoundType):1476->rgb(244,115,115)
Types.defineBaseTypeSeqOfCompoundType(Types$CompoundType):1504->rgb(233,98,98)
Types.defineBaseTypeSeqOfCompoundType(Types$CompoundType):1506->rgb(224,85,85)
Types.defineBaseTypeSeqOfCompoundType(Types$CompoundType):1509->rgb(252,126,126)
Types.defineBaseTypeSeqOfCompoundType(Types$CompoundType):1511->rgb(223,84,84)
Types.defineBaseTypeSeqOfCompoundType(Types$CompoundType):1527->rgb(210,64,64)
Types.defineBaseTypeSeqOfTypeRef$(Types, Types$TypeRef):2467->rgb(218,77,77)
Types.defineBaseTypeSeqOfTypeRef(Types$TypeRef):2472->rgb(225,87,87)
Types.defineBaseTypeSeqOfTypeRef(Types$TypeRef):2473->rgb(207,61,61)
Types.defineBaseTypeSeqOfTypeRef(Types$TypeRef):2476->rgb(229,93,93)
Types.defineBaseTypeSeqOfTypeRef(Types$TypeRef):2478->rgb(219,77,77)
Types.defineUnderlyingOfSingleType$(Types, Types$SingleType):1271->rgb(205,57,57)
Types.defineUnderlyingOfSingleType(Types$SingleType):1274->rgb(248,120,120)
Types.defineUnderlyingOfSingleType(Types$SingleType):1275->rgb(240,108,108)
Types.defineUnderlyingOfSingleType(Types$SingleType):1277->rgb(200,50,50)
Types.elementExtract$(Types, Symbols$Symbol, Types$Type):3843->rgb(205,58,58)
Types.elementExtract(Symbols$Symbol, Types$Type):3845->rgb(240,108,108)
Types.elementExtract(Symbols$Symbol, Types$Type):3846->rgb(253,127,127)
Types.existentialAbstraction$(Types, List, Types$Type):3783->rgb(206,58,58)
Types.existentialAbstraction(List, Types$Type):3786->rgb(222,83,83)
Types.existentialAbstraction(List, Types$Type):3787->rgb(222,83,83)
Types.existentialAbstraction(List, Types$Type):3789->rgb(242,112,112)
Types.inheritsJavaVarArgsMethod$(Types, Symbols$Symbol):4624->rgb(202,54,54)
Types.inheritsJavaVarArgsMethod(Symbols$Symbol):4625->rgb(224,85,85)
Types.instantiatedBounds$(Types, Types$Type, Symbols$Symbol, List, List):4449->rgb(246,117,117)
Types.instantiatedBounds(Types$Type, Symbols$Symbol, List, List):4450->rgb(254,128,128)
Types.intersectionType$(Types, List):3655->rgb(248,120,120)
Types.intersectionType$(Types, List, Symbols$Symbol):3648->rgb(251,124,124)
Types.intersectionType(List):3657->rgb(207,61,61)
Types.intersectionType(List, Symbols$Symbol):3650->rgb(210,64,64)
Types.intersectionTypeForLazyBaseType$(Types, List):3659->rgb(237,104,104)
Types.intersectionTypeForLazyBaseType(List):3661->rgb(226,88,88)
Types.isBoundedGeneric$(Types, Types$Type):4685->rgb(247,119,119)
Types.isBoundedGeneric(Types$Type):4686->rgb(212,68,68)
Types.isEligibleForPrefixUnification$(Types, Types$Type):4097->rgb(252,126,126)
Types.isEligibleForPrefixUnification(Types$Type):4098->rgb(242,112,112)
Types.isExistentialType$(Types, Types$Type):4119->rgb(250,122,122)
Types.isExistentialType(Types$Type):4121->rgb(226,88,88)
Types.isJavaVarargsAncestor$(Types, Symbols$Symbol):4619->rgb(235,101,101)
Types.isJavaVarargsAncestor(Symbols$Symbol):4622->rgb(242,111,111)
Types.isNew$1(Symbols$Symbol, Types$Type, List, ObjectRef):1451->rgb(229,92,92)
Types.isRawIfWithoutArgs$(Types, Symbols$Symbol):3909->rgb(212,67,67)
Types.isRawIfWithoutArgs(Symbols$Symbol):3909->rgb(233,98,98)
Types.isRawType$(Types, Types$Type):3913->rgb(205,58,58)
Types.isRawType(Types$Type):3913->rgb(245,116,116)
Types.isRawType(Types$Type):3914->rgb(220,79,79)
Types.isSameTypes$(Types, List, List):4070->rgb(216,74,74)
Types.isSameTypes(List, List):4070->rgb(224,86,86)
Types.isSubArg$1(Types$Type, Types$Type, int, int):4235->rgb(238,105,105)
Types.isSubArg$1(Types$Type, Types$Type, int, int):4236->rgb(249,121,121)
Types.isSubArgs$(Types, List, List, List, int):4233->rgb(201,52,52)
Types.isSubArgs(List, List, List, int):4239->rgb(200,50,50)
Types.isWithinBounds$(Types, Types$Type, Symbols$Symbol, List, List):4442->rgb(252,126,126)
Types.isWithinBounds(Types$Type, Symbols$Symbol, List, List):4443->rgb(225,86,86)
Types.isWithinBounds(Types$Type, Symbols$Symbol, List, List):4446->rgb(224,86,86)
Types.loop$3(List, int):4778->rgb(201,51,51)
Types.loop$4(List, int):4785->rgb(224,85,85)
Types.lubDepth$(Types, List):3981->rgb(241,109,109)
Types.lubDepth(List):3982->rgb(224,85,85)
Types.lubDepth(List):3983->rgb(249,122,122)
Types.lubDepth(List):3984->rgb(224,85,85)
Types.lubDepthAdjust(int, int):3993->rgb(201,51,51)
Types.matchesQuantified$1(List, List, Types$Type, Types$Type, boolean):4308->rgb(217,76,76)
Types.matchesQuantified$1(List, List, Types$Type, Types$Type, boolean):4309->rgb(223,84,84)
Types.matchesType$(Types, Types$Type, Types$Type, boolean):4306->rgb(238,106,106)
Types.matchesType(Types$Type, Types$Type, boolean):4327->rgb(208,62,62)
Types.matchesType(Types$Type, Types$Type, boolean):4328->rgb(209,63,63)
Types.matchesType(Types$Type, Types$Type, boolean):4329->rgb(247,118,118)
Types.matchesType(Types$Type, Types$Type, boolean):4359->rgb(226,87,87)
Types.matchingParams$(Types, List, List, boolean, boolean):4423->rgb(216,74,74)
Types.matchingParams(List, List, boolean, boolean):4433->rgb(245,116,116)
Types.maxDepth$(Types, List):4776->rgb(233,98,98)
Types.maxDepth(List):4781->rgb(240,109,109)
Types.maxbaseTypeSeqDepth$(Types, List):4783->rgb(212,68,68)
Types.maxbaseTypeSeqDepth(List):4788->rgb(210,64,64)
Types.mergePrefixAndArgs$(Types, List, int, int):4520->rgb(251,124,124)
Types.mergePrefixAndArgs(List, int, int):4524->rgb(223,84,84)
Types.mergePrefixAndArgs(List, int, int):4527->rgb(202,53,53)
Types.mergePrefixAndArgs(List, int, int):4528->rgb(250,123,123)
Types.mergePrefixAndArgs(List, int, int):4545->rgb(219,78,78)
Types.mergePrefixAndArgs(List, int, int):4554->rgb(210,65,65)
Types.mergePrefixAndArgs(List, int, int):4585->rgb(232,96,96)
Types.normalizePlus$(Types, Types$Type):4047->rgb(235,101,101)
Types.normalizePlus(Types$Type):4048->rgb(254,129,129)
Types.normalizePlus(Types$Type):4049->rgb(249,122,122)
Types.normalizePlus(Types$Type):4051->rgb(207,60,60)
Types.normalizePlus(Types$Type):4053->rgb(241,110,110)
Types.objToAny$(Types, Types$Type):4711->rgb(228,90,90)
Types.objToAny(Types$Type):4712->rgb(201,52,52)
Types.rebind(Types$Type, Symbols$Symbol):3524->rgb(216,73,73)
Types.rebind(Types$Type, Symbols$Symbol):3525->rgb(222,82,82)
Types.refinedType$(Types, List, Symbols$Symbol):3572->rgb(223,83,83)
Types.refinedType$(Types, List, Symbols$Symbol, Scopes$Scope, Position):3559->rgb(202,54,54)
Types.refinedType(List, Symbols$Symbol):3573->rgb(246,116,116)
Types.refinedType(List, Symbols$Symbol, Scopes$Scope, Position):3564->rgb(254,129,129)
Types.sameLength$(Types, List, List):4075->rgb(236,102,102)
Types.sameLength(List, List):4075->rgb(218,76,76)
Types.scala$reflect$internal$Types$$typesContain(List, Symbols$Symbol):4792->rgb(206,59,59)
Types.singleType$(Types, Types$Type, Symbols$Symbol):3545->rgb(223,84,84)
Types.singleType(Types$Type, Symbols$Symbol):3546->rgb(225,86,86)
Types.singleType(Types$Type, Symbols$Symbol):3549->rgb(217,76,76)
Types.singleType(Types$Type, Symbols$Symbol):3551->rgb(208,63,63)
Types.singleType(Types$Type, Symbols$Symbol):3554->rgb(247,119,119)
Types.singletonBounds$(Types, Types$Type):3925->rgb(249,121,121)
Types.singletonBounds(Types$Type):3925->rgb(200,50,50)
Types.specializesSym$(Types, Types$Type, Symbols$Symbol, Types$Type, Symbols$Symbol, int):4263->rgb(209,64,64)
Types.specializesSym$(Types, Types$Type, Symbols$Symbol, int):4242->rgb(220,79,79)
Types.specializesSym(Types$Type, Symbols$Symbol, Types$Type, Symbols$Symbol, int):4288->rgb(233,98,98)
Types.specializesSym(Types$Type, Symbols$Symbol, Types$Type, Symbols$Symbol, int):4294->rgb(236,102,102)
Types.specializesSym(Types$Type, Symbols$Symbol, int):4256->rgb(208,61,61)
Types.typeDepth$(Types, Types$Type):4760->rgb(202,54,54)
Types.typeDepth(List):4000->rgb(240,108,108)
Types.typeDepth(Types$Type):4761->rgb(200,50,50)
Types.typeDepth(Types$Type):4762->rgb(212,67,67)
Types.typeDepth(Types$Type):4768->rgb(213,69,69)
Types.typeRef$(Types, Types$Type, Symbols$Symbol, List):3596->rgb(246,118,118)
Types.typeRef(Types$Type, Symbols$Symbol, List):3602->rgb(216,73,73)
Types.typeRef(Types$Type, Symbols$Symbol, List):3609->rgb(245,116,116)
Types.typeRef(Types$Type, Symbols$Symbol, List):3613->rgb(247,118,118)
Types.unique$(Types, Types$Type):3810->rgb(246,117,117)
Types.unique(Types$Type):3811->rgb(217,75,75)
Types.unique(Types$Type):3812->rgb(241,110,110)
Types.unique(Types$Type):3821->rgb(203,54,54)
TypingTransformers$TypingTransformer.$anonfun$transform$1(TypingTransformers$TypingTransformer, Trees$Tree):40->rgb(242,111,111)
TypingTransformers$TypingTransformer.$anonfun$transform$2(TypingTransformers$TypingTransformer, Trees$Tree):42->rgb(228,91,91)
TypingTransformers$TypingTransformer.<init>(TypingTransformers, CompilationUnits$CompilationUnit):20->rgb(220,80,80)
TypingTransformers$TypingTransformer.<init>(TypingTransformers, CompilationUnits$CompilationUnit):22->rgb(243,113,113)
TypingTransformers$TypingTransformer.atOwner(Symbols$SymbolApi, Function0):17->rgb(202,53,53)
TypingTransformers$TypingTransformer.atOwner(Symbols$SymbolApi, Function0):25->rgb(227,90,90)
TypingTransformers$TypingTransformer.atOwner(Trees$Tree, Symbols$Symbol, Function0):29->rgb(208,62,62)
TypingTransformers$TypingTransformer.atOwner(Trees$Tree, Symbols$Symbol, Function0):30->rgb(211,66,66)
TypingTransformers$TypingTransformer.super$transform(Trees$Tree):40->rgb(212,67,67)
TypingTransformers$TypingTransformer.transform(Trees$Tree):25->rgb(237,104,104)
TypingTransformers$TypingTransformer.transform(Trees$Tree):36->rgb(206,59,59)
TypingTransformers$TypingTransformer.transform(Trees$Tree):44->rgb(248,120,120)
UnCurry$$anon$1$$anon$2.apply(Types$Type):39->rgb(215,72,72)
UnCurry$$anon$1.apply(Object):31->rgb(204,56,56)
UnCurry$$anon$1.apply(Types$Type):33->rgb(235,101,101)
UnCurry$$anon$1.apply(Types$Type):35->rgb(215,73,73)
UnCurry$$anon$1.apply(Types$Type):41->rgb(220,79,79)
UnCurry$$anon$1.apply(Types$Type):43->rgb(201,51,51)
UnCurry$$anon$1.apply(Types$Type):50->rgb(222,82,82)
UnCurry$$anon$1.apply(Types$Type):53->rgb(240,109,109)
UnCurry$$anon$3.apply(Types$Type):73->rgb(233,98,98)
UnCurry$$anon$3.apply(Types$Type):76->rgb(248,121,121)
UnCurry$$anon$3.apply(Types$Type):84->rgb(245,116,116)
UnCurry$$anon$3.apply(Types$Type):97->rgb(202,53,53)
UnCurry$DesugaredParameterType$.unapply(Types$Type):60->rgb(242,112,112)
UnCurry$DesugaredParameterType$.unapply(Types$Type):62->rgb(213,69,69)
UnCurry$DesugaredParameterType$.unapply(Types$Type):64->rgb(250,123,123)
UnCurry$UnCurryTransformer$dependentParamTypeErasure$.isDependent(Trees$DefDef):672->rgb(251,124,124)
UnCurry$UnCurryTransformer.$anonfun$mainTransform$11(UnCurry$UnCurryTransformer, Trees$Tree):468->rgb(217,75,75)
UnCurry$UnCurryTransformer.$anonfun$mainTransform$12(UnCurry$UnCurryTransformer, Trees$Tree, Trees$Tree, List):476->rgb(222,82,82)
UnCurry$UnCurryTransformer.$anonfun$mainTransform$13(UnCurry$UnCurryTransformer, Trees$Tree):480->rgb(215,73,73)
UnCurry$UnCurryTransformer.$anonfun$mainTransform$16(UnCurry$UnCurryTransformer, Trees$Tree):511->rgb(234,100,100)
UnCurry$UnCurryTransformer.$anonfun$mainTransform$3(UnCurry$UnCurryTransformer, List):438->rgb(241,110,110)
UnCurry$UnCurryTransformer.$anonfun$mainTransform$4(UnCurry$UnCurryTransformer, Trees$ValDef):439->rgb(202,53,53)
UnCurry$UnCurryTransformer.$anonfun$mainTransform$5(UnCurry$UnCurryTransformer, Symbols$Symbol, Trees$Modifiers, Names$TermName, List, Trees$Tree, Trees$Tree, List, Trees$DefDef):446->rgb(237,104,104)
UnCurry$UnCurryTransformer.$anonfun$mainTransform$5(UnCurry$UnCurryTransformer, Symbols$Symbol, Trees$Modifiers, Names$TermName, List, Trees$Tree, Trees$Tree, List, Trees$DefDef):462->rgb(223,84,84)
UnCurry$UnCurryTransformer.$anonfun$mainTransform$6(UnCurry$UnCurryTransformer, Trees$Modifiers, Names$TermName, List, Trees$Tree, Trees$Tree, List, Trees$DefDef):453->rgb(250,123,123)
UnCurry$UnCurryTransformer.$anonfun$mainTransform$6(UnCurry$UnCurryTransformer, Trees$Modifiers, Names$TermName, List, Trees$Tree, Trees$Tree, List, Trees$DefDef):459->rgb(218,76,76)
UnCurry$UnCurryTransformer.$anonfun$mainTransform$7(UnCurry$UnCurryTransformer, Trees$Tree):450->rgb(226,88,88)
UnCurry$UnCurryTransformer.$anonfun$mainTransform$9(UnCurry$UnCurryTransformer, Trees$Tree):453->rgb(252,126,126)
UnCurry$UnCurryTransformer.$anonfun$postTransform$1(UnCurry$UnCurryTransformer, Trees$Tree):575->rgb(202,53,53)
UnCurry$UnCurryTransformer.$anonfun$postTransform$1(UnCurry$UnCurryTransformer, Trees$Tree):590->rgb(235,101,101)
UnCurry$UnCurryTransformer.$anonfun$postTransform$1(UnCurry$UnCurryTransformer, Trees$Tree):611->rgb(219,78,78)
UnCurry$UnCurryTransformer.$anonfun$postTransform$1(UnCurry$UnCurryTransformer, Trees$Tree):619->rgb(234,99,99)
UnCurry$UnCurryTransformer.$anonfun$postTransform$1(UnCurry$UnCurryTransformer, Trees$Tree):621->rgb(242,111,111)
UnCurry$UnCurryTransformer.$anonfun$postTransform$1(UnCurry$UnCurryTransformer, Trees$Tree):623->rgb(221,81,81)
UnCurry$UnCurryTransformer.$anonfun$postTransform$1(UnCurry$UnCurryTransformer, Trees$Tree):628->rgb(243,112,112)
UnCurry$UnCurryTransformer.$anonfun$postTransform$1(UnCurry$UnCurryTransformer, Trees$Tree):630->rgb(202,53,53)
UnCurry$UnCurryTransformer.$anonfun$transformArgs$4(UnCurry$UnCurryTransformer, Symbols$Symbol, Types$Type, Trees$Tree):337->rgb(201,52,52)
UnCurry$UnCurryTransformer.$anonfun$transformArgs$4(UnCurry$UnCurryTransformer, Symbols$Symbol, Types$Type, Trees$Tree):340->rgb(244,114,114)
UnCurry$UnCurryTransformer.$anonfun$transformFunction$1(UnCurry$UnCurryTransformer, Trees$Function, Trees$DefDef, Trees$Tree):226->rgb(217,76,76)
UnCurry$UnCurryTransformer.applyUnary$1(Trees$Tree):538->rgb(239,107,107)
UnCurry$UnCurryTransformer.applyUnary$1(Trees$Tree):539->rgb(201,52,52)
UnCurry$UnCurryTransformer.applyUnary$1(Trees$Tree):540->rgb(207,60,60)
UnCurry$UnCurryTransformer.checkIsElisible$1(Symbols$Symbol):424->rgb(211,66,66)
UnCurry$UnCurryTransformer.isByNameRef(Trees$Tree):125->rgb(241,110,110)
UnCurry$UnCurryTransformer.mainTransform(Trees$Tree):394->rgb(252,126,126)
UnCurry$UnCurryTransformer.mainTransform(Trees$Tree):413->rgb(253,127,127)
UnCurry$UnCurryTransformer.mainTransform(Trees$Tree):417->rgb(221,80,80)
UnCurry$UnCurryTransformer.mainTransform(Trees$Tree):433->rgb(247,119,119)
UnCurry$UnCurryTransformer.mainTransform(Trees$Tree):435->rgb(221,81,81)
UnCurry$UnCurryTransformer.mainTransform(Trees$Tree):438->rgb(208,63,63)
UnCurry$UnCurryTransformer.mainTransform(Trees$Tree):442->rgb(246,116,116)
UnCurry$UnCurryTransformer.mainTransform(Trees$Tree):465->rgb(221,80,80)
UnCurry$UnCurryTransformer.mainTransform(Trees$Tree):470->rgb(248,121,121)
UnCurry$UnCurryTransformer.mainTransform(Trees$Tree):497->rgb(207,61,61)
UnCurry$UnCurryTransformer.mainTransform(Trees$Tree):500->rgb(205,57,57)
UnCurry$UnCurryTransformer.mainTransform(Trees$Tree):501->rgb(236,102,102)
UnCurry$UnCurryTransformer.mainTransform(Trees$Tree):505->rgb(237,104,104)
UnCurry$UnCurryTransformer.mainTransform(Trees$Tree):508->rgb(241,110,110)
UnCurry$UnCurryTransformer.mainTransform(Trees$Tree):514->rgb(237,104,104)
UnCurry$UnCurryTransformer.mainTransform(Trees$Tree):515->rgb(200,50,50)
UnCurry$UnCurryTransformer.mainTransform(Trees$Tree):519->rgb(212,68,68)
UnCurry$UnCurryTransformer.mainTransform(Trees$Tree):525->rgb(247,119,119)
UnCurry$UnCurryTransformer.mustExpandFunction(Trees$Function):83->rgb(216,73,73)
UnCurry$UnCurryTransformer.postTransform(Trees$Tree):528->rgb(204,56,56)
UnCurry$UnCurryTransformer.removeNullary$1(Trees$Tree):534->rgb(233,98,98)
UnCurry$UnCurryTransformer.scala$tools$nsc$transform$UnCurry$UnCurryTransformer$$$outer():71->rgb(211,67,67)
UnCurry$UnCurryTransformer.super$transform(Trees$Tree):462->rgb(254,129,129)
UnCurry$UnCurryTransformer.transform(Trees$Tree):111->rgb(204,57,57)
UnCurry$UnCurryTransformer.transform(Trees$TreeApi):71->rgb(224,85,85)
UnCurry$UnCurryTransformer.transformArgs(Position, Symbols$Symbol, List, List):322->rgb(208,62,62)
UnCurry$UnCurryTransformer.transformArgs(Position, Symbols$Symbol, List, List):324->rgb(232,97,97)
UnCurry$UnCurryTransformer.transformFunction(Trees$Function):220->rgb(211,66,66)
UnCurry$UnCurryTransformer.transformFunction(Trees$Function):222->rgb(222,82,82)
UnCurry$UnCurryTransformer.transformFunction(Trees$Function):225->rgb(215,73,73)
UnCurry$UnCurryTransformer.transformFunction(Trees$Function):234->rgb(250,123,123)
UnCurry$UnCurryTransformer.transformInConstructor$1(Trees$Tree):413->rgb(210,65,65)
UnCurry$UnCurryTransformer.translateSynchronized(Trees$Tree):384->rgb(229,92,92)
UnCurry.scala$reflect$internal$transform$UnCurry$$expandAlias(Types$Type):29->rgb(227,89,89)
UnCurry.transformInfo$(UnCurry, Symbols$Symbol, Types$Type):148->rgb(248,121,121)
UnCurry.transformInfo(Symbols$Symbol, Types$Type):149->rgb(202,53,53)
UnCurry.transformInfo(Symbols$Symbol, Types$Type):150->rgb(213,69,69)
UnCurry.transformInfo(Symbols$Symbol, Types$Type):154->rgb(237,104,104)
UnCurry.transformInfo(Symbols$Symbol, Types$Type):53->rgb(227,90,90)
UnPickler$Scan$LazyTypeRef.$anonfun$completeInternal$1(UnPickler$Scan$LazyTypeRef, Symbols$Symbol):712->rgb(223,83,83)
UnPickler$Scan$LazyTypeRef.complete(Symbols$Symbol):739->rgb(218,77,77)
UnPickler$Scan$LazyTypeRef.completeInternal(Symbols$Symbol):712->rgb(246,117,117)
UnPickler$Scan$LazyTypeRef.load(Symbols$Symbol):742->rgb(224,86,86)
UnPickler$Scan.$anonfun$readAnnotArg$1(UnPickler$Scan):449->rgb(247,119,119)
UnPickler$Scan.$anonfun$readAnnotationRef$1(UnPickler$Scan):640->rgb(213,70,70)
UnPickler$Scan.$anonfun$readNameRef$1(UnPickler$Scan):637->rgb(200,51,51)
UnPickler$Scan.$anonfun$readSymbol$11(UnPickler$Scan):341->rgb(247,119,119)
UnPickler$Scan.$anonfun$readSymbol$3(UnPickler$Scan, int, Names$Name, Symbols$Symbol):240->rgb(225,86,86)
UnPickler$Scan.$anonfun$readSymbol$8(UnPickler$Scan):271->rgb(247,119,119)
UnPickler$Scan.$anonfun$readTreeRef$1(UnPickler$Scan):642->rgb(206,59,59)
UnPickler$Scan.$anonfun$readType$1(UnPickler$Scan):359->rgb(210,65,65)
UnPickler$Scan.$anonfun$readType$2(UnPickler$Scan):360->rgb(238,105,105)
UnPickler$Scan.$anonfun$readType$3(UnPickler$Scan):361->rgb(252,126,126)
UnPickler$Scan.$anonfun$readTypeRef$1(UnPickler$Scan):638->rgb(228,91,91)
UnPickler$Scan.$anonfun$run$1(UnPickler$Scan, IntRef):85->rgb(234,99,99)
UnPickler$Scan.$anonfun$run$2(UnPickler$Scan):95->rgb(205,58,58)
UnPickler$Scan.$anonfun$symScope$1(UnPickler$Scan):115->rgb(201,51,51)
UnPickler$Scan.<init>(UnPickler, byte[], int, Symbols$ClassSymbol, Symbols$ModuleSymbol, String):58->rgb(241,109,109)
UnPickler$Scan.at(int, Function0):177->rgb(223,84,84)
UnPickler$Scan.finishSym$1(Symbols$Symbol, int, Symbols$Symbol, int):308->rgb(225,87,87)
UnPickler$Scan.finishSym$1(Symbols$Symbol, int, Symbols$Symbol, int):312->rgb(217,75,75)
UnPickler$Scan.finishSym$1(Symbols$Symbol, int, Symbols$Symbol, int):317->rgb(207,60,60)
UnPickler$Scan.finishSym$1(Symbols$Symbol, int, Symbols$Symbol, int):320->rgb(228,90,90)
UnPickler$Scan.finishSym$1(Symbols$Symbol, int, Symbols$Symbol, int):321->rgb(222,82,82)
UnPickler$Scan.fromName$1(Names$Name, int, Symbols$Symbol):211->rgb(216,73,73)
UnPickler$Scan.fromName$1(Names$Name, int, Symbols$Symbol):215->rgb(207,61,61)
UnPickler$Scan.isClassRoot$1(Names$Name, Symbols$Symbol):281->rgb(202,53,53)
UnPickler$Scan.isModuleRoot$1(Names$Name, Symbols$Symbol):282->rgb(206,58,58)
UnPickler$Scan.isRefinementSymbolEntry(int):160->rgb(232,97,97)
UnPickler$Scan.isSymbolEntry(int):119->rgb(205,58,58)
UnPickler$Scan.isSymbolEntry(int):121->rgb(216,74,74)
UnPickler$Scan.readAnnotArg(int):449->rgb(235,101,101)
UnPickler$Scan.readAnnotArg(int):452->rgb(212,68,68)
UnPickler$Scan.readAnnotation():505->rgb(201,51,51)
UnPickler$Scan.readAnnotationInfo(int):472->rgb(214,71,71)
UnPickler$Scan.readAnnotationInfo(int):483->rgb(227,89,89)
UnPickler$Scan.readAnnotationRef():640->rgb(207,61,61)
UnPickler$Scan.readAnnots$1(int):357->rgb(235,101,101)
UnPickler$Scan.readExtSymbol$1(int, int):204->rgb(244,114,114)
UnPickler$Scan.readExtSymbol$1(int, int):205->rgb(252,126,126)
UnPickler$Scan.readExtSymbol$1(int, int):240->rgb(207,60,60)
UnPickler$Scan.readName():190->rgb(224,86,86)
UnPickler$Scan.readName():191->rgb(231,96,96)
UnPickler$Scan.readNameRef():637->rgb(229,92,92)
UnPickler$Scan.readNonEmptyTree(int, int):587->rgb(235,101,101)
UnPickler$Scan.readNonEmptyTree(int, int):588->rgb(209,63,63)
UnPickler$Scan.readNonEmptyTree(int, int):589->rgb(201,52,52)
UnPickler$Scan.readSymbol():199->rgb(229,93,93)
UnPickler$Scan.readSymbol():263->rgb(245,116,116)
UnPickler$Scan.readSymbol():265->rgb(215,72,72)
UnPickler$Scan.readSymbol():271->rgb(240,108,108)
UnPickler$Scan.readSymbol():272->rgb(229,92,92)
UnPickler$Scan.readSymbol():276->rgb(233,98,98)
UnPickler$Scan.readSymbol():326->rgb(205,57,57)
UnPickler$Scan.readSymbol():328->rgb(231,96,96)
UnPickler$Scan.readSymbol():333->rgb(206,59,59)
UnPickler$Scan.readSymbol():334->rgb(200,50,50)
UnPickler$Scan.readSymbol():341->rgb(211,66,66)
UnPickler$Scan.readSymbol():342->rgb(239,106,106)
UnPickler$Scan.readSymbol():346->rgb(216,74,74)
UnPickler$Scan.readSymbol():347->rgb(233,98,98)
UnPickler$Scan.readSymbolAnnotation():495->rgb(251,125,125)
UnPickler$Scan.readSymbolRef():624->rgb(204,56,56)
UnPickler$Scan.readSymbolRef():629->rgb(250,123,123)
UnPickler$Scan.readSymbols$1(int):357->rgb(231,95,95)
UnPickler$Scan.readThisType$1():380->rgb(208,63,63)
UnPickler$Scan.readThisType$1():384->rgb(221,81,81)
UnPickler$Scan.readTree$1(Types$Type, int, int):544->rgb(206,59,59)
UnPickler$Scan.readTree$1(Types$Type, int, int):545->rgb(233,98,98)
UnPickler$Scan.readTree():601->rgb(234,100,100)
UnPickler$Scan.readTreeRef():642->rgb(224,85,85)
UnPickler$Scan.readType(boolean):355->rgb(218,77,77)
UnPickler$Scan.readType(boolean):393->rgb(238,105,105)
UnPickler$Scan.readType(boolean):394->rgb(217,75,75)
UnPickler$Scan.readType(boolean):397->rgb(242,111,111)
UnPickler$Scan.readType(boolean):398->rgb(234,100,100)
UnPickler$Scan.readType(boolean):399->rgb(201,52,52)
UnPickler$Scan.readType(boolean):400->rgb(241,111,111)
UnPickler$Scan.readType(boolean):401->rgb(225,86,86)
UnPickler$Scan.readType(boolean):403->rgb(239,107,107)
UnPickler$Scan.readTypeRef():638->rgb(205,57,57)
UnPickler$Scan.readTypes$1(int):357->rgb(247,119,119)
UnPickler$Scan.ref$1():521->rgb(213,69,69)
UnPickler$Scan.run():77->rgb(204,57,57)
UnPickler$Scan.run():84->rgb(251,125,125)
UnPickler$Scan.shouldEnterInOwnerScope$1(Symbols$Symbol):297->rgb(234,99,99)
UnPickler$Scan.shouldEnterInOwnerScope$1(Symbols$Symbol):302->rgb(228,91,91)
UnPickler$Scan.shouldEnterInOwnerScope$1(Symbols$Symbol):303->rgb(239,107,107)
UnPickler$Scan.symScope(Symbols$Symbol):115->rgb(237,104,104)
UnPickler.unpickle(byte[], int, Symbols$ClassSymbol, Symbols$ModuleSymbol, String):40->rgb(231,95,95)
Unapplies.$anonfun$caseModuleUnapplyMeth$2(Unapplies, Trees$ClassDef, Trees$Tree):168->rgb(213,68,68)
Unapplies.$anonfun$unapplyMember$1$adapted(Unapplies, Symbols$Symbol):41->rgb(223,83,83)
Unapplies.$anonfun$unapplyMember$1(Unapplies, Symbols$Symbol):41->rgb(226,89,89)
Unapplies.caseClassCopyMeth$(Unapplies, Trees$ClassDef):202->rgb(232,97,97)
Unapplies.caseClassCopyMeth(Trees$ClassDef):204->rgb(223,84,84)
Unapplies.caseClassCopyMeth(Trees$ClassDef):216->rgb(208,62,62)
Unapplies.caseClassUnapplyReturnValue(Names$Name, Trees$ClassDef):92->rgb(238,105,105)
Unapplies.caseModuleApplyMeth$(Unapplies, Trees$ClassDef):143->rgb(217,75,75)
Unapplies.caseModuleApplyMeth(Trees$ClassDef):143->rgb(208,62,62)
Unapplies.caseModuleDef$(Unapplies, Trees$ClassDef):98->rgb(215,72,72)
Unapplies.caseModuleDef(Trees$ClassDef):118->rgb(209,64,64)
Unapplies.caseModuleDef(Trees$ClassDef):99->rgb(254,129,129)
Unapplies.caseModuleUnapplyMeth$(Unapplies, Trees$ClassDef):147->rgb(229,92,92)
Unapplies.caseModuleUnapplyMeth(Trees$ClassDef):148->rgb(202,53,53)
Unapplies.caseModuleUnapplyMeth(Trees$ClassDef):149->rgb(212,68,68)
Unapplies.caseModuleUnapplyMeth(Trees$ClassDef):159->rgb(218,76,76)
Unapplies.caseModuleUnapplyMeth(Trees$ClassDef):167->rgb(201,52,52)
Unapplies.caseModuleUnapplyMeth(Trees$ClassDef):168->rgb(201,52,52)
Unapplies.constrParamss(Trees$ClassDef):57->rgb(247,119,119)
Unapplies.constrTparamsInvariant(Trees$ClassDef):63->rgb(208,63,63)
Unapplies.constrTparamsInvariant(Trees$ClassDef):64->rgb(250,124,124)
Unapplies.createFun$1(Trees$ClassDef, List):106->rgb(227,89,89)
Unapplies.directUnapplyMember$(Unapplies, Types$Type):36->rgb(208,61,61)
Unapplies.directUnapplyMember(Types$Type):36->rgb(242,112,112)
Unapplies.factoryMeth$(Unapplies, Trees$Modifiers, Names$TermName, Trees$ClassDef):130->rgb(243,112,112)
Unapplies.factoryMeth(Trees$Modifiers, Names$TermName, Trees$ClassDef):131->rgb(245,116,116)
Unapplies.factoryMeth(Trees$Modifiers, Names$TermName, Trees$ClassDef):133->rgb(238,106,106)
Unapplies.parents$1(Trees$ClassDef, List):109->rgb(250,123,123)
Unapplies.unapplyMember$(Unapplies, Types$Type):41->rgb(210,65,65)
Unapplies.unapplyMember(Types$Type):41->rgb(222,82,82)
Universe.Modifiers(Object):61->rgb(233,98,98)
Universe.Modifiers(Object, Names$NameApi):61->rgb(227,90,90)
UnixChannelFactory.newFileChannel(UnixPath, Set, int):148->rgb(210,65,65)
UnixChannelFactory.newFileChannel(int, UnixPath, String, Set, int):136->rgb(216,73,73)
UnixChannelFactory.open(int, UnixPath, String, UnixChannelFactory$Flags, int):257->rgb(224,85,85)
UnixFileSystem.getPath(String, String[]):281->rgb(220,80,80)
UnixFileSystemProvider.newByteChannel(Path, Set, FileAttribute[]):212->rgb(229,92,92)
UnixNativeDispatcher.open(UnixPath, int, int):73->rgb(202,53,53)
UnixPath.<init>(UnixFileSystem, String):71->rgb(254,128,128)
UnixPath.encode(UnixFileSystem, String):143->rgb(215,72,72)
UnixPath.toString():761->rgb(239,106,106)
VarInsnNode.accept(MethodVisitor):86->rgb(208,62,62)
Variance$.isContravariant$extension(int):39->rgb(216,74,74)
Variances$VarianceValidator$ValidateVarianceMap$.$anonfun$apply$1(Variances$VarianceValidator$ValidateVarianceMap$, Types$Type):129->rgb(230,95,95)
Variances$VarianceValidator$ValidateVarianceMap$.apply(Object):59->rgb(214,71,71)
Variances$VarianceValidator$ValidateVarianceMap$.apply(Types$Type):126->rgb(209,63,63)
Variances$VarianceValidator$ValidateVarianceMap$.apply(Types$Type):128->rgb(243,112,112)
Variances$VarianceValidator$ValidateVarianceMap$.apply(Types$Type):132->rgb(221,81,81)
Variances$VarianceValidator$ValidateVarianceMap$.apply(Types$Type):30->rgb(243,113,113)
Variances$VarianceValidator$ValidateVarianceMap$.resultTypeOnly(Types$Type):114->rgb(235,101,101)
Variances$VarianceValidator$ValidateVarianceMap$.validateDefinition(Symbols$Symbol):148->rgb(242,111,111)
Variances$VarianceValidator.skip$1(Trees$Tree):163->rgb(242,112,112)
Variances$VarianceValidator.traverse(Trees$Tree):169->rgb(224,86,86)
Variances$VarianceValidator.traverse(Trees$Tree):171->rgb(218,76,76)
Variances$VarianceValidator.traverse(Trees$Tree):172->rgb(221,81,81)
Variances$VarianceValidator.traverse(Trees$Tree):173->rgb(231,95,95)
Variances$VarianceValidator.traverse(Trees$Tree):174->rgb(238,106,106)
Variances$VarianceValidator.traverse(Trees$Tree):176->rgb(205,57,57)
Variances$VarianceValidator.traverse(Trees$Tree):178->rgb(212,68,68)
Variances$VarianceValidator.traverse(Trees$Tree):180->rgb(246,116,116)
Variances$VarianceValidator.traverse(Trees$Tree):181->rgb(240,108,108)
Variances$VarianceValidator.traverse(Trees$Tree):182->rgb(203,54,54)
Variances$VarianceValidator.traverse(Trees$Tree):184->rgb(212,67,67)
Variances$VarianceValidator.traverse(Trees$Tree):191->rgb(238,106,106)
Variances$VarianceValidator.traverse(Trees$Tree):193->rgb(222,83,83)
Variances$VarianceValidator.traverse(Trees$TreeApi):22->rgb(240,109,109)
Variances$VarianceValidator.validateVariance(Symbols$Symbol):155->rgb(251,125,125)
Variances.$anonfun$varianceInType$1(Variances, Symbols$Symbol, Types$Type, Symbols$Symbol):206->rgb(221,80,80)
Variances.$anonfun$varianceInTypes$1(Variances, Symbols$Symbol, Types$Type):202->rgb(253,127,127)
Variances.inArgs$1(Symbols$Symbol, List, Symbols$Symbol):206->rgb(231,96,96)
Variances.inType$1(Types$Type, Symbols$Symbol):219->rgb(239,106,106)
Variances.varianceInType$(Variances, Types$Type, Symbols$Symbol):205->rgb(201,51,51)
Variances.varianceInType(Types$Type, Symbols$Symbol):228->rgb(236,103,103)
Variances.varianceInTypes$(Variances, List, Symbols$Symbol):201->rgb(214,71,71)
Variances.varianceInTypes(List, Symbols$Symbol):202->rgb(216,73,73)
Vector$.newBuilder():21->rgb(213,69,69)
Vector.initFrom(VectorPointer):64->rgb(253,127,127)
Vector.initFrom(VectorPointer, int):64->rgb(201,52,52)
VectorBuilder.$plus$plus$eq(TraversableOnce):635->rgb(228,91,91)
VectorBuilder.$plus$plus$eq(TraversableOnce):658->rgb(219,78,78)
VectorBuilder.<init>():640->rgb(229,93,93)
VectorBuilder.result():635->rgb(252,125,125)
VectorBuilder.result():665->rgb(248,120,120)
VectorIterator.next():603->rgb(247,119,119)
VectorPointer.initFrom$(VectorPointer, VectorPointer):688->rgb(211,66,66)
VectorPointer.initFrom$(VectorPointer, VectorPointer, int):690->rgb(238,106,106)
VectorPointer.initFrom(VectorPointer):688->rgb(235,100,100)
VectorPointer.initFrom(VectorPointer, int):692->rgb(206,59,59)
Warnings.warnInaccessible$(Warnings):97->rgb(254,129,129)
Warnings.warnInaccessible():97->rgb(229,92,92)
Warnings.warnUnusedImport$(Warnings):43->rgb(234,99,99)
Warnings.warnUnusedImport():43->rgb(227,90,90)
WeakHashMap.eq(Object, Object):287->rgb(206,59,59)
WeakHashMap.get(Object):401->rgb(211,67,67)
WeakHashMap.put(Object, Object):453->rgb(228,91,91)
WeakHashMap.put(Object, Object):466->rgb(231,95,95)
WeakHashMap.resize(int):493->rgb(229,92,92)
WeakHashMap.transfer(WeakHashMap$Entry[], WeakHashMap$Entry[]):516->rgb(237,104,104)
WeakHashSet$Entry.hash():399->rgb(212,68,68)
WeakHashSet$Entry.tail():399->rgb(221,81,81)
WeakHashSet.add$1(Object, int, int, WeakHashSet$Entry):177->rgb(234,99,99)
WeakHashSet.add$1(Object, int, int, WeakHashSet$Entry):179->rgb(232,97,97)
WeakHashSet.findEntryOrUpdate(Object):172->rgb(243,112,112)
WeakHashSet.findEntryOrUpdate(Object):193->rgb(225,87,87)
WeakHashSet.linkedListLoop$2(WeakHashSet$Entry):132->rgb(243,113,113)
WeakHashSet.linkedListLoop$2(WeakHashSet$Entry):133->rgb(220,79,79)
WeakHashSet.linkedListLoop$4(WeakHashSet$Entry, Object, int, int, WeakHashSet$Entry):185->rgb(240,109,109)
WeakHashSet.linkedListLoop$4(WeakHashSet$Entry, Object, int, int, WeakHashSet$Entry):187->rgb(234,100,100)
WeakHashSet.linkedListLoop$4(WeakHashSet$Entry, Object, int, int, WeakHashSet$Entry):188->rgb(245,116,116)
WeakHashSet.resize():143->rgb(248,120,120)
WeakHashSet.tableLoop$1(int, WeakHashSet$Entry[]):139->rgb(232,97,97)
WeakReference.get():18->rgb(201,52,52)
WrappedArray$ofRef.<init>(Object[]):127->rgb(238,105,105)
WrappedArray.foldLeft(Object, Function2):38->rgb(229,93,93)
WrappedArray.foreach(Function1):38->rgb(242,111,111)
WrappedArray.init():38->rgb(251,124,124)
WrappedArray.iterator():38->rgb(208,62,62)
WrappedArray.sizeHintIfCheap():38->rgb(231,95,95)
WrappedArray.slice(int, int):38->rgb(231,96,96)
WrappedArrayBuilder.mkArray(int):36->rgb(208,62,62)
WrappedArrayBuilder.mkArray(int):47->rgb(238,106,106)
WrappedArrayBuilder.resize(int):54->rgb(208,62,62)
WrappedArrayBuilder.sizeHint(int):59->rgb(223,84,84)
WrappedProperties$AccessControl$.propOrElse(String, String):42->rgb(240,108,108)
WrappedProperties$AccessControl$.propOrEmpty(String):42->rgb(228,92,92)
WrappedProperties$AccessControl$.scala$tools$reflect$WrappedProperties$$super$propOrElse(String, String):42->rgb(250,122,122)
WrappedProperties$AccessControl$.wrap(Function0):43->rgb(223,84,84)
WrappedProperties.$anonfun$propOrElse$1(WrappedProperties, String, String):23->rgb(234,99,99)
WrappedProperties.propOrElse$(WrappedProperties, String, String):23->rgb(214,70,70)
WrappedProperties.propOrElse(String, String):23->rgb(254,129,129)
Wrappers$JIteratorWrapper.next():40->rgb(252,126,126)
Wrappers$JMapWrapper.get(Object):290->rgb(252,126,126)
Wrappers$JMapWrapper.update(Object, Object):290->rgb(243,112,112)
Wrappers$JMapWrapperLike.get$(Wrappers$JMapWrapperLike, Object):253->rgb(241,110,110)
Wrappers$JMapWrapperLike.get(Object):254->rgb(226,89,89)
Wrappers$JMapWrapperLike.update$(Wrappers$JMapWrapperLike, Object, Object):268->rgb(237,104,104)
Wrappers$JMapWrapperLike.update(Object, Object):268->rgb(225,87,87)
ZipAndJarClassPathFactory$ZipArchiveClassPath.createFileEntry(ZipArchive$Entry):42->rgb(223,83,83)
ZipAndJarClassPathFactory$ZipArchiveClassPath.createFileEntry(ZipArchive$Entry):58->rgb(204,57,57)
ZipAndJarClassPathFactory$ZipArchiveClassPath.list(String):42->rgb(202,52,52)
ZipArchive$Entry.toString():84->rgb(224,85,85)
ZipArchiveFileLookup.$anonfun$list$1(ZipArchiveFileLookup, String, ZipArchive$DirEntry):59->rgb(205,58,58)
ZipArchiveFileLookup.$anonfun$list$2(ZipArchiveFileLookup, ArrayBuffer, ArrayBuffer, String, ZipArchive$Entry):63->rgb(252,125,125)
ZipArchiveFileLookup.findDirEntry(String):70->rgb(238,105,105)
ZipArchiveFileLookup.findDirEntry(String):71->rgb(237,104,104)
ZipArchiveFileLookup.list$(ZipArchiveFileLookup, String):51->rgb(242,111,111)
ZipArchiveFileLookup.list(String):52->rgb(202,54,54)
ZipArchiveFileLookup.list(String):54->rgb(251,125,125)
ZipCoder.getBytes(String):77->rgb(235,101,101)
ZipCoder.getBytes(String):85->rgb(246,116,116)
ZipFile.getInputStream(ZipEntry):370->rgb(210,65,65)
ZippedTraversable2$$anon$1.foreach(Function1):31->rgb(231,95,95)
_invokeBasic->rgb(209,63,63)
itable stub->rgb(240,109,109)
java/io/BufferedOutputStream.flush->rgb(94,240,94)
java/io/BufferedOutputStream.flushBuffer->rgb(52,202,52)
java/io/BufferedWriter.flush->rgb(61,210,61)
java/io/File.isFile->rgb(96,242,96)
java/io/ObjectOutputStream$BlockDataOutputStream.flush->rgb(55,204,55)
java/io/ObjectOutputStream.flush->rgb(102,248,102)
java/io/OutputStreamWriter.flush->rgb(104,250,104)
java/io/PrintStream.write->rgb(59,208,59)
java/io/PrintWriter.newLine->rgb(81,228,81)
java/io/PrintWriter.println->rgb(74,222,74)
java/io/UnixFileSystem.getBooleanAttributes->rgb(82,229,82)
java/io/UnixFileSystem.getBooleanAttributes0->rgb(95,241,95)
java/lang/Math.addExact->rgb(80,227,80)
java/lang/Object.equals->rgb(76,223,76)
java/lang/Object.hashCode->rgb(107,252,107)
java/lang/String.hashCode->rgb(50,200,50)
java/lang/String.substring->rgb(63,212,63)
java/lang/StringBuilder.append->rgb(86,233,86)
java/lang/System.identityHashCode->rgb(68,216,68)
java/lang/Thread.run->rgb(74,222,74)
java/lang/Throwable.<init>->rgb(85,232,85)
java/lang/Throwable.fillInStackTrace->rgb(83,231,83)
java/lang/invoke/CallSite.setTargetNormal->rgb(90,237,90)
java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode->rgb(107,253,107)
java/lang/invoke/InvokerBytecodeGenerator.loadAndInitializeInvokerClass->rgb(52,202,52)
java/lang/invoke/InvokerBytecodeGenerator.loadMethod->rgb(61,210,61)
java/lang/invoke/Invokers.checkCustomized->rgb(82,229,82)
java/lang/invoke/Invokers.checkExactType->rgb(74,222,74)
java/lang/invoke/Invokers.maybeCustomize->rgb(105,250,105)
java/lang/invoke/LambdaForm$BMH/1367317831.reinvoke->rgb(92,238,92)
java/lang/invoke/LambdaForm$BMH/1974336785.reinvoke->rgb(81,228,81)
java/lang/invoke/LambdaForm$DMH/1670782018.invokeVirtual_L_L->rgb(73,221,73)
java/lang/invoke/LambdaForm$MH/1244234085.identity_I->rgb(108,253,108)
java/lang/invoke/LambdaForm$MH/1569287617.exactInvoker->rgb(66,215,66)
java/lang/invoke/LambdaForm$MH/1631673542.guard->rgb(109,254,109)
java/lang/invoke/LambdaForm$MH/1638084335.guard->rgb(89,236,89)
java/lang/invoke/LambdaForm$MH/1828729508.guard->rgb(64,213,64)
java/lang/invoke/LambdaForm$MH/184172100.identity_I->rgb(68,216,68)
java/lang/invoke/LambdaForm$MH/1894805463.guard->rgb(50,200,50)
java/lang/invoke/LambdaForm$MH/1937617223.exactInvoker->rgb(54,203,54)
java/lang/invoke/LambdaForm$MH/1982623792.exactInvoker->rgb(51,201,51)
java/lang/invoke/LambdaForm$MH/216608367.guard->rgb(107,252,107)
java/lang/invoke/LambdaForm$MH/232256478.invokeExact_MT->rgb(79,227,79)
java/lang/invoke/LambdaForm$MH/537461174.exactInvoker->rgb(103,249,103)
java/lang/invoke/LambdaForm$MH/548910323.guard->rgb(58,207,58)
java/lang/invoke/LambdaForm$MH/649046753.guard->rgb(82,230,82)
java/lang/invoke/LambdaForm$MH/744772887.guard->rgb(89,236,89)
java/lang/invoke/LambdaForm$MH/806074481.invokeExact_MT->rgb(55,205,55)
java/lang/invoke/LambdaForm$MH/868693306.delegate->rgb(64,213,64)
java/lang/invoke/LambdaForm$MH/886589209.guard->rgb(60,209,60)
java/lang/invoke/LambdaForm$MH/995576798.guard->rgb(65,213,65)
java/lang/invoke/LambdaForm.compileToBytecode->rgb(56,205,56)
java/lang/invoke/LambdaForm.prepare->rgb(71,219,71)
java/lang/invoke/MethodHandle.customize->rgb(109,254,109)
java/lang/invoke/MethodHandle.invokeBasic->rgb(79,227,79)
java/lang/invoke/MethodHandle.updateForm->rgb(64,213,64)
java/lang/invoke/MethodHandleImpl.profileBoolean->rgb(72,221,72)
java/lang/invoke/MethodHandleNatives.setCallSiteTargetNormal->rgb(104,250,104)
java/lang/invoke/MutableCallSite.getTarget->rgb(94,240,94)
java/lang/invoke/MutableCallSite.setTarget->rgb(90,237,90)
java/lang/invoke/SwitchPoint.invalidateAll->rgb(83,230,83)
java/lang/ref/Reference$ReferenceHandler.run->rgb(98,244,98)
java/lang/ref/Reference.tryHandlePending->rgb(98,244,98)
java/lang/reflect/Array.newArray->rgb(105,250,105)
java/lang/reflect/Array.newInstance->rgb(69,217,69)
java/lang/reflect/Method.invoke->rgb(60,209,60)
java/net/SocketOutputStream.socketWrite->rgb(92,238,92)
java/net/SocketOutputStream.socketWrite0->rgb(102,248,102)
java/net/SocketOutputStream.write->rgb(101,246,101)
java/nio/channels/Channels$1.close->rgb(87,234,87)
java/nio/channels/Channels$1.write->rgb(55,205,55)
java/nio/channels/Channels.access$000->rgb(68,216,68)
java/nio/channels/Channels.writeFully->rgb(63,212,63)
java/nio/channels/Channels.writeFullyImpl->rgb(80,227,80)
java/nio/channels/spi/AbstractInterruptibleChannel.close->rgb(99,245,99)
java/nio/file/FileTreeWalker.getAttributes->rgb(61,210,61)
java/nio/file/FileTreeWalker.next->rgb(107,252,107)
java/nio/file/FileTreeWalker.visit->rgb(68,216,68)
java/nio/file/Files.newOutputStream->rgb(95,241,95)
java/nio/file/Files.readAttributes->rgb(54,203,54)
java/nio/file/Files.walkFileTree->rgb(68,216,68)
java/nio/file/Files.write->rgb(50,200,50)
java/nio/file/spi/FileSystemProvider.newOutputStream->rgb(79,226,79)
java/util/Arrays.sort->rgb(57,207,57)
java/util/TimSort.countRunAndMakeAscending->rgb(76,224,76)
java/util/TimSort.sort->rgb(51,201,51)
java/util/concurrent/Executors$RunnableAdapter.call->rgb(84,231,84)
java/util/concurrent/FutureTask.run->rgb(63,212,63)
java/util/concurrent/ThreadPoolExecutor$Worker.run->rgb(77,225,77)
java/util/concurrent/ThreadPoolExecutor.runWorker->rgb(58,207,58)
java/util/zip/InflaterInputStream.read->rgb(63,212,63)
java/util/zip/ZipFile$ZipFileInflaterInputStream.fill->rgb(101,246,101)
java/util/zip/ZipFile$ZipFileInputStream.read->rgb(62,211,62)
java/util/zip/ZipFile.access$1400->rgb(91,238,91)
java/util/zip/ZipFile.read->rgb(63,211,63)
jlong_disjoint_arraycopy->rgb(206,59,59)
jshort_disjoint_arraycopy->rgb(223,84,84)
org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call->rgb(106,252,106)
org/openjdk/jmh/runner/link/BinaryLinkClient$ForwardingPrintStream$1.write->rgb(90,237,90)
org/openjdk/jmh/runner/link/BinaryLinkClient.access$000->rgb(104,250,104)
org/openjdk/jmh/runner/link/BinaryLinkClient.pushFrame->rgb(91,238,91)
package$.Mode():10->rgb(241,110,110)
package$.byteswap32(int):23->rgb(247,118,118)
package$.max(int, int):192->rgb(235,102,102)
scala/Option$WithFilter.foreach->rgb(203,54,54)
scala/Tuple2$mcJJ$sp.<init>->rgb(248,120,120)
scala/collection/AbstractIterable.<init>->rgb(205,57,57)
scala/collection/AbstractIterable.foreach->rgb(201,51,51)
scala/collection/AbstractIterator.foreach->rgb(232,97,97)
scala/collection/AbstractIterator.toMap->rgb(238,106,106)
scala/collection/AbstractMap.getOrElse->rgb(216,73,73)
scala/collection/AbstractSeq.<init>->rgb(218,76,76)
scala/collection/AbstractSeq.sortWith->rgb(238,105,105)
scala/collection/AbstractSeq.sorted->rgb(212,67,67)
scala/collection/AbstractTraversable.$div$colon->rgb(232,96,96)
scala/collection/AbstractTraversable.<init>->rgb(240,108,108)
scala/collection/AbstractTraversable.filter->rgb(237,105,105)
scala/collection/AbstractTraversable.filterImpl->rgb(230,94,94)
scala/collection/AbstractTraversable.filterNot->rgb(201,51,51)
scala/collection/AbstractTraversable.foldLeft->rgb(241,110,110)
scala/collection/AbstractTraversable.map->rgb(243,113,113)
scala/collection/AbstractTraversable.nonEmpty->rgb(253,127,127)
scala/collection/AbstractTraversable.to->rgb(202,53,53)
scala/collection/AbstractTraversable.toList->rgb(207,61,61)
scala/collection/GenSetLike.apply->rgb(224,85,85)
scala/collection/GenSetLike.apply$->rgb(247,119,119)
scala/collection/IndexedSeqOptimized.exists->rgb(251,125,125)
scala/collection/IndexedSeqOptimized.exists$->rgb(243,113,113)
scala/collection/IndexedSeqOptimized.prefixLengthImpl->rgb(211,66,66)
scala/collection/IterableLike.foreach->rgb(210,65,65)
scala/collection/IterableLike.foreach$->rgb(254,129,129)
scala/collection/Iterator$$anon$11.hasNext->rgb(227,89,89)
scala/collection/Iterator$$anon$11.nextCur->rgb(227,90,90)
scala/collection/Iterator$$anon$12.hasNext->rgb(240,108,108)
scala/collection/Iterator.foreach->rgb(217,75,75)
scala/collection/Iterator.foreach$->rgb(220,79,79)
scala/collection/LinearSeqLike.corresponds->rgb(218,77,77)
scala/collection/LinearSeqLike.corresponds$->rgb(245,115,115)
scala/collection/LinearSeqOptimized.contains->rgb(253,128,128)
scala/collection/LinearSeqOptimized.contains$->rgb(229,93,93)
scala/collection/LinearSeqOptimized.foldLeft->rgb(231,95,95)
scala/collection/LinearSeqOptimized.foldLeft$->rgb(227,90,90)
scala/collection/MapLike.getOrElse->rgb(230,94,94)
scala/collection/MapLike.getOrElse$->rgb(252,126,126)
scala/collection/SeqLike.sortWith->rgb(243,113,113)
scala/collection/SeqLike.sortWith$->rgb(239,107,107)
scala/collection/SeqLike.sorted->rgb(213,70,70)
scala/collection/SeqLike.sorted$->rgb(252,125,125)
scala/collection/TraversableLike$$Lambda$110/1277277920.apply->rgb(246,117,117)
scala/collection/TraversableLike$$Lambda$110/834657955.apply->rgb(230,93,93)
scala/collection/TraversableLike$$Lambda$21/1886718997.apply->rgb(242,111,111)
scala/collection/TraversableLike$$Lambda$21/406170686.apply->rgb(230,94,94)
scala/collection/TraversableLike$$Lambda$773/1784690746.apply->rgb(207,60,60)
scala/collection/TraversableLike$$Lambda$773/193195095.apply->rgb(210,65,65)
scala/collection/TraversableLike$WithFilter$$Lambda$236/1764546156.apply->rgb(236,102,102)
scala/collection/TraversableLike$WithFilter$$Lambda$236/1834171090.apply->rgb(254,129,129)
scala/collection/TraversableLike$WithFilter$$Lambda$337/1793424171.apply->rgb(206,59,59)
scala/collection/TraversableLike$WithFilter$$Lambda$337/2089280186.apply->rgb(230,94,94)
scala/collection/TraversableLike$WithFilter.$anonfun$foreach$1->rgb(232,97,97)
scala/collection/TraversableLike$WithFilter.$anonfun$map$2->rgb(243,113,113)
scala/collection/TraversableLike$WithFilter.foreach->rgb(230,94,94)
scala/collection/TraversableLike$WithFilter.map->rgb(222,83,83)
scala/collection/TraversableLike.$anonfun$filterImpl$1->rgb(202,54,54)
scala/collection/TraversableLike.$anonfun$flatMap$1->rgb(222,82,82)
scala/collection/TraversableLike.$anonfun$map$1->rgb(217,74,74)
scala/collection/TraversableLike.filter->rgb(214,71,71)
scala/collection/TraversableLike.filter$->rgb(230,94,94)
scala/collection/TraversableLike.filterImpl->rgb(231,95,95)
scala/collection/TraversableLike.filterImpl$->rgb(204,56,56)
scala/collection/TraversableLike.filterNot->rgb(220,80,80)
scala/collection/TraversableLike.filterNot$->rgb(200,51,51)
scala/collection/TraversableLike.flatMap->rgb(224,86,86)
scala/collection/TraversableLike.flatMap$->rgb(222,82,82)
scala/collection/TraversableLike.map->rgb(224,85,85)
scala/collection/TraversableLike.map$->rgb(220,79,79)
scala/collection/TraversableLike.to->rgb(237,104,104)
scala/collection/TraversableLike.to$->rgb(251,125,125)
scala/collection/TraversableOnce$$Lambda$82/168105906.apply->rgb(226,89,89)
scala/collection/TraversableOnce$$Lambda$82/2052715316.apply->rgb(212,68,68)
scala/collection/TraversableOnce.$anonfun$foldLeft$1->rgb(242,111,111)
scala/collection/TraversableOnce.$anonfun$foldLeft$1$adapted->rgb(226,89,89)
scala/collection/TraversableOnce.$div$colon->rgb(208,62,62)
scala/collection/TraversableOnce.$div$colon$->rgb(249,121,121)
scala/collection/TraversableOnce.foldLeft->rgb(236,102,102)
scala/collection/TraversableOnce.foldLeft$->rgb(254,129,129)
scala/collection/TraversableOnce.nonEmpty->rgb(240,108,108)
scala/collection/TraversableOnce.nonEmpty$->rgb(230,94,94)
scala/collection/TraversableOnce.toList->rgb(240,108,108)
scala/collection/TraversableOnce.toList$->rgb(215,72,72)
scala/collection/TraversableOnce.toMap->rgb(246,117,117)
scala/collection/TraversableOnce.toMap$->rgb(203,54,54)
scala/collection/concurrent/INode.rec_lookup->rgb(242,112,112)
scala/collection/concurrent/TrieMap.get->rgb(251,125,125)
scala/collection/concurrent/TrieMap.lookuphc->rgb(223,83,83)
scala/collection/generic/Growable$$Lambda$12/1994322630.apply->rgb(243,113,113)
scala/collection/generic/Growable.$anonfun$$plus$plus$eq$1->rgb(218,76,76)
scala/collection/immutable/$colon$colon.<init>->rgb(252,126,126)
scala/collection/immutable/$colon$colon.head->rgb(221,81,81)
scala/collection/immutable/$colon$colon.isEmpty->rgb(204,56,56)
scala/collection/immutable/$colon$colon.tail->rgb(204,56,56)
scala/collection/immutable/List$.newBuilder->rgb(201,52,52)
scala/collection/immutable/List.$colon$colon->rgb(206,60,60)
scala/collection/immutable/List.<init>->rgb(248,119,119)
scala/collection/immutable/List.collect->rgb(204,56,56)
scala/collection/immutable/List.contains->rgb(229,93,93)
scala/collection/immutable/List.corresponds->rgb(245,116,116)
scala/collection/immutable/List.foldLeft->rgb(240,109,109)
scala/collection/immutable/List.foreach->rgb(214,71,71)
scala/collection/immutable/Nil$.equals->rgb(245,116,116)
scala/collection/immutable/Nil$.isEmpty->rgb(245,115,115)
scala/collection/mutable/AbstractSet.apply->rgb(218,76,76)
scala/collection/mutable/BitSet.$plus$eq->rgb(209,63,63)
scala/collection/mutable/FlatHashTable.containsElem->rgb(244,115,115)
scala/collection/mutable/FlatHashTable.containsElem$->rgb(213,69,69)
scala/collection/mutable/FlatHashTable.findElemImpl->rgb(252,127,127)
scala/collection/mutable/HashMap.elemEquals->rgb(203,55,55)
scala/collection/mutable/HashMap.elemHashCode->rgb(251,125,125)
scala/collection/mutable/HashMap.findEntry->rgb(235,102,102)
scala/collection/mutable/HashMap.get->rgb(209,64,64)
scala/collection/mutable/HashSet.contains->rgb(211,66,66)
scala/collection/mutable/HashSet.containsElem->rgb(240,109,109)
scala/collection/mutable/HashSet.foreach->rgb(237,104,104)
scala/collection/mutable/HashTable$HashUtils.elemHashCode->rgb(216,73,73)
scala/collection/mutable/HashTable$HashUtils.elemHashCode$->rgb(237,104,104)
scala/collection/mutable/HashTable.$init$->rgb(231,95,95)
scala/collection/mutable/HashTable.addEntry0->rgb(217,75,75)
scala/collection/mutable/HashTable.elemEquals->rgb(210,65,65)
scala/collection/mutable/HashTable.elemEquals$->rgb(219,78,78)
scala/collection/mutable/HashTable.findEntry->rgb(207,60,60)
scala/collection/mutable/HashTable.findEntry$->rgb(251,124,124)
scala/collection/mutable/HashTable.findEntry0->rgb(237,104,104)
scala/collection/mutable/HashTable.findOrAddEntry->rgb(251,124,124)
scala/collection/mutable/HashTable.findOrAddEntry$->rgb(237,104,104)
scala/collection/mutable/LinkedHashSet$.empty->rgb(218,77,77)
scala/collection/mutable/LinkedHashSet.<init>->rgb(218,77,77)
scala/collection/mutable/ListBuffer.$plus$eq->rgb(235,101,101)
scala/collection/mutable/WrappedArray.exists->rgb(220,80,80)
scala/math/Ordering$$anon$9.compare->rgb(252,126,126)
scala/reflect/api/Trees$Transformer.$anonfun$transformCaseDefs$1->rgb(200,50,50)
scala/reflect/api/Trees$Transformer.$anonfun$transformStats$1->rgb(217,75,75)
scala/reflect/api/Trees$Transformer.$anonfun$transformTrees$1->rgb(208,62,62)
scala/reflect/api/Trees$Transformer.atOwner->rgb(209,63,63)
scala/reflect/api/Trees$Transformer.transform->rgb(251,125,125)
scala/reflect/api/Trees$Transformer.transformCaseDefs->rgb(225,86,86)
scala/reflect/api/Trees$Transformer.transformStats->rgb(250,123,123)
scala/reflect/api/Trees$Transformer.transformTemplate->rgb(249,121,121)
scala/reflect/api/Trees$Transformer.transformTrees->rgb(246,117,117)
scala/reflect/api/Trees$Transformer.treeCopy->rgb(245,116,116)
scala/reflect/api/Trees$Traverser$$Lambda$321/1222520911.apply$mcV$sp->rgb(241,111,111)
scala/reflect/api/Trees$Traverser$$Lambda$321/295348781.apply$mcV$sp->rgb(206,59,59)
scala/reflect/api/Trees$Traverser.$anonfun$traverseStats$1->rgb(213,70,70)
scala/reflect/api/Trees$Traverser.$anonfun$traverseStats$2->rgb(254,129,129)
scala/reflect/api/Trees$Traverser.$anonfun$traverseTrees$1->rgb(214,70,70)
scala/reflect/api/Trees$Traverser.apply->rgb(224,86,86)
scala/reflect/api/Trees$Traverser.atOwner->rgb(250,123,123)
scala/reflect/api/Trees$Traverser.traverse->rgb(216,74,74)
scala/reflect/api/Trees$Traverser.traverseStats->rgb(201,51,51)
scala/reflect/api/Trees$Traverser.traverseTrees->rgb(247,119,119)
scala/reflect/internal/AnnotationInfos$Annotatable.dropOtherAnnotations->rgb(207,60,60)
scala/reflect/internal/AnnotationInfos$Annotatable.getAnnotation->rgb(201,52,52)
scala/reflect/internal/AnnotationInfos$Annotatable.getAnnotation$->rgb(241,109,109)
scala/reflect/internal/AnnotationInfos$Annotatable.hasAnnotation->rgb(210,65,65)
scala/reflect/internal/AnnotationInfos$Annotatable.hasAnnotation$->rgb(211,66,66)
scala/reflect/internal/AnnotationInfos$AnnotationInfo.matches->rgb(244,114,114)
scala/reflect/internal/BaseTypeSeqs$BaseTypeSeq.<init>->rgb(251,124,124)
scala/reflect/internal/BaseTypeSeqs$BaseTypeSeq.apply->rgb(235,102,102)
scala/reflect/internal/BaseTypeSeqs$BaseTypeSeq.computeLazyType$1->rgb(223,84,84)
scala/reflect/internal/BaseTypeSeqs$BaseTypeSeq.map->rgb(206,59,59)
scala/reflect/internal/BaseTypeSeqs.$anonfun$compoundBaseTypeSeq$1->rgb(201,52,52)
scala/reflect/internal/BaseTypeSeqs.$anonfun$compoundBaseTypeSeq$2->rgb(219,79,79)
scala/reflect/internal/BaseTypeSeqs.alreadyInMinTypes$1->rgb(241,109,109)
scala/reflect/internal/BaseTypeSeqs.compoundBaseTypeSeq->rgb(236,102,102)
scala/reflect/internal/BaseTypeSeqs.compoundBaseTypeSeq$->rgb(250,122,122)
scala/reflect/internal/BaseTypeSeqs.loop$1->rgb(220,80,80)
scala/reflect/internal/BaseTypeSeqs.newBaseTypeSeq->rgb(208,62,62)
scala/reflect/internal/BaseTypeSeqs.newBaseTypeSeq$->rgb(226,87,87)
scala/reflect/internal/Constants$Constant.tpe->rgb(243,112,112)
scala/reflect/internal/Definitions$DefinitionsClass$RunDefinitions.$anonfun$ApiUniverseReify$1->rgb(217,75,75)
scala/reflect/internal/Definitions$DefinitionsClass$RunDefinitions.ApiUniverseReify->rgb(242,112,112)
scala/reflect/internal/Definitions$DefinitionsClass$RunDefinitions.ApiUniverseReify$lzycompute->rgb(226,87,87)
scala/reflect/internal/Definitions$DefinitionsClass$RunDefinitions.Predef_classOf->rgb(244,114,114)
scala/reflect/internal/Definitions$DefinitionsClass$RunDefinitions.Predef_classOf$lzycompute->rgb(243,112,112)
scala/reflect/internal/Definitions$DefinitionsClass$RunDefinitions.ReflectRuntimeCurrentMirror->rgb(210,65,65)
scala/reflect/internal/Definitions$DefinitionsClass$RunDefinitions.ReflectRuntimeCurrentMirror$lzycompute->rgb(210,65,65)
scala/reflect/internal/Definitions$DefinitionsClass$RunDefinitions.isPolymorphicSignature->rgb(236,102,102)
scala/reflect/internal/Definitions$DefinitionsClass$RunDefinitions.isPredefClassOf->rgb(240,109,109)
scala/reflect/internal/Definitions$DefinitionsClass$RunDefinitions.materializeWeakTypeTag->rgb(244,115,115)
scala/reflect/internal/Definitions$DefinitionsClass$RunDefinitions.materializeWeakTypeTag$lzycompute->rgb(220,79,79)
scala/reflect/internal/Definitions$DefinitionsClass$VarArityClass.<init>->rgb(217,75,75)
scala/reflect/internal/Definitions$DefinitionsClass.$anonfun$RepeatedParamClass$1->rgb(224,85,85)
scala/reflect/internal/Definitions$DefinitionsClass.$anonfun$getMemberIfDefined$1->rgb(201,52,52)
scala/reflect/internal/Definitions$DefinitionsClass.AnnotationDefaultAttr->rgb(245,115,115)
scala/reflect/internal/Definitions$DefinitionsClass.AnnotationDefaultAttr$lzycompute->rgb(212,67,67)
scala/reflect/internal/Definitions$DefinitionsClass.AnyClass->rgb(235,101,101)
scala/reflect/internal/Definitions$DefinitionsClass.AnyClass$lzycompute->rgb(221,80,80)
scala/reflect/internal/Definitions$DefinitionsClass.ArrayClass->rgb(245,115,115)
scala/reflect/internal/Definitions$DefinitionsClass.ByNameParamClass->rgb(203,54,54)
scala/reflect/internal/Definitions$DefinitionsClass.EnumType->rgb(232,96,96)
scala/reflect/internal/Definitions$DefinitionsClass.FunctionClass->rgb(225,86,86)
scala/reflect/internal/Definitions$DefinitionsClass.ListModule->rgb(210,65,65)
scala/reflect/internal/Definitions$DefinitionsClass.ListModule$lzycompute->rgb(239,107,107)
scala/reflect/internal/Definitions$DefinitionsClass.MethodHandleClass->rgb(203,54,54)
scala/reflect/internal/Definitions$DefinitionsClass.MethodHandleClass$lzycompute->rgb(204,55,55)
scala/reflect/internal/Definitions$DefinitionsClass.ObjectClass->rgb(222,83,83)
scala/reflect/internal/Definitions$DefinitionsClass.ObjectClass$lzycompute->rgb(243,113,113)
scala/reflect/internal/Definitions$DefinitionsClass.ReflectApiPackage->rgb(202,53,53)
scala/reflect/internal/Definitions$DefinitionsClass.ReflectApiPackage$lzycompute->rgb(211,66,66)
scala/reflect/internal/Definitions$DefinitionsClass.ReflectRuntimeCurrentMirror->rgb(224,86,86)
scala/reflect/internal/Definitions$DefinitionsClass.ReflectRuntimePackage->rgb(206,59,59)
scala/reflect/internal/Definitions$DefinitionsClass.ReflectRuntimePackage$lzycompute->rgb(207,60,60)
scala/reflect/internal/Definitions$DefinitionsClass.RepeatedParamClass->rgb(251,125,125)
scala/reflect/internal/Definitions$DefinitionsClass.RepeatedParamClass$lzycompute->rgb(206,60,60)
scala/reflect/internal/Definitions$DefinitionsClass.SeqClass->rgb(242,111,111)
scala/reflect/internal/Definitions$DefinitionsClass.SeqClass$lzycompute->rgb(233,98,98)
scala/reflect/internal/Definitions$DefinitionsClass.SingletonClass->rgb(218,77,77)
scala/reflect/internal/Definitions$DefinitionsClass.String_$plus->rgb(254,129,129)
scala/reflect/internal/Definitions$DefinitionsClass.String_$plus$lzycompute->rgb(206,58,58)
scala/reflect/internal/Definitions$DefinitionsClass.TupleClass->rgb(247,118,118)
scala/reflect/internal/Definitions$DefinitionsClass.TupleClass$lzycompute->rgb(254,129,129)
scala/reflect/internal/Definitions$DefinitionsClass.UncheckedBoundsClass->rgb(242,111,111)
scala/reflect/internal/Definitions$DefinitionsClass.UncheckedBoundsClass$lzycompute->rgb(219,78,78)
scala/reflect/internal/Definitions$DefinitionsClass.dropByName->rgb(202,53,53)
scala/reflect/internal/Definitions$DefinitionsClass.getMember->rgb(209,64,64)
scala/reflect/internal/Definitions$DefinitionsClass.getMemberIfDefined->rgb(247,119,119)
scala/reflect/internal/Definitions$DefinitionsClass.getMemberMethod->rgb(215,72,72)
scala/reflect/internal/Definitions$DefinitionsClass.init->rgb(248,120,120)
scala/reflect/internal/Definitions$DefinitionsClass.isByNameParamType->rgb(207,60,60)
scala/reflect/internal/Definitions$DefinitionsClass.isRepeatedParamType->rgb(231,96,96)
scala/reflect/internal/Definitions$DefinitionsClass.isScalaRepeatedParamType->rgb(213,68,68)
scala/reflect/internal/Definitions$DefinitionsClass.isVolatile->rgb(206,59,59)
scala/reflect/internal/Definitions$DefinitionsClass.seqType->rgb(249,121,121)
scala/reflect/internal/Definitions$DefinitionsClass.symbolsNotPresentInBytecode->rgb(207,60,60)
scala/reflect/internal/Definitions$DefinitionsClass.symbolsNotPresentInBytecode$lzycompute->rgb(231,95,95)
scala/reflect/internal/Definitions$DefinitionsClass.syntheticCoreClasses->rgb(232,97,97)
scala/reflect/internal/Definitions$DefinitionsClass.syntheticCoreClasses$lzycompute->rgb(230,95,95)
scala/reflect/internal/Definitions$DefinitionsClass.syntheticCoreMethods->rgb(254,129,129)
scala/reflect/internal/Definitions$DefinitionsClass.syntheticCoreMethods$lzycompute->rgb(250,123,123)
scala/reflect/internal/Definitions$definitions$.<init>->rgb(242,111,111)
scala/reflect/internal/Definitions.scala$reflect$internal$Definitions$$enterNewClass->rgb(236,103,103)
scala/reflect/internal/Definitions.scala$reflect$internal$Definitions$$enterNewMethod->rgb(214,70,70)
scala/reflect/internal/HasFlags.isArtifact->rgb(200,50,50)
scala/reflect/internal/HasFlags.isArtifact$->rgb(228,91,91)
scala/reflect/internal/HasFlags.isPrivateLocal->rgb(228,91,91)
scala/reflect/internal/HasFlags.isPrivateLocal$->rgb(231,95,95)
scala/reflect/internal/HasFlags.isSpecialized$->rgb(208,62,62)
scala/reflect/internal/InfoTransformers$InfoTransformer.nextFrom->rgb(246,117,117)
scala/reflect/internal/Kinds.$anonfun$checkKindBounds0$10->rgb(209,63,63)
scala/reflect/internal/Kinds.checkKindBounds0->rgb(220,79,79)
scala/reflect/internal/Kinds.checkKindBounds0$->rgb(225,87,87)
scala/reflect/internal/Mirrors$Roots$EmptyPackageClass.<init>->rgb(202,53,53)
scala/reflect/internal/Mirrors$Roots$RootClass.<init>->rgb(242,112,112)
scala/reflect/internal/Mirrors$Roots.EmptyPackageClass->rgb(227,89,89)
scala/reflect/internal/Mirrors$Roots.EmptyPackageClass$lzycompute->rgb(244,114,114)
scala/reflect/internal/Mirrors$Roots.RootClass->rgb(251,124,124)
scala/reflect/internal/Mirrors$Roots.RootClass$lzycompute->rgb(210,65,65)
scala/reflect/internal/Mirrors$RootsBase.$anonfun$getClassIfDefined$1->rgb(248,120,120)
scala/reflect/internal/Mirrors$RootsBase.$anonfun$getPackageObjectIfDefined$1->rgb(233,99,99)
scala/reflect/internal/Mirrors$RootsBase.getClassByName->rgb(207,61,61)
scala/reflect/internal/Mirrors$RootsBase.getClassIfDefined->rgb(223,84,84)
scala/reflect/internal/Mirrors$RootsBase.getModuleByName->rgb(236,102,102)
scala/reflect/internal/Mirrors$RootsBase.getModuleOrClass->rgb(240,108,108)
scala/reflect/internal/Mirrors$RootsBase.getPackageObject->rgb(242,111,111)
scala/reflect/internal/Mirrors$RootsBase.getPackageObjectIfDefined->rgb(211,67,67)
scala/reflect/internal/Mirrors$RootsBase.getRequiredClass->rgb(247,118,118)
scala/reflect/internal/Mirrors$RootsBase.getRequiredModule->rgb(230,93,93)
scala/reflect/internal/Mirrors$RootsBase.init->rgb(219,78,78)
scala/reflect/internal/Mirrors$RootsBase.requiredClass->rgb(247,119,119)
scala/reflect/internal/Mirrors$RootsBase.requiredModule->rgb(212,67,67)
scala/reflect/internal/Names$Name.endsWith->rgb(202,53,53)
scala/reflect/internal/Names$TermName.body$2->rgb(224,85,85)
scala/reflect/internal/Names$TermName.toTypeName->rgb(249,122,122)
scala/reflect/internal/Names$TypeName.body$3->rgb(239,107,107)
scala/reflect/internal/Names$TypeName.toTermName->rgb(240,109,109)
scala/reflect/internal/Names.body$1->rgb(212,68,68)
scala/reflect/internal/Names.newTermName->rgb(251,125,125)
scala/reflect/internal/Names.newTermName$->rgb(242,112,112)
scala/reflect/internal/Phase.erasedTypes->rgb(210,65,65)
scala/reflect/internal/Positions$DefaultPosAssigner.traverse->rgb(245,115,115)
scala/reflect/internal/Positions.atPos->rgb(233,98,98)
scala/reflect/internal/Positions.atPos$->rgb(243,113,113)
scala/reflect/internal/Reporter.echo->rgb(251,124,124)
scala/reflect/internal/Reporting.inform->rgb(240,108,108)
scala/reflect/internal/Reporting.inform$->rgb(224,86,86)
scala/reflect/internal/Scopes$Scope.flatMap->rgb(202,53,53)
scala/reflect/internal/Scopes$Scope.foreach->rgb(209,63,63)
scala/reflect/internal/Scopes$Scope.lookup->rgb(201,52,52)
scala/reflect/internal/Scopes$Scope.lookupEntry->rgb(211,66,66)
scala/reflect/internal/Scopes$Scope.lookupNextEntry->rgb(224,85,85)
scala/reflect/internal/StdAttachments$Attachable.pos->rgb(214,71,71)
scala/reflect/internal/StdAttachments$Attachable.pos$->rgb(242,112,112)
scala/reflect/internal/SymbolPairs$Cursor.<init>->rgb(238,105,105)
scala/reflect/internal/SymbolPairs$Cursor.fillDecls$1->rgb(225,87,87)
scala/reflect/internal/SymbolPairs$Cursor.init->rgb(218,77,77)
scala/reflect/internal/SymbolPairs$Cursor.next->rgb(208,62,62)
scala/reflect/internal/SymbolTable$perRunCaches$$anon$1.apply->rgb(221,81,81)
scala/reflect/internal/SymbolTable.FlagOps->rgb(220,80,80)
scala/reflect/internal/SymbolTable.NoSymbol->rgb(208,62,62)
scala/reflect/internal/SymbolTable.addSerializable->rgb(238,105,105)
scala/reflect/internal/SymbolTable.atPos->rgb(213,69,69)
scala/reflect/internal/SymbolTable.checkKindBounds0->rgb(226,88,88)
scala/reflect/internal/SymbolTable.cloneSymbols->rgb(245,116,116)
scala/reflect/internal/SymbolTable.cloneSymbolsAndModify->rgb(238,106,106)
scala/reflect/internal/SymbolTable.compoundBaseTypeSeq->rgb(201,52,52)
scala/reflect/internal/SymbolTable.computeBaseClasses->rgb(248,120,120)
scala/reflect/internal/SymbolTable.copyDefDef->rgb(247,118,118)
scala/reflect/internal/SymbolTable.copyDefDef$default$5->rgb(223,84,84)
scala/reflect/internal/SymbolTable.copyDefDef$default$7->rgb(208,62,62)
scala/reflect/internal/SymbolTable.copyTypeRef->rgb(247,118,118)
scala/reflect/internal/SymbolTable.createFromClonedSymbols->rgb(254,129,129)
scala/reflect/internal/SymbolTable.defineBaseClassesOfCompoundType->rgb(204,57,57)
scala/reflect/internal/SymbolTable.defineBaseTypeSeqOfCompoundType->rgb(214,71,71)
scala/reflect/internal/SymbolTable.defineBaseTypeSeqOfTypeRef->rgb(205,58,58)
scala/reflect/internal/SymbolTable.defineUnderlyingOfSingleType->rgb(244,115,115)
scala/reflect/internal/SymbolTable.definitions->rgb(210,64,64)
scala/reflect/internal/SymbolTable.definitions$lzycompute$1->rgb(224,85,85)
scala/reflect/internal/SymbolTable.deriveSymbols->rgb(253,128,128)
scala/reflect/internal/SymbolTable.deriveTemplate->rgb(251,125,125)
scala/reflect/internal/SymbolTable.deriveValDef->rgb(219,79,79)
scala/reflect/internal/SymbolTable.elementExtract->rgb(210,65,65)
scala/reflect/internal/SymbolTable.glb->rgb(228,91,91)
scala/reflect/internal/SymbolTable.inform->rgb(242,112,112)
scala/reflect/internal/SymbolTable.isRawIfWithoutArgs->rgb(201,52,52)
scala/reflect/internal/SymbolTable.isRawType->rgb(246,118,118)
scala/reflect/internal/SymbolTable.isSameType->rgb(244,114,114)
scala/reflect/internal/SymbolTable.isSameType2->rgb(204,57,57)
scala/reflect/internal/SymbolTable.isSameTypes->rgb(219,78,78)
scala/reflect/internal/SymbolTable.isSingleType->rgb(236,102,102)
scala/reflect/internal/SymbolTable.isSubArgs->rgb(201,51,51)
scala/reflect/internal/SymbolTable.isSubType->rgb(216,74,74)
scala/reflect/internal/SymbolTable.isValidForBaseClasses->rgb(225,87,87)
scala/reflect/internal/SymbolTable.isWeakSubType->rgb(234,99,99)
scala/reflect/internal/SymbolTable.isWithinBounds->rgb(252,126,126)
scala/reflect/internal/SymbolTable.itransform->rgb(251,125,125)
scala/reflect/internal/SymbolTable.itraverse->rgb(203,55,55)
scala/reflect/internal/SymbolTable.lub->rgb(205,57,57)
scala/reflect/internal/SymbolTable.lubDepth->rgb(245,115,115)
scala/reflect/internal/SymbolTable.lubList->rgb(200,50,50)
scala/reflect/internal/SymbolTable.matchesType->rgb(250,123,123)
scala/reflect/internal/SymbolTable.matchingParams->rgb(206,59,59)
scala/reflect/internal/SymbolTable.maxbaseTypeSeqDepth->rgb(237,104,104)
scala/reflect/internal/SymbolTable.mergePrefixAndArgs->rgb(241,109,109)
scala/reflect/internal/SymbolTable.newBaseTypeSeq->rgb(209,64,64)
scala/reflect/internal/SymbolTable.newTermName->rgb(247,119,119)
scala/reflect/internal/SymbolTable.nme->rgb(224,85,85)
scala/reflect/internal/SymbolTable.normalizePlus->rgb(214,71,71)
scala/reflect/internal/SymbolTable.openPackageModule->rgb(234,100,100)
scala/reflect/internal/SymbolTable.phase->rgb(240,109,109)
scala/reflect/internal/SymbolTable.picklerTag->rgb(234,100,100)
scala/reflect/internal/SymbolTable.pushPhase->rgb(202,54,54)
scala/reflect/internal/SymbolTable.singleType->rgb(247,119,119)
scala/reflect/internal/SymbolTable.solve->rgb(248,120,120)
scala/reflect/internal/SymbolTable.typeRef->rgb(240,108,108)
scala/reflect/internal/SymbolTable.unique->rgb(238,106,106)
scala/reflect/internal/SymbolTable.varianceInType->rgb(215,72,72)
scala/reflect/internal/SymbolTable.wrappingIntoTerm->rgb(234,100,100)
scala/reflect/internal/Symbols$$Lambda$428/928076409.apply->rgb(223,84,84)
scala/reflect/internal/Symbols$ClassSymbol$$Lambda$144/1361238833.apply->rgb(238,106,106)
scala/reflect/internal/Symbols$ClassSymbol.$anonfun$companionModule0$1->rgb(238,105,105)
scala/reflect/internal/Symbols$ClassSymbol.$anonfun$companionModule0$1$adapted->rgb(208,62,62)
scala/reflect/internal/Symbols$ClassSymbol.companionModule->rgb(207,60,60)
scala/reflect/internal/Symbols$ClassSymbol.companionModule0->rgb(236,102,102)
scala/reflect/internal/Symbols$ClassSymbol.isClass->rgb(250,123,123)
scala/reflect/internal/Symbols$ClassSymbol.isPackageClass->rgb(242,112,112)
scala/reflect/internal/Symbols$ClassSymbol.isTrait->rgb(228,90,90)
scala/reflect/internal/Symbols$ClassSymbol.name->rgb(208,62,62)
scala/reflect/internal/Symbols$ClassSymbol.owner->rgb(205,58,58)
scala/reflect/internal/Symbols$ClassSymbol.thisType->rgb(219,78,78)
scala/reflect/internal/Symbols$MethodSymbol.isLabel->rgb(204,56,56)
scala/reflect/internal/Symbols$MethodSymbol.isSourceMethod->rgb(232,97,97)
scala/reflect/internal/Symbols$MethodSymbol.typeAsMemberOf->rgb(200,50,50)
scala/reflect/internal/Symbols$ModuleClassSymbol.implicitMembers->rgb(236,103,103)
scala/reflect/internal/Symbols$ModuleSymbol.name->rgb(206,59,59)
scala/reflect/internal/Symbols$ModuleSymbol.owner->rgb(230,94,94)
scala/reflect/internal/Symbols$PackageClassSymbol.isPackageClass->rgb(250,124,124)
scala/reflect/internal/Symbols$Symbol$$Lambda$462/1149311307.apply->rgb(210,65,65)
scala/reflect/internal/Symbols$Symbol$$Lambda$462/988344490.apply->rgb(235,101,101)
scala/reflect/internal/Symbols$Symbol.$anonfun$allOverriddenSymbols$1->rgb(246,117,117)
scala/reflect/internal/Symbols$Symbol.$anonfun$cookJavaRawInfo$2->rgb(243,113,113)
scala/reflect/internal/Symbols$Symbol.$anonfun$isOverridingSymbol$1->rgb(252,126,126)
scala/reflect/internal/Symbols$Symbol.$anonfun$typeParams$1->rgb(218,76,76)
scala/reflect/internal/Symbols$Symbol.adaptInfos->rgb(240,109,109)
scala/reflect/internal/Symbols$Symbol.allOverriddenSymbols->rgb(221,81,81)
scala/reflect/internal/Symbols$Symbol.ancestors->rgb(247,118,118)
scala/reflect/internal/Symbols$Symbol.canMatchInheritedSymbols->rgb(227,90,90)
scala/reflect/internal/Symbols$Symbol.cloneSymbol->rgb(234,100,100)
scala/reflect/internal/Symbols$Symbol.companionClass->rgb(228,91,91)
scala/reflect/internal/Symbols$Symbol.completeTypeParams$1->rgb(205,57,57)
scala/reflect/internal/Symbols$Symbol.cookJavaRawInfo->rgb(252,125,125)
scala/reflect/internal/Symbols$Symbol.effectiveOwner->rgb(216,74,74)
scala/reflect/internal/Symbols$Symbol.filter->rgb(239,106,106)
scala/reflect/internal/Symbols$Symbol.flags->rgb(232,96,96)
scala/reflect/internal/Symbols$Symbol.flatOwnerInfo->rgb(249,121,121)
scala/reflect/internal/Symbols$Symbol.getAnnotation->rgb(204,57,57)
scala/reflect/internal/Symbols$Symbol.hasAllFlags->rgb(252,125,125)
scala/reflect/internal/Symbols$Symbol.hasAnnotation->rgb(222,82,82)
scala/reflect/internal/Symbols$Symbol.hasDeprecatedInheritanceAnnotation->rgb(205,57,57)
scala/reflect/internal/Symbols$Symbol.hasFlag->rgb(244,114,114)
scala/reflect/internal/Symbols$Symbol.info->rgb(204,56,56)
scala/reflect/internal/Symbols$Symbol.initialize->rgb(221,80,80)
scala/reflect/internal/Symbols$Symbol.isArtifact->rgb(213,69,69)
scala/reflect/internal/Symbols$Symbol.isCoDefinedWith->rgb(237,104,104)
scala/reflect/internal/Symbols$Symbol.isConstant->rgb(218,77,77)
scala/reflect/internal/Symbols$Symbol.isDeferred->rgb(205,58,58)
scala/reflect/internal/Symbols$Symbol.isDeprecated->rgb(244,115,115)
scala/reflect/internal/Symbols$Symbol.isDerivedValueClass->rgb(253,127,127)
scala/reflect/internal/Symbols$Symbol.isEffectivelyFinal->rgb(217,75,75)
scala/reflect/internal/Symbols$Symbol.isEffectivelyFinalOrNotOverridden->rgb(217,76,76)
scala/reflect/internal/Symbols$Symbol.isErroneous->rgb(227,89,89)
scala/reflect/internal/Symbols$Symbol.isError->rgb(222,82,82)
scala/reflect/internal/Symbols$Symbol.isMethodWithExtension->rgb(205,57,57)
scala/reflect/internal/Symbols$Symbol.isModuleNotMethod->rgb(204,55,55)
scala/reflect/internal/Symbols$Symbol.isOverridableMember->rgb(241,110,110)
scala/reflect/internal/Symbols$Symbol.isOverridingSymbol->rgb(254,129,129)
scala/reflect/internal/Symbols$Symbol.isOverridingSymbol$lzycompute->rgb(208,61,61)
scala/reflect/internal/Symbols$Symbol.isPossibleInRefinement->rgb(234,100,100)
scala/reflect/internal/Symbols$Symbol.isPrivateLocal->rgb(204,56,56)
scala/reflect/internal/Symbols$Symbol.isRefinementClass->rgb(251,124,124)
scala/reflect/internal/Symbols$Symbol.isSpecialized->rgb(248,119,119)
scala/reflect/internal/Symbols$Symbol.isStable->rgb(201,52,52)
scala/reflect/internal/Symbols$Symbol.isSubClass->rgb(247,119,119)
scala/reflect/internal/Symbols$Symbol.isTopLevel->rgb(239,107,107)
scala/reflect/internal/Symbols$Symbol.isWeakSubClass->rgb(201,52,52)
scala/reflect/internal/Symbols$Symbol.matchingInheritedSymbolIn->rgb(240,109,109)
scala/reflect/internal/Symbols$Symbol.matchingSymbol->rgb(222,82,82)
scala/reflect/internal/Symbols$Symbol.matchingSymbolInternal->rgb(205,58,58)
scala/reflect/internal/Symbols$Symbol.mixinClasses->rgb(248,121,121)
scala/reflect/internal/Symbols$Symbol.modifyInfo->rgb(210,65,65)
scala/reflect/internal/Symbols$Symbol.needsFlatClasses->rgb(206,58,58)
scala/reflect/internal/Symbols$Symbol.nextOverriddenSymbol->rgb(226,89,89)
scala/reflect/internal/Symbols$Symbol.overriddenSymbol->rgb(231,95,95)
scala/reflect/internal/Symbols$Symbol.owner->rgb(236,103,103)
scala/reflect/internal/Symbols$Symbol.packageObject->rgb(253,127,127)
scala/reflect/internal/Symbols$Symbol.pos->rgb(218,77,77)
scala/reflect/internal/Symbols$Symbol.qualifies$1->rgb(206,58,58)
scala/reflect/internal/Symbols$Symbol.rawInfo->rgb(209,63,63)
scala/reflect/internal/Symbols$Symbol.scala$reflect$internal$Symbols$Symbol$$$outer->rgb(213,69,69)
scala/reflect/internal/Symbols$Symbol.setInfoAndEnter->rgb(248,121,121)
scala/reflect/internal/Symbols$Symbol.sourceFile->rgb(224,85,85)
scala/reflect/internal/Symbols$Symbol.suchThat->rgb(200,50,50)
scala/reflect/internal/Symbols$Symbol.tpe->rgb(219,78,78)
scala/reflect/internal/Symbols$Symbol.tpeHK->rgb(206,60,60)
scala/reflect/internal/Symbols$Symbol.tpe_$times->rgb(222,82,82)
scala/reflect/internal/Symbols$Symbol.typeParams->rgb(241,109,109)
scala/reflect/internal/Symbols$Symbol.variance->rgb(214,70,70)
scala/reflect/internal/Symbols$TermSymbol.cloneSymbolImpl->rgb(231,95,95)
scala/reflect/internal/Symbols$TermSymbol.isCapturedVariable->rgb(204,55,55)
scala/reflect/internal/Symbols$TermSymbol.isClassConstructor->rgb(209,63,63)
scala/reflect/internal/Symbols$TermSymbol.isLocalDummy->rgb(247,119,119)
scala/reflect/internal/Symbols$TermSymbol.isMethod->rgb(211,67,67)
scala/reflect/internal/Symbols$TermSymbol.isOverloaded->rgb(214,71,71)
scala/reflect/internal/Symbols$TermSymbol.isTerm->rgb(252,125,125)
scala/reflect/internal/Symbols$TermSymbol.isTermMacro->rgb(201,51,51)
scala/reflect/internal/Symbols$TermSymbol.isValue->rgb(225,86,86)
scala/reflect/internal/Symbols$TermSymbol.name->rgb(252,125,125)
scala/reflect/internal/Symbols$TypeSymbol.isCovariant->rgb(224,86,86)
scala/reflect/internal/Symbols$TypeSymbol.isNonBottomSubClass->rgb(229,92,92)
scala/reflect/internal/Symbols$TypeSymbol.maybeUpdateTypeCache->rgb(245,116,116)
scala/reflect/internal/Symbols$TypeSymbol.newPrefix->rgb(238,106,106)
scala/reflect/internal/Symbols$TypeSymbol.newTypeRef->rgb(242,111,111)
scala/reflect/internal/Symbols$TypeSymbol.tpeHK->rgb(207,60,60)
scala/reflect/internal/Symbols$TypeSymbol.tpe_$times->rgb(251,124,124)
scala/reflect/internal/Symbols$TypeSymbol.typeConstructor->rgb(250,123,123)
scala/reflect/internal/Symbols$TypeSymbol.updateTypeCache->rgb(209,64,64)
scala/reflect/internal/Symbols.$anonfun$cloneSymbols$1->rgb(210,64,64)
scala/reflect/internal/Symbols.FlagOps->rgb(235,100,100)
scala/reflect/internal/Symbols.FlagOps$->rgb(239,107,107)
scala/reflect/internal/Symbols.cloneSymbols->rgb(236,102,102)
scala/reflect/internal/Symbols.cloneSymbols$->rgb(235,101,101)
scala/reflect/internal/Symbols.cloneSymbolsAndModify->rgb(220,79,79)
scala/reflect/internal/Symbols.cloneSymbolsAndModify$->rgb(217,75,75)
scala/reflect/internal/Symbols.createFromClonedSymbols->rgb(206,58,58)
scala/reflect/internal/Symbols.createFromClonedSymbols$->rgb(213,69,69)
scala/reflect/internal/Symbols.deriveSymbols->rgb(244,115,115)
scala/reflect/internal/Symbols.deriveSymbols$->rgb(242,111,111)
scala/reflect/internal/TreeGen.mkAttributedRef->rgb(205,57,57)
scala/reflect/internal/TreeGen.mkAttributedSelect->rgb(232,96,96)
scala/reflect/internal/TreeGen.mkAttributedStableRef->rgb(249,122,122)
scala/reflect/internal/TreeGen.mkTupleType->rgb(244,114,114)
scala/reflect/internal/TreeGen.scalaFunctionConstr->rgb(254,128,128)
scala/reflect/internal/TreeGen.stabilize->rgb(218,77,77)
scala/reflect/internal/TreeGen.stableTypeFor->rgb(206,59,59)
scala/reflect/internal/TreeInfo$Applied.callee->rgb(224,86,86)
scala/reflect/internal/TreeInfo$Applied.core->rgb(239,107,107)
scala/reflect/internal/TreeInfo$Applied.loop$1->rgb(237,105,105)
scala/reflect/internal/TreeInfo.admitsTypeSelection->rgb(206,59,59)
scala/reflect/internal/TreeInfo.isExprSafeToInline->rgb(247,119,119)
scala/reflect/internal/TreeInfo.isMacroApplication->rgb(228,91,91)
scala/reflect/internal/TreeInfo.isPath->rgb(230,95,95)
scala/reflect/internal/TreeInfo.isSelfConstrCall->rgb(251,125,125)
scala/reflect/internal/TreeInfo.isSelfOrSuperConstrCall->rgb(231,95,95)
scala/reflect/internal/TreeInfo.isStableIdent->rgb(246,117,117)
scala/reflect/internal/TreeInfo.isStableIdentifier->rgb(223,83,83)
scala/reflect/internal/TreeInfo.isStableMemberOf->rgb(231,95,95)
scala/reflect/internal/TreeInfo.symOk->rgb(253,128,128)
scala/reflect/internal/Trees$$Lambda$304/36689000.apply$mcV$sp->rgb(250,123,123)
scala/reflect/internal/Trees$$Lambda$304/986016091.apply$mcV$sp->rgb(240,109,109)
scala/reflect/internal/Trees$$Lambda$363/1003490182.apply->rgb(226,88,88)
scala/reflect/internal/Trees$$Lambda$363/1136106067.apply->rgb(208,61,61)
scala/reflect/internal/Trees$$Lambda$364/1342007681.apply->rgb(250,122,122)
scala/reflect/internal/Trees$$Lambda$364/857123685.apply->rgb(204,56,56)
scala/reflect/internal/Trees$$Lambda$366/1157690769.apply->rgb(237,104,104)
scala/reflect/internal/Trees$$Lambda$366/497790562.apply->rgb(200,50,50)
scala/reflect/internal/Trees$$Lambda$764/1050081707.apply->rgb(228,91,91)
scala/reflect/internal/Trees$$Lambda$764/577616265.apply->rgb(231,95,95)
scala/reflect/internal/Trees$$Lambda$891/1406958054.apply->rgb(204,56,56)
scala/reflect/internal/Trees$$Lambda$891/322542331.apply->rgb(211,66,66)
scala/reflect/internal/Trees$$Lambda$892/1900899817.apply->rgb(245,115,115)
scala/reflect/internal/Trees$$Lambda$892/2086493273.apply->rgb(225,86,86)
scala/reflect/internal/Trees$Apply.symbol->rgb(243,113,113)
scala/reflect/internal/Trees$LazyTreeCopier.Apply->rgb(243,113,113)
scala/reflect/internal/Trees$LazyTreeCopier.DefDef->rgb(201,52,52)
scala/reflect/internal/Trees$LazyTreeCopier.ValDef->rgb(249,122,122)
scala/reflect/internal/Trees$Modifiers.equals->rgb(240,109,109)
scala/reflect/internal/Trees$StrictTreeCopier.Apply->rgb(220,80,80)
scala/reflect/internal/Trees$SymTree.<init>->rgb(207,61,61)
scala/reflect/internal/Trees$SymTree.symbol->rgb(237,104,104)
scala/reflect/internal/Trees$Tree.canHaveAttrs->rgb(247,119,119)
scala/reflect/internal/Trees$Tree.copyAttrs->rgb(253,128,128)
scala/reflect/internal/Trees$Tree.hashCode->rgb(239,107,107)
scala/reflect/internal/Trees$Tree.isType->rgb(228,90,90)
scala/reflect/internal/Trees$Tree.pos->rgb(226,89,89)
scala/reflect/internal/Trees$Tree.setType->rgb(249,121,121)
scala/reflect/internal/Trees$TreeContextApiImpl.isErrorTyped->rgb(219,79,79)
scala/reflect/internal/Trees$TreeContextApiImpl.modifyType->rgb(213,69,69)
scala/reflect/internal/Trees$TypeMapTreeSubstituter.traverse->rgb(230,95,95)
scala/reflect/internal/Trees$UnderConstructionTransformer.transform->rgb(207,61,61)
scala/reflect/internal/Trees$UnderConstructionTransformer.transform$->rgb(239,106,106)
scala/reflect/internal/Trees.$anonfun$itransform$1->rgb(208,61,61)
scala/reflect/internal/Trees.$anonfun$itransform$2->rgb(206,59,59)
scala/reflect/internal/Trees.$anonfun$itransform$3->rgb(204,56,56)
scala/reflect/internal/Trees.$anonfun$itransform$4->rgb(204,56,56)
scala/reflect/internal/Trees.$anonfun$itransform$5->rgb(214,71,71)
scala/reflect/internal/Trees.$anonfun$itransform$7->rgb(235,101,101)
scala/reflect/internal/Trees.$anonfun$itraverse$1->rgb(215,72,72)
scala/reflect/internal/Trees.deriveTemplate->rgb(252,125,125)
scala/reflect/internal/Trees.deriveTemplate$->rgb(238,105,105)
scala/reflect/internal/Trees.deriveValDef->rgb(207,60,60)
scala/reflect/internal/Trees.deriveValDef$->rgb(230,93,93)
scala/reflect/internal/Trees.itransform->rgb(240,108,108)
scala/reflect/internal/Trees.itransform$->rgb(228,91,91)
scala/reflect/internal/Trees.itraverse->rgb(241,110,110)
scala/reflect/internal/Trees.itraverse$->rgb(246,117,117)
scala/reflect/internal/Trees.traverseComponents$1->rgb(218,76,76)
scala/reflect/internal/Trees.traverseMemberDef$1->rgb(242,111,111)
scala/reflect/internal/Trees.wrappingIntoTerm->rgb(245,115,115)
scala/reflect/internal/Trees.wrappingIntoTerm$->rgb(234,99,99)
scala/reflect/internal/Types$$Lambda$101/1129417439.apply->rgb(213,69,69)
scala/reflect/internal/Types$$Lambda$101/1301723751.apply->rgb(248,120,120)
scala/reflect/internal/Types$$Lambda$142/1921678658.apply->rgb(210,64,64)
scala/reflect/internal/Types$$Lambda$142/587238389.apply->rgb(230,94,94)
scala/reflect/internal/Types$$Lambda$143/1478507028.apply->rgb(218,76,76)
scala/reflect/internal/Types$$Lambda$143/2135426872.apply->rgb(206,59,59)
scala/reflect/internal/Types$$Lambda$518/4839247.apply->rgb(223,83,83)
scala/reflect/internal/Types$$Lambda$518/8657256.apply->rgb(249,121,121)
scala/reflect/internal/Types$$Lambda$99/508457961.apply->rgb(246,117,117)
scala/reflect/internal/Types$$Lambda$99/651104019.apply->rgb(224,85,85)
scala/reflect/internal/Types$AbstractNoArgsTypeRef.<init>->rgb(214,71,71)
scala/reflect/internal/Types$AliasArgsTypeRef.baseClasses->rgb(230,94,94)
scala/reflect/internal/Types$AliasArgsTypeRef.normalizeImpl->rgb(239,107,107)
scala/reflect/internal/Types$AliasArgsTypeRef.typeSymbol->rgb(241,110,110)
scala/reflect/internal/Types$AliasNoArgsTypeRef.typeSymbol->rgb(231,95,95)
scala/reflect/internal/Types$AliasTypeRef.baseClasses->rgb(233,98,98)
scala/reflect/internal/Types$AliasTypeRef.baseClasses$->rgb(209,63,63)
scala/reflect/internal/Types$AliasTypeRef.normalizeImpl->rgb(221,81,81)
scala/reflect/internal/Types$AliasTypeRef.normalizeImpl$->rgb(229,92,92)
scala/reflect/internal/Types$AliasTypeRef.typeSymbol->rgb(232,97,97)
scala/reflect/internal/Types$AliasTypeRef.typeSymbol$->rgb(212,67,67)
scala/reflect/internal/Types$AnnotatedType.withoutAnnotations->rgb(206,59,59)
scala/reflect/internal/Types$ArgsTypeRef.<init>->rgb(247,118,118)
scala/reflect/internal/Types$ClassArgsTypeRef.<init>->rgb(248,120,120)
scala/reflect/internal/Types$CompoundType.baseClasses->rgb(239,107,107)
scala/reflect/internal/Types$CompoundType.baseType->rgb(247,119,119)
scala/reflect/internal/Types$CompoundType.baseTypeSeq->rgb(239,107,107)
scala/reflect/internal/Types$CompoundType.memo->rgb(234,100,100)
scala/reflect/internal/Types$ConstantType$.apply->rgb(215,72,72)
scala/reflect/internal/Types$ConstantType.<init>->rgb(222,82,82)
scala/reflect/internal/Types$ConstantType.underlying->rgb(208,62,62)
scala/reflect/internal/Types$ExistentialType.baseType->rgb(205,58,58)
scala/reflect/internal/Types$ExistentialType.withTypeVars->rgb(212,68,68)
scala/reflect/internal/Types$MethodType.areTrivialParams->rgb(224,85,85)
scala/reflect/internal/Types$MethodType.isImplicit->rgb(246,117,117)
scala/reflect/internal/Types$MethodType.isTrivial->rgb(234,100,100)
scala/reflect/internal/Types$MethodType.resultType->rgb(210,65,65)
scala/reflect/internal/Types$NoArgsTypeRef.<init>->rgb(215,73,73)
scala/reflect/internal/Types$NoArgsTypeRef.isHigherKinded->rgb(226,88,88)
scala/reflect/internal/Types$NoArgsTypeRef.normalizeImpl->rgb(254,128,128)
scala/reflect/internal/Types$NoArgsTypeRef.typeParams->rgb(201,52,52)
scala/reflect/internal/Types$NullaryMethodType.typeSymbol->rgb(223,84,84)
scala/reflect/internal/Types$PolyType.baseClasses->rgb(225,86,86)
scala/reflect/internal/Types$PolyType.baseType->rgb(224,86,86)
scala/reflect/internal/Types$PolyType.baseTypeSeq->rgb(238,106,106)
scala/reflect/internal/Types$SimpleTypeProxy.baseClasses->rgb(239,107,107)
scala/reflect/internal/Types$SimpleTypeProxy.baseClasses$->rgb(252,126,126)
scala/reflect/internal/Types$SimpleTypeProxy.baseType->rgb(252,126,126)
scala/reflect/internal/Types$SimpleTypeProxy.baseType$->rgb(206,60,60)
scala/reflect/internal/Types$SimpleTypeProxy.typeSymbol->rgb(209,63,63)
scala/reflect/internal/Types$SimpleTypeProxy.typeSymbol$->rgb(203,54,54)
scala/reflect/internal/Types$SimpleTypeProxy.typeSymbolDirect->rgb(211,66,66)
scala/reflect/internal/Types$SimpleTypeProxy.typeSymbolDirect$->rgb(241,110,110)
scala/reflect/internal/Types$SingleType.underlying->rgb(235,102,102)
scala/reflect/internal/Types$SingletonType.<init>->rgb(241,110,110)
scala/reflect/internal/Types$SingletonType.baseClasses->rgb(242,111,111)
scala/reflect/internal/Types$SingletonType.baseType->rgb(209,63,63)
scala/reflect/internal/Types$SingletonType.typeSymbol->rgb(204,57,57)
scala/reflect/internal/Types$SingletonType.typeSymbolDirect->rgb(250,124,124)
scala/reflect/internal/Types$SubType.<init>->rgb(204,56,56)
scala/reflect/internal/Types$SubType.baseType->rgb(212,68,68)
scala/reflect/internal/Types$ThisType$.apply->rgb(204,56,56)
scala/reflect/internal/Types$ThisType$.scala$reflect$internal$Types$ThisType$$$outer->rgb(244,114,114)
scala/reflect/internal/Types$ThisType.<init>->rgb(252,126,126)
scala/reflect/internal/Types$ThisType.equals->rgb(203,55,55)
scala/reflect/internal/Types$Type.$anonfun$asSeenFrom$1->rgb(206,58,58)
scala/reflect/internal/Types$Type.$eq$colon$eq->rgb(228,91,91)
scala/reflect/internal/Types$Type.$less$colon$less->rgb(211,66,66)
scala/reflect/internal/Types$Type.asSeenFrom->rgb(220,80,80)
scala/reflect/internal/Types$Type.baseTypeIndex->rgb(239,107,107)
scala/reflect/internal/Types$Type.computeMemberType->rgb(237,104,104)
scala/reflect/internal/Types$Type.contains->rgb(248,120,120)
scala/reflect/internal/Types$Type.dealiasWiden->rgb(244,114,114)
scala/reflect/internal/Types$Type.decl->rgb(227,90,90)
scala/reflect/internal/Types$Type.findDecl->rgb(219,78,78)
scala/reflect/internal/Types$Type.findMember->rgb(250,124,124)
scala/reflect/internal/Types$Type.findMemberInternal$1->rgb(249,121,121)
scala/reflect/internal/Types$Type.findMembers->rgb(238,105,105)
scala/reflect/internal/Types$Type.findMembersInternal$1->rgb(234,100,100)
scala/reflect/internal/Types$Type.foreach->rgb(230,94,94)
scala/reflect/internal/Types$Type.implicitMembers->rgb(216,73,73)
scala/reflect/internal/Types$Type.instantiateTypeParams->rgb(217,75,75)
scala/reflect/internal/Types$Type.isErroneous->rgb(201,52,52)
scala/reflect/internal/Types$Type.isError->rgb(246,117,117)
scala/reflect/internal/Types$Type.matches->rgb(200,51,51)
scala/reflect/internal/Types$Type.member->rgb(206,58,58)
scala/reflect/internal/Types$Type.memberBasedOnName->rgb(216,74,74)
scala/reflect/internal/Types$Type.memberInfo->rgb(234,100,100)
scala/reflect/internal/Types$Type.memberType->rgb(217,74,74)
scala/reflect/internal/Types$Type.membersBasedOnFlags->rgb(238,106,106)
scala/reflect/internal/Types$Type.nonLocalMember->rgb(218,77,77)
scala/reflect/internal/Types$Type.nonPrivateMember->rgb(202,53,53)
scala/reflect/internal/Types$Type.packageObject->rgb(228,91,91)
scala/reflect/internal/Types$Type.scala$reflect$internal$Types$Type$$$outer->rgb(224,86,86)
scala/reflect/internal/Types$Type.stat_$less$colon$less->rgb(250,123,123)
scala/reflect/internal/Types$Type.subst->rgb(218,76,76)
scala/reflect/internal/Types$Type.typeParams->rgb(206,59,59)
scala/reflect/internal/Types$Type.weak_$less$colon$less->rgb(228,91,91)
scala/reflect/internal/Types$Type.widen->rgb(237,104,104)
scala/reflect/internal/Types$TypeBounds.containsType->rgb(236,102,102)
scala/reflect/internal/Types$TypeRef$$Lambda$374/1148038880.apply->rgb(225,86,86)
scala/reflect/internal/Types$TypeRef$$Lambda$374/209865390.apply->rgb(201,52,52)
scala/reflect/internal/Types$TypeRef$.apply->rgb(206,58,58)
scala/reflect/internal/Types$TypeRef.$anonfun$baseTypeSeqImpl$2->rgb(211,67,67)
scala/reflect/internal/Types$TypeRef.<init>->rgb(218,77,77)
scala/reflect/internal/Types$TypeRef.baseClasses->rgb(228,91,91)
scala/reflect/internal/Types$TypeRef.baseType->rgb(235,101,101)
scala/reflect/internal/Types$TypeRef.baseTypeOfNonClassTypeRef->rgb(242,111,111)
scala/reflect/internal/Types$TypeRef.baseTypeSeq->rgb(202,53,53)
scala/reflect/internal/Types$TypeRef.baseTypeSeqDepth->rgb(202,53,53)
scala/reflect/internal/Types$TypeRef.baseTypeSeqImpl->rgb(220,79,79)
scala/reflect/internal/Types$TypeRef.computeHashCode->rgb(212,67,67)
scala/reflect/internal/Types$TypeRef.equals->rgb(237,104,104)
scala/reflect/internal/Types$TypeRef.initializedTypeParams->rgb(246,117,117)
scala/reflect/internal/Types$TypeRef.isTrivial->rgb(239,107,107)
scala/reflect/internal/Types$TypeRef.normalize->rgb(230,94,94)
scala/reflect/internal/Types$TypeRef.relativize->rgb(228,90,90)
scala/reflect/internal/Types$TypeRef.seenFromOwnerInstantiated$1->rgb(203,55,55)
scala/reflect/internal/Types$TypeRef.typeParamsMatchArgs->rgb(235,101,101)
scala/reflect/internal/Types$TypeRef.typeSymbol->rgb(226,88,88)
scala/reflect/internal/Types$UniqueConstantType.<init>->rgb(227,89,89)
scala/reflect/internal/Types$UniqueThisType.<init>->rgb(218,77,77)
scala/reflect/internal/Types$UniqueType.<init>->rgb(212,68,68)
scala/reflect/internal/Types$UniqueType.computeHashCode->rgb(237,104,104)
scala/reflect/internal/Types$UniqueType.hashCode->rgb(211,67,67)
scala/reflect/internal/Types.$anonfun$boundsContainType$1->rgb(230,94,94)
scala/reflect/internal/Types.$anonfun$boundsContainType$1$adapted->rgb(230,94,94)
scala/reflect/internal/Types.$anonfun$defineBaseClassesOfCompoundType$2->rgb(248,120,120)
scala/reflect/internal/Types.$anonfun$defineBaseClassesOfCompoundType$3->rgb(231,96,96)
scala/reflect/internal/Types.$anonfun$defineBaseTypeSeqOfCompoundType$6->rgb(231,95,95)
scala/reflect/internal/Types.$anonfun$isSameTypes$1->rgb(227,89,89)
scala/reflect/internal/Types.$anonfun$isSubArgs$2->rgb(246,117,117)
scala/reflect/internal/Types.$anonfun$mergePrefixAndArgs$7->rgb(246,116,116)
scala/reflect/internal/Types.$anonfun$typeIsSubTypeOfSerializable$1->rgb(250,122,122)
scala/reflect/internal/Types.$anonfun$typeIsSubTypeOfSerializable$1$adapted->rgb(252,125,125)
scala/reflect/internal/Types.addMixinBaseClasses$1->rgb(246,117,117)
scala/reflect/internal/Types.addSerializable->rgb(216,74,74)
scala/reflect/internal/Types.addSerializable$->rgb(220,79,79)
scala/reflect/internal/Types.baseTypeSeqDepth->rgb(211,66,66)
scala/reflect/internal/Types.computeBaseClasses->rgb(247,118,118)
scala/reflect/internal/Types.computeBaseClasses$->rgb(213,69,69)
scala/reflect/internal/Types.copyTypeRef->rgb(214,70,70)
scala/reflect/internal/Types.copyTypeRef$->rgb(244,114,114)
scala/reflect/internal/Types.define$1->rgb(233,98,98)
scala/reflect/internal/Types.defineBaseClassesOfCompoundType->rgb(242,111,111)
scala/reflect/internal/Types.defineBaseClassesOfCompoundType$->rgb(217,75,75)
scala/reflect/internal/Types.defineBaseTypeSeqOfCompoundType->rgb(239,106,106)
scala/reflect/internal/Types.defineBaseTypeSeqOfCompoundType$->rgb(235,101,101)
scala/reflect/internal/Types.defineBaseTypeSeqOfTypeRef->rgb(251,124,124)
scala/reflect/internal/Types.defineBaseTypeSeqOfTypeRef$->rgb(235,102,102)
scala/reflect/internal/Types.defineUnderlyingOfSingleType->rgb(202,54,54)
scala/reflect/internal/Types.defineUnderlyingOfSingleType$->rgb(205,58,58)
scala/reflect/internal/Types.elementExtract->rgb(205,57,57)
scala/reflect/internal/Types.elementExtract$->rgb(242,111,111)
scala/reflect/internal/Types.isNew$1->rgb(244,114,114)
scala/reflect/internal/Types.isRawIfWithoutArgs->rgb(207,60,60)
scala/reflect/internal/Types.isRawIfWithoutArgs$->rgb(225,86,86)
scala/reflect/internal/Types.isRawType->rgb(253,128,128)
scala/reflect/internal/Types.isRawType$->rgb(225,87,87)
scala/reflect/internal/Types.isSameTypes->rgb(200,50,50)
scala/reflect/internal/Types.isSameTypes$->rgb(221,81,81)
scala/reflect/internal/Types.isSubArg$1->rgb(240,108,108)
scala/reflect/internal/Types.isSubArgs->rgb(223,83,83)
scala/reflect/internal/Types.isSubArgs$->rgb(224,85,85)
scala/reflect/internal/Types.isWithinBounds->rgb(246,117,117)
scala/reflect/internal/Types.isWithinBounds$->rgb(251,124,124)
scala/reflect/internal/Types.loop$4->rgb(217,75,75)
scala/reflect/internal/Types.lubDepth->rgb(250,122,122)
scala/reflect/internal/Types.lubDepth$->rgb(201,51,51)
scala/reflect/internal/Types.matchesType->rgb(250,123,123)
scala/reflect/internal/Types.matchesType$->rgb(208,61,61)
scala/reflect/internal/Types.matchingParams->rgb(253,127,127)
scala/reflect/internal/Types.matchingParams$->rgb(203,54,54)
scala/reflect/internal/Types.maxbaseTypeSeqDepth->rgb(235,101,101)
scala/reflect/internal/Types.maxbaseTypeSeqDepth$->rgb(236,103,103)
scala/reflect/internal/Types.mergePrefixAndArgs->rgb(200,51,51)
scala/reflect/internal/Types.mergePrefixAndArgs$->rgb(247,118,118)
scala/reflect/internal/Types.normalizePlus->rgb(241,110,110)
scala/reflect/internal/Types.normalizePlus$->rgb(252,126,126)
scala/reflect/internal/Types.rebind->rgb(233,98,98)
scala/reflect/internal/Types.scala$reflect$internal$Types$$typesContain->rgb(212,67,67)
scala/reflect/internal/Types.singleType->rgb(248,120,120)
scala/reflect/internal/Types.singleType$->rgb(239,107,107)
scala/reflect/internal/Types.typeRef->rgb(253,128,128)
scala/reflect/internal/Types.typeRef$->rgb(244,115,115)
scala/reflect/internal/Types.unique->rgb(237,105,105)
scala/reflect/internal/Types.unique$->rgb(251,124,124)
scala/reflect/internal/Variances$VarianceValidator.traverse->rgb(211,67,67)
scala/reflect/internal/Variances.$anonfun$varianceInType$1->rgb(233,99,99)
scala/reflect/internal/Variances.$anonfun$varianceInType$2->rgb(225,86,86)
scala/reflect/internal/Variances.inArgs$1->rgb(208,63,63)
scala/reflect/internal/Variances.inSym$1->rgb(217,74,74)
scala/reflect/internal/Variances.inSyms$1->rgb(228,91,91)
scala/reflect/internal/Variances.inType$1->rgb(224,85,85)
scala/reflect/internal/Variances.varianceInType->rgb(232,97,97)
scala/reflect/internal/Variances.varianceInType$->rgb(217,75,75)
scala/reflect/internal/pickling/PickleBuffer.until->rgb(225,87,87)
scala/reflect/internal/pickling/Translations.picklerTag->rgb(253,128,128)
scala/reflect/internal/pickling/Translations.picklerTag$->rgb(211,67,67)
scala/reflect/internal/pickling/UnPickler$Scan$$Lambda$158/1860872176.apply->rgb(252,126,126)
scala/reflect/internal/pickling/UnPickler$Scan$$Lambda$158/1950170906.apply->rgb(225,86,86)
scala/reflect/internal/pickling/UnPickler$Scan$$Lambda$161/1922762050.apply->rgb(221,81,81)
scala/reflect/internal/pickling/UnPickler$Scan$$Lambda$161/829956004.apply->rgb(249,122,122)
scala/reflect/internal/pickling/UnPickler$Scan$$Lambda$434/171685215.apply->rgb(216,74,74)
scala/reflect/internal/pickling/UnPickler$Scan$$Lambda$434/884488323.apply->rgb(202,53,53)
scala/reflect/internal/pickling/UnPickler$Scan$LazyTypeRef$$Lambda$167/1947769451.apply->rgb(224,85,85)
scala/reflect/internal/pickling/UnPickler$Scan$LazyTypeRef$$Lambda$167/2133271197.apply->rgb(208,63,63)
scala/reflect/internal/pickling/UnPickler$Scan$LazyTypeRef.$anonfun$completeInternal$1->rgb(251,124,124)
scala/reflect/internal/pickling/UnPickler$Scan$LazyTypeRef.complete->rgb(212,67,67)
scala/reflect/internal/pickling/UnPickler$Scan$LazyTypeRef.completeInternal->rgb(240,108,108)
scala/reflect/internal/pickling/UnPickler$Scan$LazyTypeRef.load->rgb(200,50,50)
scala/reflect/internal/pickling/UnPickler$Scan.$anonfun$readAnnotArg$1->rgb(226,88,88)
scala/reflect/internal/pickling/UnPickler$Scan.$anonfun$readSymbol$3->rgb(214,70,70)
scala/reflect/internal/pickling/UnPickler$Scan.$anonfun$readType$1->rgb(228,91,91)
scala/reflect/internal/pickling/UnPickler$Scan.$anonfun$readTypeRef$1->rgb(250,123,123)
scala/reflect/internal/pickling/UnPickler$Scan.$anonfun$run$1->rgb(253,128,128)
scala/reflect/internal/pickling/UnPickler$Scan.$anonfun$run$2->rgb(216,74,74)
scala/reflect/internal/pickling/UnPickler$Scan.at->rgb(230,94,94)
scala/reflect/internal/pickling/UnPickler$Scan.fromName$1->rgb(216,73,73)
scala/reflect/internal/pickling/UnPickler$Scan.readAnnotArg->rgb(253,127,127)
scala/reflect/internal/pickling/UnPickler$Scan.readAnnotationInfo->rgb(232,96,96)
scala/reflect/internal/pickling/UnPickler$Scan.readExtSymbol$1->rgb(225,86,86)
scala/reflect/internal/pickling/UnPickler$Scan.readNonEmptyTree->rgb(239,107,107)
scala/reflect/internal/pickling/UnPickler$Scan.readSymbol->rgb(251,125,125)
scala/reflect/internal/pickling/UnPickler$Scan.readSymbolAnnotation->rgb(251,124,124)
scala/reflect/internal/pickling/UnPickler$Scan.readSymbolRef->rgb(200,50,50)
scala/reflect/internal/pickling/UnPickler$Scan.readThisType$1->rgb(224,85,85)
scala/reflect/internal/pickling/UnPickler$Scan.readTree->rgb(251,124,124)
scala/reflect/internal/pickling/UnPickler$Scan.readType->rgb(210,64,64)
scala/reflect/internal/pickling/UnPickler$Scan.readTypeRef->rgb(200,50,50)
scala/reflect/internal/pickling/UnPickler$Scan.readTypes$1->rgb(214,70,70)
scala/reflect/internal/pickling/UnPickler$Scan.run->rgb(238,106,106)
scala/reflect/internal/pickling/UnPickler.unpickle->rgb(252,126,126)
scala/reflect/internal/tpe/CommonOwners$CommonOwnerMap.traverse->rgb(231,96,96)
scala/reflect/internal/tpe/FindMembers$FindMember.<init>->rgb(209,63,63)
scala/reflect/internal/tpe/FindMembers$FindMember.addMemberIfNew->rgb(221,80,80)
scala/reflect/internal/tpe/FindMembers$FindMember.member0Tpe->rgb(248,120,120)
scala/reflect/internal/tpe/FindMembers$FindMember.memberTypeLow->rgb(223,84,84)
scala/reflect/internal/tpe/FindMembers$FindMember.result->rgb(230,94,94)
scala/reflect/internal/tpe/FindMembers$FindMemberBase.<init>->rgb(233,99,99)
scala/reflect/internal/tpe/FindMembers$FindMemberBase.apply->rgb(224,85,85)
scala/reflect/internal/tpe/FindMembers$FindMemberBase.isNewMember->rgb(242,112,112)
scala/reflect/internal/tpe/FindMembers$FindMemberBase.searchConcreteThenDeferred->rgb(218,76,76)
scala/reflect/internal/tpe/FindMembers$FindMemberBase.walkBaseClasses->rgb(221,81,81)
scala/reflect/internal/tpe/FindMembers$FindMembers.<init>->rgb(225,87,87)
scala/reflect/internal/tpe/GlbLubs$$Lambda$537/1810641486.apply->rgb(246,118,118)
scala/reflect/internal/tpe/GlbLubs$$Lambda$537/888033777.apply->rgb(233,98,98)
scala/reflect/internal/tpe/GlbLubs$$Lambda$739/1206804419.apply->rgb(213,69,69)
scala/reflect/internal/tpe/GlbLubs$$Lambda$739/808660740.apply->rgb(250,123,123)
scala/reflect/internal/tpe/GlbLubs$$Lambda$740/783726570.apply->rgb(201,52,52)
scala/reflect/internal/tpe/GlbLubs.$anonfun$elimSuper$1->rgb(209,63,63)
scala/reflect/internal/tpe/GlbLubs.$anonfun$elimSuper$1$adapted->rgb(222,82,82)
scala/reflect/internal/tpe/GlbLubs.$anonfun$lub$18->rgb(226,88,88)
scala/reflect/internal/tpe/GlbLubs.$anonfun$lub$18$adapted->rgb(246,117,117)
scala/reflect/internal/tpe/GlbLubs.$anonfun$lub$19->rgb(247,119,119)
scala/reflect/internal/tpe/GlbLubs.$anonfun$lub$9->rgb(220,79,79)
scala/reflect/internal/tpe/GlbLubs.elimSub->rgb(226,87,87)
scala/reflect/internal/tpe/GlbLubs.elimSub0$1->rgb(223,84,84)
scala/reflect/internal/tpe/GlbLubs.elimSuper->rgb(229,92,92)
scala/reflect/internal/tpe/GlbLubs.excludeFromLub$1->rgb(228,91,91)
scala/reflect/internal/tpe/GlbLubs.glb->rgb(229,93,93)
scala/reflect/internal/tpe/GlbLubs.glb$->rgb(218,76,76)
scala/reflect/internal/tpe/GlbLubs.loop$1->rgb(221,81,81)
scala/reflect/internal/tpe/GlbLubs.lub->rgb(221,81,81)
scala/reflect/internal/tpe/GlbLubs.lub$->rgb(224,85,85)
scala/reflect/internal/tpe/GlbLubs.lub0$1->rgb(247,118,118)
scala/reflect/internal/tpe/GlbLubs.lub1$1->rgb(242,111,111)
scala/reflect/internal/tpe/GlbLubs.lubList->rgb(240,108,108)
scala/reflect/internal/tpe/GlbLubs.lubList$->rgb(245,116,116)
scala/reflect/internal/tpe/GlbLubs.lubsym$1->rgb(243,113,113)
scala/reflect/internal/tpe/GlbLubs.refines$1->rgb(252,125,125)
scala/reflect/internal/tpe/TypeComparers$$Lambda$667/1911406283.apply->rgb(217,75,75)
scala/reflect/internal/tpe/TypeComparers$$Lambda$667/352790460.apply->rgb(211,66,66)
scala/reflect/internal/tpe/TypeComparers.$anonfun$isSubType2$3->rgb(245,116,116)
scala/reflect/internal/tpe/TypeComparers.$anonfun$isSubType2$3$adapted->rgb(250,122,122)
scala/reflect/internal/tpe/TypeComparers.classOnRight$1->rgb(202,53,53)
scala/reflect/internal/tpe/TypeComparers.equalSymsAndPrefixes->rgb(212,67,67)
scala/reflect/internal/tpe/TypeComparers.firstTry$1->rgb(222,83,83)
scala/reflect/internal/tpe/TypeComparers.fourthTry$1->rgb(248,119,119)
scala/reflect/internal/tpe/TypeComparers.isNoArgStaticClassTypeRef->rgb(229,93,93)
scala/reflect/internal/tpe/TypeComparers.isSameType->rgb(204,56,56)
scala/reflect/internal/tpe/TypeComparers.isSameType$->rgb(243,113,113)
scala/reflect/internal/tpe/TypeComparers.isSameType1->rgb(200,51,51)
scala/reflect/internal/tpe/TypeComparers.isSameType2->rgb(213,70,70)
scala/reflect/internal/tpe/TypeComparers.isSameType2$->rgb(230,94,94)
scala/reflect/internal/tpe/TypeComparers.isSameTypeRef->rgb(224,84,84)
scala/reflect/internal/tpe/TypeComparers.isSubType->rgb(220,80,80)
scala/reflect/internal/tpe/TypeComparers.isSubType$->rgb(210,65,65)
scala/reflect/internal/tpe/TypeComparers.isSubType1->rgb(254,128,128)
scala/reflect/internal/tpe/TypeComparers.isSubType2->rgb(221,81,81)
scala/reflect/internal/tpe/TypeComparers.isWeakSubType->rgb(243,112,112)
scala/reflect/internal/tpe/TypeComparers.isWeakSubType$->rgb(250,123,123)
scala/reflect/internal/tpe/TypeComparers.retry$1->rgb(203,55,55)
scala/reflect/internal/tpe/TypeComparers.retry$4->rgb(251,125,125)
scala/reflect/internal/tpe/TypeComparers.sameAnnotatedTypes->rgb(240,108,108)
scala/reflect/internal/tpe/TypeComparers.sameTypeAndSameCaseClass$1->rgb(254,128,128)
scala/reflect/internal/tpe/TypeComparers.secondTry$1->rgb(212,67,67)
scala/reflect/internal/tpe/TypeComparers.thirdTry$1->rgb(239,107,107)
scala/reflect/internal/tpe/TypeComparers.thirdTryRef$1->rgb(215,73,73)
scala/reflect/internal/tpe/TypeConstraints$UndoLog.undo->rgb(234,99,99)
scala/reflect/internal/tpe/TypeConstraints.$anonfun$solve$1->rgb(211,66,66)
scala/reflect/internal/tpe/TypeConstraints.$anonfun$solve$9->rgb(240,109,109)
scala/reflect/internal/tpe/TypeConstraints.solve->rgb(217,76,76)
scala/reflect/internal/tpe/TypeConstraints.solve$->rgb(214,71,71)
scala/reflect/internal/tpe/TypeConstraints.solveOne$1->rgb(238,106,106)
scala/reflect/internal/tpe/TypeMaps$$anon$1.apply->rgb(204,56,56)
scala/reflect/internal/tpe/TypeMaps$AsSeenFromMap.<init>->rgb(227,89,89)
scala/reflect/internal/tpe/TypeMaps$AsSeenFromMap.apply->rgb(217,75,75)
scala/reflect/internal/tpe/TypeMaps$AsSeenFromMap.classParameterAsSeen->rgb(216,73,73)
scala/reflect/internal/tpe/TypeMaps$AsSeenFromMap.correspondingTypeArgument->rgb(208,61,61)
scala/reflect/internal/tpe/TypeMaps$AsSeenFromMap.loop$3->rgb(213,69,69)
scala/reflect/internal/tpe/TypeMaps$AsSeenFromMap.loop$4->rgb(252,126,126)
scala/reflect/internal/tpe/TypeMaps$AsSeenFromMap.nextBase$1->rgb(232,97,97)
scala/reflect/internal/tpe/TypeMaps$AsSeenFromMap.scala$reflect$internal$tpe$TypeMaps$AsSeenFromMap$$matchesPrefixAndClass->rgb(223,83,83)
scala/reflect/internal/tpe/TypeMaps$AsSeenFromMap.thisTypeAsSeen->rgb(221,80,80)
scala/reflect/internal/tpe/TypeMaps$ContainsCollector.traverse->rgb(217,76,76)
scala/reflect/internal/tpe/TypeMaps$ErroneousCollector$.traverse->rgb(209,63,63)
scala/reflect/internal/tpe/TypeMaps$ForEachTypeTraverser.traverse->rgb(220,79,79)
scala/reflect/internal/tpe/TypeMaps$SubstMap.$anonfun$new$2->rgb(200,50,50)
scala/reflect/internal/tpe/TypeMaps$SubstMap.<init>->rgb(207,60,60)
scala/reflect/internal/tpe/TypeMaps$SubstMap.apply->rgb(213,69,69)
scala/reflect/internal/tpe/TypeMaps$SubstMap.renameBoundSyms->rgb(235,101,101)
scala/reflect/internal/tpe/TypeMaps$SubstMap.subst->rgb(223,84,84)
scala/reflect/internal/tpe/TypeMaps$SubstMap.substFor$1->rgb(253,127,127)
scala/reflect/internal/tpe/TypeMaps$SubstSymMap.apply->rgb(240,109,109)
scala/reflect/internal/tpe/TypeMaps$SubstSymMap.subst->rgb(209,64,64)
scala/reflect/internal/tpe/TypeMaps$SubstSymMap.substFor->rgb(204,56,56)
scala/reflect/internal/tpe/TypeMaps$SubstSymMap.toType->rgb(227,89,89)
scala/reflect/internal/tpe/TypeMaps$TypeCollector.collect->rgb(200,50,50)
scala/reflect/internal/tpe/TypeMaps$TypeMap.$anonfun$mapOver$1->rgb(228,90,90)
scala/reflect/internal/tpe/TypeMaps$TypeMap.$anonfun$mapOver$2->rgb(221,81,81)
scala/reflect/internal/tpe/TypeMaps$TypeMap.$anonfun$mapOver$3->rgb(235,101,101)
scala/reflect/internal/tpe/TypeMaps$TypeMap.<init>->rgb(246,117,117)
scala/reflect/internal/tpe/TypeMaps$TypeMap.applyToSymbolInfo->rgb(224,84,84)
scala/reflect/internal/tpe/TypeMaps$TypeMap.loop$1->rgb(228,91,91)
scala/reflect/internal/tpe/TypeMaps$TypeMap.mapOver->rgb(226,89,89)
scala/reflect/internal/tpe/TypeMaps$TypeMap.noChangeToSymbols->rgb(238,106,106)
scala/reflect/internal/tpe/TypeMaps$TypeTraverser.apply->rgb(222,82,82)
scala/reflect/internal/tpe/TypeMaps$typeVarToOriginMap$.apply->rgb(233,98,98)
scala/reflect/internal/transform/Erasure$ErasureMap.apply->rgb(220,79,79)
scala/reflect/internal/transform/Erasure.specialErasure->rgb(244,114,114)
scala/reflect/internal/transform/Erasure.specialErasure$->rgb(219,77,77)
scala/reflect/internal/transform/Erasure.transformInfo->rgb(219,78,78)
scala/reflect/internal/transform/Erasure.transformInfo$->rgb(252,126,126)
scala/reflect/internal/transform/UnCurry$$anon$1.apply->rgb(229,93,93)
scala/reflect/internal/transform/UnCurry.scala$reflect$internal$transform$UnCurry$$expandAlias->rgb(253,127,127)
scala/reflect/internal/transform/UnCurry.transformInfo->rgb(229,93,93)
scala/reflect/internal/transform/UnCurry.transformInfo$->rgb(221,80,80)
scala/reflect/internal/util/AlmostFinalValue$AlmostFinalCallSite.setValue->rgb(205,58,58)
scala/reflect/internal/util/AlmostFinalValue.setValue->rgb(224,85,85)
scala/reflect/internal/util/BooleanContainer.isEnabledNow->rgb(246,117,117)
scala/reflect/internal/util/Collections.$anonfun$mapFrom$1->rgb(214,71,71)
scala/reflect/internal/util/Position.pos->rgb(240,109,109)
scala/reflect/internal/util/Statistics$Timer.start->rgb(249,122,122)
scala/reflect/internal/util/Statistics$TimerStack.pop->rgb(235,101,101)
scala/reflect/internal/util/Statistics$TimerStack.push->rgb(226,89,89)
scala/reflect/internal/util/Statistics.areHotStatsLocallyEnabled->rgb(252,127,127)
scala/reflect/internal/util/Statistics.enabled_$eq->rgb(213,69,69)
scala/reflect/internal/util/Statistics.initFromSettings->rgb(243,113,113)
scala/reflect/internal/util/StatisticsStatics.areSomeColdStatsEnabled->rgb(245,116,116)
scala/reflect/internal/util/StatisticsStatics.enableColdStats->rgb(248,120,120)
scala/reflect/internal/util/TriState$.booleanValue$extension->rgb(222,82,82)
scala/reflect/internal/util/WeakHashSet.add$1->rgb(214,71,71)
scala/reflect/internal/util/WeakHashSet.findEntryOrUpdate->rgb(231,95,95)
scala/reflect/internal/util/WeakHashSet.linkedListLoop$2->rgb(206,59,59)
scala/reflect/internal/util/WeakHashSet.linkedListLoop$4->rgb(229,92,92)
scala/reflect/internal/util/WeakHashSet.poll$1->rgb(213,69,69)
scala/reflect/internal/util/WeakHashSet.queueLoop$1->rgb(231,96,96)
scala/reflect/internal/util/WeakHashSet.removeStaleEntries->rgb(241,110,110)
scala/reflect/internal/util/WeakHashSet.resize->rgb(231,95,95)
scala/reflect/internal/util/WeakHashSet.tableLoop$1->rgb(225,87,87)
scala/reflect/io/AbstractFile.toByteArray->rgb(224,86,86)
scala/reflect/io/Path$.apply->rgb(247,118,118)
scala/reflect/io/Path$.isFile$1->rgb(211,67,67)
scala/reflect/io/Path$.string2path->rgb(227,89,89)
scala/reflect/macros/contexts/Context.typecheck->rgb(249,121,121)
scala/reflect/macros/contexts/Typers$$Lambda$698/338490532.apply->rgb(208,61,61)
scala/reflect/macros/contexts/Typers$$Lambda$698/488308221.apply->rgb(224,85,85)
scala/reflect/macros/contexts/Typers$$Lambda$699/1721092906.apply->rgb(236,102,102)
scala/reflect/macros/contexts/Typers$$Lambda$699/720485376.apply->rgb(250,122,122)
scala/reflect/macros/contexts/Typers.$anonfun$typecheck$2->rgb(204,56,56)
scala/reflect/macros/contexts/Typers.$anonfun$typecheck$3->rgb(233,98,98)
scala/reflect/macros/contexts/Typers.$anonfun$typecheck$4->rgb(222,82,82)
scala/reflect/macros/contexts/Typers.$anonfun$typecheck$7->rgb(212,68,68)
scala/reflect/macros/contexts/Typers.doTypecheck$1->rgb(219,78,78)
scala/reflect/macros/contexts/Typers.typecheck->rgb(254,129,129)
scala/reflect/macros/contexts/Typers.typecheck$->rgb(244,114,114)
scala/reflect/reify/Taggers.materializeClassTag->rgb(204,56,56)
scala/runtime/BoxesRunTime.boxToLong->rgb(248,121,121)
scala/runtime/BoxesRunTime.equals->rgb(242,111,111)
scala/runtime/BoxesRunTime.equals2->rgb(237,104,104)
scala/runtime/BoxesRunTime.equalsNumNum->rgb(221,80,80)
scala/runtime/BoxesRunTime.equalsNumObject->rgb(231,96,96)
scala/runtime/ScalaRunTime$._hashCode->rgb(220,80,80)
scala/runtime/Statics.anyHash->rgb(247,119,119)
scala/runtime/java8/JFunction0$mcZ$sp.apply->rgb(230,94,94)
scala/tools/asm/Attribute.getSize->rgb(241,109,109)
scala/tools/asm/ClassWriter.toByteArray->rgb(241,110,110)
scala/tools/asm/Item.set->rgb(210,65,65)
scala/tools/asm/MethodWriter.visitMaxs->rgb(207,60,60)
scala/tools/asm/MethodWriter.visitMethodInsn->rgb(213,70,70)
scala/tools/asm/tree/ClassNode.accept->rgb(230,93,93)
scala/tools/asm/tree/InsnList.accept->rgb(206,58,58)
scala/tools/asm/tree/MethodInsnNode.accept->rgb(250,123,123)
scala/tools/asm/tree/MethodNode.accept->rgb(238,106,106)
scala/tools/asm/tree/analysis/Analyzer.analyze->rgb(250,123,123)
scala/tools/asm/tree/analysis/Analyzer.findSubroutine->rgb(227,90,90)
scala/tools/asm/tree/analysis/Frame.execute->rgb(213,69,69)
scala/tools/benchmark/BenchmarkDriver$MainClass.processSettingsHook->rgb(204,56,56)
scala/tools/benchmark/BenchmarkDriver.compileImpl->rgb(224,85,85)
scala/tools/benchmark/BenchmarkDriver.compileImpl$->rgb(216,74,74)
scala/tools/nsc/BaseBenchmarkDriver.allArgs->rgb(212,68,68)
scala/tools/nsc/BaseBenchmarkDriver.allArgs$->rgb(205,58,58)
scala/tools/nsc/BenchmarkUtils$.deleteRecursive->rgb(212,68,68)
scala/tools/nsc/Driver.doCompile->rgb(223,84,84)
scala/tools/nsc/Driver.process->rgb(230,93,93)
scala/tools/nsc/Global$$anon$1.addSyntheticMethods->rgb(220,79,79)
scala/tools/nsc/Global$$anon$1.caseModuleDef->rgb(229,92,92)
scala/tools/nsc/Global$$anon$1.caseModuleUnapplyMeth->rgb(231,96,96)
scala/tools/nsc/Global$$anon$1.formalTypes->rgb(222,83,83)
scala/tools/nsc/Global$$anon$1.global->rgb(206,60,60)
scala/tools/nsc/Global$$anon$1.inferImplicit->rgb(236,103,103)
scala/tools/nsc/Global$$anon$1.inferImplicitByType->rgb(235,102,102)
scala/tools/nsc/Global$$anon$1.inferImplicitFor->rgb(223,83,83)
scala/tools/nsc/Global$$anon$1.inferImplicitView->rgb(226,88,88)
scala/tools/nsc/Global$$anon$1.isBlackbox->rgb(226,88,88)
scala/tools/nsc/Global$$anon$1.loadMacroImplBinding->rgb(242,111,111)
scala/tools/nsc/Global$$anon$1.macroExpand->rgb(250,123,123)
scala/tools/nsc/Global$$anon$1.macroExpandWithRuntime->rgb(215,73,73)
scala/tools/nsc/Global$$anon$1.normalize->rgb(207,61,61)
scala/tools/nsc/Global$$anon$1.pluginsEnsureCompanionObject->rgb(211,67,67)
scala/tools/nsc/Global$$anon$1.pluginsEnterSym->rgb(249,121,121)
scala/tools/nsc/Global$$anon$1.pluginsIsBlackbox->rgb(210,65,65)
scala/tools/nsc/Global$$anon$1.pluginsMacroExpand->rgb(247,119,119)
scala/tools/nsc/Global$$anon$1.rootContext->rgb(244,114,114)
scala/tools/nsc/Global$$anon$1.solvedTypes->rgb(222,82,82)
scala/tools/nsc/Global$$anon$1.standardIsBlackbox->rgb(215,72,72)
scala/tools/nsc/Global$$anon$1.standardMacroExpand->rgb(213,69,69)
scala/tools/nsc/Global$$anon$1.typingInPattern->rgb(253,127,127)
scala/tools/nsc/Global$GlobalMirror.rootLoader->rgb(204,56,56)
scala/tools/nsc/Global$GlobalPhase$$Lambda$282/132441708.apply->rgb(235,101,101)
scala/tools/nsc/Global$GlobalPhase$$Lambda$282/214221713.apply->rgb(237,105,105)
scala/tools/nsc/Global$GlobalPhase.$anonfun$applyPhase$1->rgb(205,57,57)
scala/tools/nsc/Global$GlobalPhase.$anonfun$run$1->rgb(247,118,118)
scala/tools/nsc/Global$GlobalPhase.$anonfun$run$1$adapted->rgb(246,118,118)
scala/tools/nsc/Global$GlobalPhase.applyPhase->rgb(231,95,95)
scala/tools/nsc/Global$GlobalPhase.run->rgb(254,128,128)
scala/tools/nsc/Global$GlobalPlatform.classPath->rgb(242,111,111)
scala/tools/nsc/Global$Run.<init>->rgb(203,54,54)
scala/tools/nsc/Global$Run.compile->rgb(242,112,112)
scala/tools/nsc/Global$Run.compileSources->rgb(249,122,122)
scala/tools/nsc/Global$Run.compileUnits->rgb(241,110,110)
scala/tools/nsc/Global$Run.compileUnitsInternal->rgb(250,123,123)
scala/tools/nsc/Global$Run.printStatisticsFor->rgb(204,56,56)
scala/tools/nsc/Global.classPath->rgb(235,102,102)
scala/tools/nsc/Global.enteringExplicitOuter->rgb(212,68,68)
scala/tools/nsc/Global.isCompilerUniverse->rgb(247,119,119)
scala/tools/nsc/Global.rootMirror->rgb(224,85,85)
scala/tools/nsc/Global.rootMirror$lzycompute->rgb(230,94,94)
scala/tools/nsc/Global.statistics->rgb(253,127,127)
scala/tools/nsc/Global.statistics$lzycompute$1->rgb(211,66,66)
scala/tools/nsc/Global.withInfoLevel->rgb(244,115,115)
scala/tools/nsc/GlobalSymbolLoaders.$anonfun$lookupMemberAtTyperPhaseIfPossible$1->rgb(216,74,74)
scala/tools/nsc/GlobalSymbolLoaders.lookup$1->rgb(252,126,126)
scala/tools/nsc/GlobalSymbolLoaders.lookupMemberAtTyperPhaseIfPossible->rgb(242,112,112)
scala/tools/nsc/HotScalacBenchmark.compile->rgb(250,123,123)
scala/tools/nsc/ScalacBenchmark.allArgs->rgb(231,95,95)
scala/tools/nsc/ScalacBenchmark.clearTemp->rgb(221,80,80)
scala/tools/nsc/ScalacBenchmark.compileImpl->rgb(201,51,51)
scala/tools/nsc/ScalacBenchmark.sourceFiles->rgb(223,84,84)
scala/tools/nsc/Settings.<init>->rgb(241,110,110)
scala/tools/nsc/ast/TreeGen.mkImportFromSelector->rgb(249,121,121)
scala/tools/nsc/ast/TreeGen.mkLiftedFunctionBodyMethod->rgb(206,59,59)
scala/tools/nsc/ast/TreeGen.mkMethodForFunctionBody->rgb(205,57,57)
scala/tools/nsc/ast/TreeGen.mkWildcardImport->rgb(240,109,109)
scala/tools/nsc/ast/Trees$ResetAttrs$Transformer.transform->rgb(228,91,91)
scala/tools/nsc/ast/Trees$Transformer.transformUnit->rgb(247,119,119)
scala/tools/nsc/ast/parser/Parsers$Parser$$Lambda$284/164506496.apply->rgb(206,59,59)
scala/tools/nsc/ast/parser/Parsers$Parser$$Lambda$284/1709779147.apply->rgb(230,93,93)
scala/tools/nsc/ast/parser/Parsers$Parser$$Lambda$286/179308924.apply->rgb(210,65,65)
scala/tools/nsc/ast/parser/Parsers$Parser$$Lambda$286/302997398.apply->rgb(229,93,93)
scala/tools/nsc/ast/parser/Parsers$Parser$$Lambda$293/1253771463.apply->rgb(216,74,74)
scala/tools/nsc/ast/parser/Parsers$Parser$$Lambda$293/1929438812.apply->rgb(253,127,127)
scala/tools/nsc/ast/parser/Parsers$Parser$$Lambda$295/1714550618.apply->rgb(223,84,84)
scala/tools/nsc/ast/parser/Parsers$Parser$$Lambda$295/601367563.apply->rgb(243,113,113)
scala/tools/nsc/ast/parser/Parsers$Parser$$Lambda$308/971900996.apply->rgb(240,108,108)
scala/tools/nsc/ast/parser/Parsers$Parser$$Lambda$309/2125856213.apply->rgb(241,110,110)
scala/tools/nsc/ast/parser/Parsers$Parser$$anonfun$templateStat$1$$Lambda$294/1186425650.apply->rgb(247,118,118)
scala/tools/nsc/ast/parser/Parsers$Parser$$anonfun$templateStat$1$$Lambda$294/536724081.apply->rgb(200,50,50)
scala/tools/nsc/ast/parser/Parsers$Parser$$anonfun$templateStat$1.$anonfun$applyOrElse$2->rgb(244,114,114)
scala/tools/nsc/ast/parser/Parsers$Parser$$anonfun$templateStat$1.applyOrElse->rgb(216,74,74)
scala/tools/nsc/ast/parser/Parsers$Parser$$anonfun$topStat$1$$Lambda$291/1220157938.apply->rgb(211,67,67)
scala/tools/nsc/ast/parser/Parsers$Parser$$anonfun$topStat$1$$Lambda$291/1797207755.apply->rgb(230,94,94)
scala/tools/nsc/ast/parser/Parsers$Parser$$anonfun$topStat$1.$anonfun$applyOrElse$1->rgb(201,52,52)
scala/tools/nsc/ast/parser/Parsers$Parser$$anonfun$topStat$1.applyOrElse->rgb(247,118,118)
scala/tools/nsc/ast/parser/Parsers$Parser$PatternContextSensitive$$Lambda$300/1485568196.apply->rgb(223,84,84)
scala/tools/nsc/ast/parser/Parsers$Parser$PatternContextSensitive.$anonfun$typ$1->rgb(248,120,120)
scala/tools/nsc/ast/parser/Parsers$Parser$PatternContextSensitive.tupleInfixType->rgb(207,60,60)
scala/tools/nsc/ast/parser/Parsers$Parser$PatternContextSensitive.typ->rgb(237,104,104)
scala/tools/nsc/ast/parser/Parsers$Parser$PatternContextSensitive.typ$->rgb(204,55,55)
scala/tools/nsc/ast/parser/Parsers$Parser$outPattern$.typ->rgb(224,85,85)
scala/tools/nsc/ast/parser/Parsers$Parser.$anonfun$blockExpr$1->rgb(231,95,95)
scala/tools/nsc/ast/parser/Parsers$Parser.$anonfun$blockStatSeq$1->rgb(208,61,61)
scala/tools/nsc/ast/parser/Parsers$Parser.$anonfun$classDef$1->rgb(228,91,91)
scala/tools/nsc/ast/parser/Parsers$Parser.$anonfun$compilationUnit$1->rgb(225,86,86)
scala/tools/nsc/ast/parser/Parsers$Parser.$anonfun$expr$1->rgb(227,89,89)
scala/tools/nsc/ast/parser/Parsers$Parser.$anonfun$funDefRest$1->rgb(223,84,84)
scala/tools/nsc/ast/parser/Parsers$Parser.$anonfun$parse$1->rgb(211,66,66)
scala/tools/nsc/ast/parser/Parsers$Parser.$anonfun$templateBody$1->rgb(207,61,61)
scala/tools/nsc/ast/parser/Parsers$Parser.$anonfun$templateStatSeq$1->rgb(247,119,119)
scala/tools/nsc/ast/parser/Parsers$Parser.block->rgb(202,53,53)
scala/tools/nsc/ast/parser/Parsers$Parser.blockExpr->rgb(224,86,86)
scala/tools/nsc/ast/parser/Parsers$Parser.blockStatSeq->rgb(248,120,120)
scala/tools/nsc/ast/parser/Parsers$Parser.checkNoEscapingPlaceholders->rgb(253,127,127)
scala/tools/nsc/ast/parser/Parsers$Parser.classDef->rgb(228,91,91)
scala/tools/nsc/ast/parser/Parsers$Parser.compilationUnit->rgb(253,128,128)
scala/tools/nsc/ast/parser/Parsers$Parser.defOrDcl->rgb(253,128,128)
scala/tools/nsc/ast/parser/Parsers$Parser.expr->rgb(243,113,113)
scala/tools/nsc/ast/parser/Parsers$Parser.expr0->rgb(223,83,83)
scala/tools/nsc/ast/parser/Parsers$Parser.fromWithinReturnType->rgb(225,86,86)
scala/tools/nsc/ast/parser/Parsers$Parser.funDefOrDcl->rgb(209,63,63)
scala/tools/nsc/ast/parser/Parsers$Parser.funDefRest->rgb(227,89,89)
scala/tools/nsc/ast/parser/Parsers$Parser.joinComment->rgb(224,85,85)
scala/tools/nsc/ast/parser/Parsers$Parser.makeSafeTupleType->rgb(224,86,86)
scala/tools/nsc/ast/parser/Parsers$Parser.nonLocalDefOrDcl->rgb(254,129,129)
scala/tools/nsc/ast/parser/Parsers$Parser.objectDef->rgb(225,87,87)
scala/tools/nsc/ast/parser/Parsers$Parser.parse->rgb(208,62,62)
scala/tools/nsc/ast/parser/Parsers$Parser.parseOther$1->rgb(226,88,88)
scala/tools/nsc/ast/parser/Parsers$Parser.parseRule->rgb(218,76,76)
scala/tools/nsc/ast/parser/Parsers$Parser.placeholderTypeBoundary->rgb(236,102,102)
scala/tools/nsc/ast/parser/Parsers$Parser.postfixExpr->rgb(247,118,118)
scala/tools/nsc/ast/parser/Parsers$Parser.prefixExpr->rgb(213,70,70)
scala/tools/nsc/ast/parser/Parsers$Parser.savingClassContextBounds->rgb(200,50,50)
scala/tools/nsc/ast/parser/Parsers$Parser.simpleExpr->rgb(222,82,82)
scala/tools/nsc/ast/parser/Parsers$Parser.statSeq->rgb(254,128,128)
scala/tools/nsc/ast/parser/Parsers$Parser.template->rgb(220,80,80)
scala/tools/nsc/ast/parser/Parsers$Parser.templateBody->rgb(217,75,75)
scala/tools/nsc/ast/parser/Parsers$Parser.templateBodyOpt->rgb(231,96,96)
scala/tools/nsc/ast/parser/Parsers$Parser.templateOpt->rgb(237,104,104)
scala/tools/nsc/ast/parser/Parsers$Parser.templateStatSeq->rgb(216,73,73)
scala/tools/nsc/ast/parser/Parsers$Parser.templateStats->rgb(253,127,127)
scala/tools/nsc/ast/parser/Parsers$Parser.tmplDef->rgb(208,62,62)
scala/tools/nsc/ast/parser/Parsers$Parser.topLevelTmplDef->rgb(203,55,55)
scala/tools/nsc/ast/parser/Parsers$Parser.topStatSeq->rgb(247,118,118)
scala/tools/nsc/ast/parser/Parsers$Parser.topstats$1->rgb(205,57,57)
scala/tools/nsc/ast/parser/Parsers$Parser.typ->rgb(248,120,120)
scala/tools/nsc/ast/parser/Parsers$Parser.typedOpt->rgb(240,109,109)
scala/tools/nsc/ast/parser/Parsers$SourceFileParser$$Lambda$285/1785068401.apply->rgb(212,67,67)
scala/tools/nsc/ast/parser/Parsers$SourceFileParser$$Lambda$285/649314833.apply->rgb(216,74,74)
scala/tools/nsc/ast/parser/Parsers$SourceFileParser.$anonfun$parseStartRule$1->rgb(253,127,127)
scala/tools/nsc/ast/parser/Parsers$UnitParser.$anonfun$smartParse$1->rgb(207,61,61)
scala/tools/nsc/ast/parser/Parsers$UnitParser.smartParse->rgb(254,129,129)
scala/tools/nsc/ast/parser/SyntaxAnalyzer$ParserPhase.apply->rgb(207,60,60)
scala/tools/nsc/ast/parser/SyntaxAnalyzer.scala$tools$nsc$ast$parser$SyntaxAnalyzer$$initialUnitBody->rgb(252,126,126)
scala/tools/nsc/ast/parser/TreeBuilder.makeTupleType->rgb(210,65,65)
scala/tools/nsc/backend/JavaPlatform.classPath->rgb(223,84,84)
scala/tools/nsc/backend/JavaPlatform.classPath$->rgb(240,108,108)
scala/tools/nsc/backend/jvm/BCodeBodyBuilder$PlainBodyBuilder.$anonfun$genBlock$1->rgb(244,115,115)
scala/tools/nsc/backend/jvm/BCodeBodyBuilder$PlainBodyBuilder.$anonfun$genLoadArguments$1->rgb(244,115,115)
scala/tools/nsc/backend/jvm/BCodeBodyBuilder$PlainBodyBuilder.$anonfun$genLoadLabelArguments$4->rgb(224,85,85)
scala/tools/nsc/backend/jvm/BCodeBodyBuilder$PlainBodyBuilder.$anonfun$genMatch$6->rgb(220,79,79)
scala/tools/nsc/backend/jvm/BCodeBodyBuilder$PlainBodyBuilder.genApply->rgb(233,99,99)
scala/tools/nsc/backend/jvm/BCodeBodyBuilder$PlainBodyBuilder.genArrayValue->rgb(237,104,104)
scala/tools/nsc/backend/jvm/BCodeBodyBuilder$PlainBodyBuilder.genBlock->rgb(204,56,56)
scala/tools/nsc/backend/jvm/BCodeBodyBuilder$PlainBodyBuilder.genCallMethod->rgb(250,123,123)
scala/tools/nsc/backend/jvm/BCodeBodyBuilder$PlainBodyBuilder.genCond->rgb(245,116,116)
scala/tools/nsc/backend/jvm/BCodeBodyBuilder$PlainBodyBuilder.genEqEqPrimitive->rgb(237,104,104)
scala/tools/nsc/backend/jvm/BCodeBodyBuilder$PlainBodyBuilder.genInvokeDynamicLambda->rgb(234,99,99)
scala/tools/nsc/backend/jvm/BCodeBodyBuilder$PlainBodyBuilder.genLabelDef->rgb(232,96,96)
scala/tools/nsc/backend/jvm/BCodeBodyBuilder$PlainBodyBuilder.genLoad->rgb(219,78,78)
scala/tools/nsc/backend/jvm/BCodeBodyBuilder$PlainBodyBuilder.genLoadArguments->rgb(235,102,102)
scala/tools/nsc/backend/jvm/BCodeBodyBuilder$PlainBodyBuilder.genLoadIf->rgb(237,105,105)
scala/tools/nsc/backend/jvm/BCodeBodyBuilder$PlainBodyBuilder.genLoadLabelArguments->rgb(239,106,106)
scala/tools/nsc/backend/jvm/BCodeBodyBuilder$PlainBodyBuilder.genLoadQualifier->rgb(251,125,125)
scala/tools/nsc/backend/jvm/BCodeBodyBuilder$PlainBodyBuilder.genMatch->rgb(204,56,56)
scala/tools/nsc/backend/jvm/BCodeBodyBuilder$PlainBodyBuilder.genPrimitiveOp->rgb(216,73,73)
scala/tools/nsc/backend/jvm/BCodeBodyBuilder$PlainBodyBuilder.genStat->rgb(228,90,90)
scala/tools/nsc/backend/jvm/BCodeBodyBuilder$PlainBodyBuilder.genTypeApply$1->rgb(251,124,124)
scala/tools/nsc/backend/jvm/BCodeBodyBuilder$PlainBodyBuilder.genZandOrZor$1->rgb(254,128,128)
scala/tools/nsc/backend/jvm/BCodeBodyBuilder$PlainBodyBuilder.loadAndTestBoolean$1->rgb(234,99,99)
scala/tools/nsc/backend/jvm/BCodeBodyBuilder.scala$tools$nsc$backend$jvm$BCodeBodyBuilder$$visitInvokeDynamicInsnLMF->rgb(213,69,69)
scala/tools/nsc/backend/jvm/BCodeHelpers$BCAnnotGen$$Lambda$1465/1214798339.apply->rgb(244,114,114)
scala/tools/nsc/backend/jvm/BCodeHelpers$BCAnnotGen.$anonfun$emitAnnotations$1->rgb(209,64,64)
scala/tools/nsc/backend/jvm/BCodeHelpers$BCAnnotGen.$anonfun$emitAnnotations$1$adapted->rgb(222,82,82)
scala/tools/nsc/backend/jvm/BCodeHelpers$BCAnnotGen.emitAnnotations->rgb(213,69,69)
scala/tools/nsc/backend/jvm/BCodeHelpers$BCAnnotGen.emitAnnotations$->rgb(233,99,99)
scala/tools/nsc/backend/jvm/BCodeHelpers$BCAnnotGen.shouldEmitAnnotation->rgb(243,113,113)
scala/tools/nsc/backend/jvm/BCodeHelpers$BCForwardersGen$$Lambda$1499/1339433591.apply->rgb(208,62,62)
scala/tools/nsc/backend/jvm/BCodeHelpers$BCForwardersGen$$Lambda$1499/59424532.apply->rgb(247,118,118)
scala/tools/nsc/backend/jvm/BCodeHelpers$BCForwardersGen.$anonfun$addForwarders$4->rgb(244,114,114)
scala/tools/nsc/backend/jvm/BCodeHelpers$BCForwardersGen.$anonfun$addForwarders$4$adapted->rgb(232,97,97)
scala/tools/nsc/backend/jvm/BCodeHelpers$BCForwardersGen.addForwarder->rgb(246,117,117)
scala/tools/nsc/backend/jvm/BCodeHelpers$BCForwardersGen.addForwarders->rgb(251,125,125)
scala/tools/nsc/backend/jvm/BCodeHelpers$BCForwardersGen.addForwarders$->rgb(220,80,80)
scala/tools/nsc/backend/jvm/BCodeHelpers$BCForwardersGen.addRemoteExceptionAnnot->rgb(220,79,79)
scala/tools/nsc/backend/jvm/BCodeHelpers$BCForwardersGen.addRemoteExceptionAnnot$->rgb(227,90,90)
scala/tools/nsc/backend/jvm/BCodeHelpers$BCForwardersGen.conflictingNames$1->rgb(227,89,89)
scala/tools/nsc/backend/jvm/BCodeHelpers$BCForwardersGen.conflictingNames$lzycompute$1->rgb(204,57,57)
scala/tools/nsc/backend/jvm/BCodeHelpers$BCForwardersGen.staticForwarderGenericSignature$1->rgb(208,62,62)
scala/tools/nsc/backend/jvm/BCodeHelpers$BCJGenSigGen.$anonfun$getGenericSignature$1->rgb(243,113,113)
scala/tools/nsc/backend/jvm/BCodeHelpers$BCJGenSigGen.getGenericSignature->rgb(243,113,113)
scala/tools/nsc/backend/jvm/BCodeHelpers$BCJGenSigGen.getGenericSignature$->rgb(206,59,59)
scala/tools/nsc/backend/jvm/BCodeHelpers$JCommonBuilder.addForwarders->rgb(216,73,73)
scala/tools/nsc/backend/jvm/BCodeHelpers$JCommonBuilder.getGenericSignature->rgb(205,58,58)
scala/tools/nsc/backend/jvm/BCodeHelpers$JMirrorBuilder.genMirrorClass->rgb(238,105,105)
scala/tools/nsc/backend/jvm/BCodeHelpers.$anonfun$completeSilentlyAndCheckErroneous$1->rgb(236,103,103)
scala/tools/nsc/backend/jvm/BCodeHelpers.completeSilentlyAndCheckErroneous->rgb(230,95,95)
scala/tools/nsc/backend/jvm/BCodeIdiomatic$LabelDefsFinder.traverse->rgb(230,95,95)
scala/tools/nsc/backend/jvm/BCodeSkelBuilder$PlainSkelBuilder$locals$.makeLocal->rgb(227,90,90)
scala/tools/nsc/backend/jvm/BCodeSkelBuilder$PlainSkelBuilder.$anonfun$addClassFields$1->rgb(220,80,80)
scala/tools/nsc/backend/jvm/BCodeSkelBuilder$PlainSkelBuilder.$anonfun$gen$7->rgb(211,66,66)
scala/tools/nsc/backend/jvm/BCodeSkelBuilder$PlainSkelBuilder.$anonfun$genDefDef$3->rgb(236,102,102)
scala/tools/nsc/backend/jvm/BCodeSkelBuilder$PlainSkelBuilder.addClassFields->rgb(209,63,63)
scala/tools/nsc/backend/jvm/BCodeSkelBuilder$PlainSkelBuilder.addForwarders->rgb(233,99,99)
scala/tools/nsc/backend/jvm/BCodeSkelBuilder$PlainSkelBuilder.addRemoteExceptionAnnot->rgb(202,53,53)
scala/tools/nsc/backend/jvm/BCodeSkelBuilder$PlainSkelBuilder.emitAnnotations->rgb(219,78,78)
scala/tools/nsc/backend/jvm/BCodeSkelBuilder$PlainSkelBuilder.emitNormalMethodBody$1->rgb(240,108,108)
scala/tools/nsc/backend/jvm/BCodeSkelBuilder$PlainSkelBuilder.gen->rgb(229,93,93)
scala/tools/nsc/backend/jvm/BCodeSkelBuilder$PlainSkelBuilder.genDefDef->rgb(211,66,66)
scala/tools/nsc/backend/jvm/BCodeSkelBuilder$PlainSkelBuilder.genPlainClass->rgb(222,83,83)
scala/tools/nsc/backend/jvm/BCodeSkelBuilder$PlainSkelBuilder.getGenericSignature->rgb(248,120,120)
scala/tools/nsc/backend/jvm/BCodeSkelBuilder$PlainSkelBuilder.initJClass->rgb(211,67,67)
scala/tools/nsc/backend/jvm/BCodeSkelBuilder$PlainSkelBuilder.initJMethod->rgb(234,99,99)
scala/tools/nsc/backend/jvm/BCodeSkelBuilder$PlainSkelBuilder.resetMethodBookkeeping->rgb(252,125,125)
scala/tools/nsc/backend/jvm/BCodeSkelBuilder$PlainSkelBuilder.tpeTK->rgb(225,86,86)
scala/tools/nsc/backend/jvm/BCodeSyncAndTry$SyncAndTryBuilder.genSynchronized->rgb(201,52,52)
scala/tools/nsc/backend/jvm/BTypes$Lazy$$Lambda$1445/242041363.apply$mcV$sp->rgb(237,104,104)
scala/tools/nsc/backend/jvm/BTypes$Lazy$$Lambda$1449/227791972.apply$mcV$sp->rgb(239,106,106)
scala/tools/nsc/backend/jvm/BTypes$Lazy$$Lambda$1449/973566614.apply$mcV$sp->rgb(243,113,113)
scala/tools/nsc/backend/jvm/BTypes$Lazy.$anonfun$force$1->rgb(235,101,101)
scala/tools/nsc/backend/jvm/BTypes$Lazy.$anonfun$initFunction$1->rgb(231,96,96)
scala/tools/nsc/backend/jvm/BTypes$Lazy.$anonfun$onForce$2->rgb(237,104,104)
scala/tools/nsc/backend/jvm/BTypes$Lazy.force->rgb(242,111,111)
scala/tools/nsc/backend/jvm/BTypes$LazyVar.$anonfun$get$1->rgb(242,112,112)
scala/tools/nsc/backend/jvm/BTypes$LazyVar.get->rgb(227,89,89)
scala/tools/nsc/backend/jvm/BTypes.cachedClassBType->rgb(228,92,92)
scala/tools/nsc/backend/jvm/BTypesFromSymbols$$Lambda$1452/435754526.apply->rgb(218,76,76)
scala/tools/nsc/backend/jvm/BTypesFromSymbols$$Lambda$1452/775401155.apply->rgb(213,69,69)
scala/tools/nsc/backend/jvm/BTypesFromSymbols$$Lambda$1455/630082322.apply->rgb(203,55,55)
scala/tools/nsc/backend/jvm/BTypesFromSymbols$$Lambda$1455/689764946.apply->rgb(219,78,78)
scala/tools/nsc/backend/jvm/BTypesFromSymbols.$anonfun$buildInlineInfoFromClassSymbol$6->rgb(243,112,112)
scala/tools/nsc/backend/jvm/BTypesFromSymbols.$anonfun$methodBTypeFromMethodType$1->rgb(234,100,100)
scala/tools/nsc/backend/jvm/BTypesFromSymbols.$anonfun$typeToBType$1->rgb(234,100,100)
scala/tools/nsc/backend/jvm/BTypesFromSymbols.buildInlineInfo->rgb(203,55,55)
scala/tools/nsc/backend/jvm/BTypesFromSymbols.buildInlineInfoFromClassSymbol->rgb(218,77,77)
scala/tools/nsc/backend/jvm/BTypesFromSymbols.classBTypeFromSymbol->rgb(221,81,81)
scala/tools/nsc/backend/jvm/BTypesFromSymbols.isRemote->rgb(214,71,71)
scala/tools/nsc/backend/jvm/BTypesFromSymbols.javaFieldFlags->rgb(229,93,93)
scala/tools/nsc/backend/jvm/BTypesFromSymbols.javaFlags->rgb(220,79,79)
scala/tools/nsc/backend/jvm/BTypesFromSymbols.methodBTypeFromMethodType->rgb(204,56,56)
scala/tools/nsc/backend/jvm/BTypesFromSymbols.methodBTypeFromSymbol->rgb(217,74,74)
scala/tools/nsc/backend/jvm/BTypesFromSymbols.primitiveOrClassToBType$1->rgb(248,120,120)
scala/tools/nsc/backend/jvm/BTypesFromSymbols.setClassInfo->rgb(216,73,73)
scala/tools/nsc/backend/jvm/BTypesFromSymbols.typeToBType->rgb(204,57,57)
scala/tools/nsc/backend/jvm/ClassfileWriter.write->rgb(236,103,103)
scala/tools/nsc/backend/jvm/ClassfileWriter.writeBytes->rgb(224,85,85)
scala/tools/nsc/backend/jvm/CodeGen.$anonfun$genUnit$2->rgb(224,86,86)
scala/tools/nsc/backend/jvm/CodeGen.genClass->rgb(224,85,85)
scala/tools/nsc/backend/jvm/CodeGen.genClassDef$1->rgb(243,113,113)
scala/tools/nsc/backend/jvm/CodeGen.genClassDefs$1->rgb(247,119,119)
scala/tools/nsc/backend/jvm/CodeGen.genMirrorClass->rgb(235,102,102)
scala/tools/nsc/backend/jvm/CodeGen.genUnit->rgb(202,53,53)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols$$Lambda$1485/1954356792.apply->rgb(203,55,55)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols$$Lambda$1485/873968803.apply->rgb(246,117,117)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols$$Lambda$1486/1260585735.apply->rgb(250,123,123)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols$$Lambda$1486/1841880953.apply->rgb(241,110,110)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols$$Lambda$1487/1364652862.apply->rgb(253,128,128)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols$$Lambda$1487/1516123684.apply->rgb(237,104,104)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols$$Lambda$1490/1793264737.apply->rgb(205,58,58)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols$$Lambda$1490/273804896.apply->rgb(213,69,69)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols$$Lambda$1510/222287666.apply->rgb(241,110,110)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols$$Lambda$1510/287473641.apply->rgb(216,74,74)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols$$Lambda$1512/1054117804.apply->rgb(216,74,74)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols$$Lambda$1512/1235593805.apply->rgb(237,105,105)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols$$Lambda$1552/139557135.apply->rgb(250,124,124)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols$$Lambda$1552/42565166.apply->rgb(213,69,69)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols$$Lambda$1558/1294178854.apply->rgb(234,100,100)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols$$Lambda$1558/162504411.apply->rgb(248,121,121)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols$$Lambda$1560/8642783.apply->rgb(205,57,57)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols$$Lambda$1560/991856300.apply->rgb(206,60,60)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols.$anonfun$_jliLambdaMetafactoryRef$1->rgb(219,78,78)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols.$anonfun$_jliMethodHandleRef$1->rgb(233,98,98)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols.$anonfun$_jliMethodHandlesLookupRef$1->rgb(205,57,57)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols.$anonfun$_jliMethodTypeRef$1->rgb(225,87,87)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols.$anonfun$_jliSerializedLambdaRef$1->rgb(218,77,77)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols.$anonfun$_lambdaDeserializeBootstrapHandle$1->rgb(236,103,103)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols.$anonfun$_lambdaMetaFactoryAltMetafactoryHandle$1->rgb(233,99,99)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols.$anonfun$_srBoxesRuntimeBoxToMethods$1->rgb(207,61,61)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols.$anonfun$srBoxesRuntimeMethods$1->rgb(227,90,90)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols.jliLambdaMetafactoryRef->rgb(228,91,91)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols.jliMethodHandleRef->rgb(214,70,70)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols.jliMethodHandlesLookupRef->rgb(242,111,111)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols.jliMethodTypeRef->rgb(213,69,69)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols.jliSerializedLambdaRef->rgb(203,54,54)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols.lambdaDeserializeBootstrapHandle->rgb(239,108,108)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols.lambdaMetaFactoryAltMetafactoryHandle->rgb(204,56,56)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols.methodNameAndType->rgb(207,60,60)
scala/tools/nsc/backend/jvm/CoreBTypesFromSymbols.srBoxesRuntimeBoxToMethods->rgb(238,105,105)
scala/tools/nsc/backend/jvm/GenBCode$BCodePhase.$anonfun$apply$1->rgb(250,123,123)
scala/tools/nsc/backend/jvm/GenBCode$BCodePhase.$anonfun$run$1->rgb(225,87,87)
scala/tools/nsc/backend/jvm/GenBCode$BCodePhase.apply->rgb(204,56,56)
scala/tools/nsc/backend/jvm/GenBCode$BCodePhase.run->rgb(205,57,57)
scala/tools/nsc/backend/jvm/GenBCode$BCodePhase.super$run->rgb(235,101,101)
scala/tools/nsc/backend/jvm/PostProcessor$$Lambda$1544/1222700621.apply->rgb(231,95,95)
scala/tools/nsc/backend/jvm/PostProcessor$$Lambda$1544/683259660.apply->rgb(204,56,56)
scala/tools/nsc/backend/jvm/PostProcessor.$anonfun$localOptimizations$1->rgb(235,100,100)
scala/tools/nsc/backend/jvm/PostProcessor.$anonfun$postProcessAndSendToDisk$2->rgb(249,122,122)
scala/tools/nsc/backend/jvm/PostProcessor.$anonfun$postProcessAndSendToDisk$2$adapted->rgb(246,116,116)
scala/tools/nsc/backend/jvm/PostProcessor.localOptimizations->rgb(222,83,83)
scala/tools/nsc/backend/jvm/PostProcessor.postProcessAndSendToDisk->rgb(228,92,92)
scala/tools/nsc/backend/jvm/PostProcessor.serializeClass->rgb(236,103,103)
scala/tools/nsc/backend/jvm/PostProcessor.setInnerClasses->rgb(246,118,118)
scala/tools/nsc/backend/jvm/analysis/BackendUtils$AsmAnalyzer.<init>->rgb(253,127,127)
scala/tools/nsc/backend/jvm/analysis/BackendUtils$Collector.declaredNestedClasses->rgb(207,60,60)
scala/tools/nsc/backend/jvm/analysis/BackendUtils$NestedClassesCollector$$Lambda$1572/1664079885.apply->rgb(209,64,64)
scala/tools/nsc/backend/jvm/analysis/BackendUtils$NestedClassesCollector$$Lambda$1572/335183421.apply->rgb(238,105,105)
scala/tools/nsc/backend/jvm/analysis/BackendUtils$NestedClassesCollector.$anonfun$visit$3->rgb(211,67,67)
scala/tools/nsc/backend/jvm/analysis/BackendUtils$NestedClassesCollector.$anonfun$visit$3$adapted->rgb(208,61,61)
scala/tools/nsc/backend/jvm/analysis/BackendUtils$NestedClassesCollector.visit->rgb(239,107,107)
scala/tools/nsc/backend/jvm/analysis/BackendUtils$NestedClassesCollector.visitDescriptor->rgb(209,64,64)
scala/tools/nsc/backend/jvm/analysis/BackendUtils$NestedClassesCollector.visitInternalName->rgb(252,126,126)
scala/tools/nsc/backend/jvm/analysis/BackendUtils.addLambdaDeserialize->rgb(212,68,68)
scala/tools/nsc/backend/jvm/analysis/BackendUtils.collectNestedClasses->rgb(232,97,97)
scala/tools/nsc/backend/jvm/analysis/BackendUtils.computeMaxLocalsMaxStack->rgb(242,111,111)
scala/tools/nsc/backend/jvm/analysis/BackendUtils.emitLambdaDeserializeIndy$1->rgb(224,86,86)
scala/tools/nsc/backend/jvm/opt/BytecodeUtils$.labelReferences->rgb(200,50,50)
scala/tools/nsc/backend/jvm/opt/InlineInfoAttribute$$Lambda$1584/1985398780.apply->rgb(207,61,61)
scala/tools/nsc/backend/jvm/opt/InlineInfoAttribute.$anonfun$write$5->rgb(216,74,74)
scala/tools/nsc/backend/jvm/opt/InlineInfoAttribute.write->rgb(236,102,102)
scala/tools/nsc/backend/jvm/opt/LocalOpt$$Lambda$1545/1223697256.apply->rgb(221,81,81)
scala/tools/nsc/backend/jvm/opt/LocalOpt$$Lambda$1545/208157546.apply->rgb(236,103,103)
scala/tools/nsc/backend/jvm/opt/LocalOpt.$anonfun$methodOptimizations$1->rgb(202,53,53)
scala/tools/nsc/backend/jvm/opt/LocalOpt.$anonfun$methodOptimizations$1$adapted->rgb(201,52,52)
scala/tools/nsc/backend/jvm/opt/LocalOpt.methodOptimizations->rgb(205,58,58)
scala/tools/nsc/backend/jvm/opt/LocalOpt.removalRound$2->rgb(219,78,78)
scala/tools/nsc/backend/jvm/opt/LocalOpt.removeUnreachableCodeImpl->rgb(217,76,76)
scala/tools/nsc/backend/jvm/opt/LocalOptImpls$.removeEmptyLabelNodes->rgb(230,94,94)
scala/tools/nsc/classpath/ClassFileEntryImpl.name->rgb(220,80,80)
scala/tools/nsc/classpath/ClassPathFactory.$anonfun$contentsOfDirsInPath$1->rgb(214,71,71)
scala/tools/nsc/classpath/ClassPathFactory.contentsOfDirsInPath->rgb(250,123,123)
scala/tools/nsc/classpath/FileUtils$.stripClassExtension->rgb(210,64,64)
scala/tools/nsc/generated/HotScalacBenchmark_compile_jmhTest.compile_SampleTime->rgb(246,118,118)
scala/tools/nsc/generated/HotScalacBenchmark_compile_jmhTest.compile_sample_jmhStub->rgb(211,66,66)
scala/tools/nsc/reporters/AbstractReporter.info0->rgb(204,57,57)
scala/tools/nsc/reporters/ConsoleReporter.display->rgb(210,65,65)
scala/tools/nsc/reporters/ConsoleReporter.print->rgb(238,106,106)
scala/tools/nsc/reporters/ConsoleReporter.printMessage->rgb(202,53,53)
scala/tools/nsc/settings/MutableSettings$OutputDirs.setSingleOutput->rgb(201,51,51)
scala/tools/nsc/settings/MutableSettings$OutputSetting.value_$eq->rgb(233,98,98)
scala/tools/nsc/settings/MutableSettings.<init>->rgb(208,61,61)
scala/tools/nsc/settings/ScalaSettings.$init$->rgb(222,83,83)
scala/tools/nsc/symtab/SymbolLoaders$ClassfileLoader$classfileParser$.lookupMemberAtTyperPhaseIfPossible->rgb(229,92,92)
scala/tools/nsc/symtab/SymbolLoaders$ClassfileLoader.doComplete->rgb(220,80,80)
scala/tools/nsc/symtab/SymbolLoaders$PackageLoader$$Lambda$146/1561341621.apply->rgb(223,84,84)
scala/tools/nsc/symtab/SymbolLoaders$PackageLoader$$Lambda$146/49576333.apply->rgb(230,94,94)
scala/tools/nsc/symtab/SymbolLoaders$PackageLoader.$anonfun$doComplete$2->rgb(240,108,108)
scala/tools/nsc/symtab/SymbolLoaders$PackageLoader.$anonfun$doComplete$2$adapted->rgb(223,84,84)
scala/tools/nsc/symtab/SymbolLoaders$PackageLoader.doComplete->rgb(217,75,75)
scala/tools/nsc/symtab/SymbolLoaders$SymbolLoader.complete->rgb(254,128,128)
scala/tools/nsc/symtab/SymbolLoaders$SymbolLoader.initRoot->rgb(228,91,91)
scala/tools/nsc/symtab/SymbolLoaders$SymbolLoader.load->rgb(222,82,82)
scala/tools/nsc/symtab/SymbolLoaders$moduleClassLoader$.doComplete->rgb(222,82,82)
scala/tools/nsc/symtab/SymbolLoaders.enterClassAndModule->rgb(208,62,62)
scala/tools/nsc/symtab/SymbolLoaders.enterIfNew->rgb(214,71,71)
scala/tools/nsc/symtab/SymbolLoaders.initializeFromClassPath->rgb(237,103,103)
scala/tools/nsc/symtab/classfile/AbstractFileReader.<init>->rgb(227,90,90)
scala/tools/nsc/symtab/classfile/ClassfileParser$$Lambda$175/1322683273.apply$mcV$sp->rgb(226,87,87)
scala/tools/nsc/symtab/classfile/ClassfileParser$$Lambda$175/1644412194.apply$mcV$sp->rgb(217,75,75)
scala/tools/nsc/symtab/classfile/ClassfileParser$ConstantPool.getClassSymbol->rgb(226,88,88)
scala/tools/nsc/symtab/classfile/ClassfileParser$ConstantPool.getSuperClass->rgb(244,115,115)
scala/tools/nsc/symtab/classfile/ClassfileParser$ConstantPool.getType->rgb(215,72,72)
scala/tools/nsc/symtab/classfile/ClassfileParser$innerClasses$.innerSymbol->rgb(202,54,54)
scala/tools/nsc/symtab/classfile/ClassfileParser.$anonfun$parse$1->rgb(217,75,75)
scala/tools/nsc/symtab/classfile/ClassfileParser.$anonfun$parseAttributes$15->rgb(225,86,86)
scala/tools/nsc/symtab/classfile/ClassfileParser.$anonfun$parseAttributes$16->rgb(214,70,70)
scala/tools/nsc/symtab/classfile/ClassfileParser.$anonfun$parseAttributes$17->rgb(225,87,87)
scala/tools/nsc/symtab/classfile/ClassfileParser.$anonfun$parseClass$1->rgb(247,118,118)
scala/tools/nsc/symtab/classfile/ClassfileParser.$anonfun$parseClass$2->rgb(224,86,86)
scala/tools/nsc/symtab/classfile/ClassfileParser.$anonfun$parseClass$3->rgb(211,66,66)
scala/tools/nsc/symtab/classfile/ClassfileParser.$anonfun$parseClass$4->rgb(211,66,66)
scala/tools/nsc/symtab/classfile/ClassfileParser.$anonfun$parseClass$5->rgb(202,53,53)
scala/tools/nsc/symtab/classfile/ClassfileParser.classNameToSymbol->rgb(211,67,67)
scala/tools/nsc/symtab/classfile/ClassfileParser.lookupClass->rgb(234,100,100)
scala/tools/nsc/symtab/classfile/ClassfileParser.lookupTopLevel$1->rgb(249,121,121)
scala/tools/nsc/symtab/classfile/ClassfileParser.parse->rgb(229,93,93)
scala/tools/nsc/symtab/classfile/ClassfileParser.parseAnnotation$1->rgb(231,95,95)
scala/tools/nsc/symtab/classfile/ClassfileParser.parseAnnotations$1->rgb(218,77,77)
scala/tools/nsc/symtab/classfile/ClassfileParser.parseAttribute$1->rgb(231,95,95)
scala/tools/nsc/symtab/classfile/ClassfileParser.parseAttributes->rgb(251,124,124)
scala/tools/nsc/symtab/classfile/ClassfileParser.parseClass->rgb(239,107,107)
scala/tools/nsc/symtab/classfile/ClassfileParser.parseExceptions$1->rgb(236,102,102)
scala/tools/nsc/symtab/classfile/ClassfileParser.parseField->rgb(225,87,87)
scala/tools/nsc/symtab/classfile/ClassfileParser.parseMethod->rgb(254,129,129)
scala/tools/nsc/symtab/classfile/ClassfileParser.parseParents$1->rgb(251,124,124)
scala/tools/nsc/symtab/classfile/ClassfileParser.queueLoad$1->rgb(238,106,106)
scala/tools/nsc/symtab/classfile/ClassfileParser.readType->rgb(210,65,65)
scala/tools/nsc/symtab/classfile/ClassfileParser.scala$tools$nsc$symtab$classfile$ClassfileParser$$sigToType->rgb(234,100,100)
scala/tools/nsc/symtab/classfile/ClassfileParser.sig2type$1->rgb(227,89,89)
scala/tools/nsc/symtab/classfile/Pickler$Pickle.$anonfun$putSymbols$1->rgb(249,122,122)
scala/tools/nsc/symtab/classfile/Pickler$Pickle.$anonfun$writeArray$1->rgb(218,77,77)
scala/tools/nsc/symtab/classfile/Pickler$Pickle.isLocalToPickle->rgb(212,68,68)
scala/tools/nsc/symtab/classfile/Pickler$Pickle.putSymbol->rgb(230,94,94)
scala/tools/nsc/symtab/classfile/Pickler$Pickle.putSymbols->rgb(201,52,52)
scala/tools/nsc/symtab/classfile/Pickler$Pickle.scala$tools$nsc$symtab$classfile$Pickler$Pickle$$putType->rgb(254,129,129)
scala/tools/nsc/symtab/classfile/Pickler$Pickle.writeArray->rgb(223,84,84)
scala/tools/nsc/symtab/classfile/Pickler$Pickle.writeBody$1->rgb(253,127,127)
scala/tools/nsc/symtab/classfile/Pickler$Pickle.writeEntry->rgb(212,68,68)
scala/tools/nsc/symtab/classfile/Pickler$Pickle.writeLocalSymbolBody$1->rgb(236,103,103)
scala/tools/nsc/symtab/classfile/Pickler$Pickle.writeSymbolBody$1->rgb(231,96,96)
scala/tools/nsc/symtab/classfile/Pickler$PicklePhase.$anonfun$apply$2->rgb(206,59,59)
scala/tools/nsc/symtab/classfile/Pickler$PicklePhase.add$1->rgb(222,82,82)
scala/tools/nsc/symtab/classfile/Pickler$PicklePhase.apply->rgb(218,76,76)
scala/tools/nsc/symtab/classfile/Pickler$PicklePhase.pickle$1->rgb(222,83,83)
scala/tools/nsc/transform/AccessorSynthesis$AccessorTreeSynthesis$UncheckedAccessorSynth.addDef->rgb(208,62,62)
scala/tools/nsc/transform/AccessorSynthesis$AccessorTreeSynthesis$UncheckedAccessorSynth.addDefDef->rgb(224,85,85)
scala/tools/nsc/transform/AccessorSynthesis$CheckedAccessorTreeSynthesis$SynthLazyAccessorsIn.$anonfun$expandLazyClassMember$1->rgb(252,126,126)
scala/tools/nsc/transform/AccessorSynthesis$CheckedAccessorTreeSynthesis$SynthLazyAccessorsIn.$anonfun$expandLazyClassMember$2->rgb(243,112,112)
scala/tools/nsc/transform/AccessorSynthesis$CheckedAccessorTreeSynthesis$SynthLazyAccessorsIn.expandLazyClassMember->rgb(204,55,55)
scala/tools/nsc/transform/CleanUp$CleanUpTransformer.transform->rgb(252,125,125)
scala/tools/nsc/transform/CleanUp$CleanUpTransformer.transformTemplate->rgb(225,87,87)
scala/tools/nsc/transform/Constructors$ConstructorTransformer$$Lambda$1370/1486441020.apply->rgb(237,104,104)
scala/tools/nsc/transform/Constructors$ConstructorTransformer$$Lambda$1370/36546028.apply->rgb(233,98,98)
scala/tools/nsc/transform/Constructors$ConstructorTransformer.$anonfun$transform$1->rgb(221,80,80)
scala/tools/nsc/transform/Constructors$ConstructorTransformer.transform->rgb(252,126,126)
scala/tools/nsc/transform/Constructors$TemplateTransformer$Triage.$anonfun$triage$4->rgb(226,88,88)
scala/tools/nsc/transform/Constructors$TemplateTransformer$Triage.<init>->rgb(233,98,98)
scala/tools/nsc/transform/Constructors$TemplateTransformer$Triage.triage->rgb(233,98,98)
scala/tools/nsc/transform/Constructors$TemplateTransformer.<init>->rgb(220,79,79)
scala/tools/nsc/transform/Constructors$TemplateTransformer.transformed->rgb(221,81,81)
scala/tools/nsc/transform/Delambdafy$DelambdafyTransformer$$Lambda$1421/1670243621.apply->rgb(217,75,75)
scala/tools/nsc/transform/Delambdafy$DelambdafyTransformer$$Lambda$1421/211512539.apply->rgb(221,81,81)
scala/tools/nsc/transform/Delambdafy$DelambdafyTransformer.$anonfun$mkLambdaMetaFactoryCall$4->rgb(233,99,99)
scala/tools/nsc/transform/Delambdafy$DelambdafyTransformer.$anonfun$transform$2->rgb(236,103,103)
scala/tools/nsc/transform/Delambdafy$DelambdafyTransformer.$anonfun$transform$3->rgb(245,116,116)
scala/tools/nsc/transform/Delambdafy$DelambdafyTransformer.mkLambdaMetaFactoryCall->rgb(239,107,107)
scala/tools/nsc/transform/Delambdafy$DelambdafyTransformer.pretransform$1->rgb(248,120,120)
scala/tools/nsc/transform/Delambdafy$DelambdafyTransformer.transform->rgb(252,125,125)
scala/tools/nsc/transform/Delambdafy$DelambdafyTransformer.transformFunction->rgb(221,80,80)
scala/tools/nsc/transform/Erasure$ComputeBridges$$Lambda$1299/1237778434.apply->rgb(203,55,55)
scala/tools/nsc/transform/Erasure$ComputeBridges$BridgesCursor.<init>->rgb(236,103,103)
scala/tools/nsc/transform/Erasure$ComputeBridges.$anonfun$opc$1->rgb(219,78,78)
scala/tools/nsc/transform/Erasure$ComputeBridges.<init>->rgb(252,126,126)
scala/tools/nsc/transform/Erasure$ComputeBridges.checkPair->rgb(253,127,127)
scala/tools/nsc/transform/Erasure$ComputeBridges.compute->rgb(235,101,101)
scala/tools/nsc/transform/Erasure$Eraser.adaptMember->rgb(228,91,91)
scala/tools/nsc/transform/Erasure$Eraser.typed1->rgb(250,122,122)
scala/tools/nsc/transform/Erasure$ErasureTransformer$$anon$1.preErase->rgb(248,120,120)
scala/tools/nsc/transform/Erasure$ErasureTransformer$$anon$1.transform->rgb(203,54,54)
scala/tools/nsc/transform/Erasure$ErasureTransformer$DoubleDefsCursor.<init>->rgb(214,70,70)
scala/tools/nsc/transform/Erasure$ErasureTransformer.$anonfun$transform$4->rgb(231,95,95)
scala/tools/nsc/transform/Erasure$ErasureTransformer.addBridges->rgb(207,60,60)
scala/tools/nsc/transform/Erasure$ErasureTransformer.bridgeDefs->rgb(251,125,125)
scala/tools/nsc/transform/Erasure$ErasureTransformer.scala$tools$nsc$transform$Erasure$ErasureTransformer$$checkNoDoubleDefs->rgb(247,119,119)
scala/tools/nsc/transform/Erasure$ErasureTransformer.transform->rgb(214,71,71)
scala/tools/nsc/transform/Erasure$NeedsSigCollector$.traverse->rgb(254,129,129)
scala/tools/nsc/transform/Erasure$mixinTransformer$.transform->rgb(254,128,128)
scala/tools/nsc/transform/Erasure.$anonfun$javaSig$1->rgb(231,96,96)
scala/tools/nsc/transform/Erasure.javaSig0->rgb(242,112,112)
scala/tools/nsc/transform/Erasure.jsig$1->rgb(209,64,64)
scala/tools/nsc/transform/Erasure.needs$1->rgb(235,102,102)
scala/tools/nsc/transform/Erasure.needsJavaSig->rgb(228,91,91)
scala/tools/nsc/transform/Erasure.specialErasure->rgb(251,125,125)
scala/tools/nsc/transform/Erasure.transformInfo->rgb(235,101,101)
scala/tools/nsc/transform/ExplicitOuter$ExplicitOuterTransformer.$anonfun$transformUnit$1->rgb(243,113,113)
scala/tools/nsc/transform/ExplicitOuter$ExplicitOuterTransformer.super$transformUnit->rgb(234,100,100)
scala/tools/nsc/transform/ExplicitOuter$ExplicitOuterTransformer.transform->rgb(249,122,122)
scala/tools/nsc/transform/ExplicitOuter$ExplicitOuterTransformer.transformUnit->rgb(217,75,75)
scala/tools/nsc/transform/ExplicitOuter$OuterPathTransformer.scala$reflect$internal$Trees$UnderConstructionTransformer$$super$transform->rgb(236,103,103)
scala/tools/nsc/transform/ExplicitOuter$OuterPathTransformer.transform->rgb(253,127,127)
scala/tools/nsc/transform/ExplicitOuter.transformInfo->rgb(226,87,87)
scala/tools/nsc/transform/Fields$FieldMemoization.<init>->rgb(212,68,68)
scala/tools/nsc/transform/Fields$FieldsTransformer$$Lambda$1156/1330935735.apply->rgb(213,69,69)
scala/tools/nsc/transform/Fields$FieldsTransformer$$Lambda$1156/950685240.apply->rgb(223,84,84)
scala/tools/nsc/transform/Fields$FieldsTransformer$$Lambda$1165/1787513561.apply->rgb(242,111,111)
scala/tools/nsc/transform/Fields$FieldsTransformer$$Lambda$1165/655472355.apply->rgb(219,78,78)
scala/tools/nsc/transform/Fields$FieldsTransformer.$anonfun$fieldsAndAccessors$2->rgb(245,116,116)
scala/tools/nsc/transform/Fields$FieldsTransformer.$anonfun$fieldsAndAccessors$3->rgb(241,110,110)
scala/tools/nsc/transform/Fields$FieldsTransformer.$anonfun$fieldsAndAccessors$5->rgb(201,52,52)
scala/tools/nsc/transform/Fields$FieldsTransformer.$anonfun$transformStats$3->rgb(240,108,108)
scala/tools/nsc/transform/Fields$FieldsTransformer.$anonfun$transformStats$4->rgb(206,59,59)
scala/tools/nsc/transform/Fields$FieldsTransformer.fieldsAndAccessors->rgb(245,116,116)
scala/tools/nsc/transform/Fields$FieldsTransformer.getterBody$1->rgb(234,100,100)
scala/tools/nsc/transform/Fields$FieldsTransformer.mkAccessor->rgb(200,50,50)
scala/tools/nsc/transform/Fields$FieldsTransformer.mkLazyLocalDef->rgb(220,79,79)
scala/tools/nsc/transform/Fields$FieldsTransformer.moduleAccessorBody$1->rgb(212,68,68)
scala/tools/nsc/transform/Fields$FieldsTransformer.setterBody$1->rgb(244,115,115)
scala/tools/nsc/transform/Fields$FieldsTransformer.superLazy$1->rgb(234,100,100)
scala/tools/nsc/transform/Fields$FieldsTransformer.transform->rgb(211,66,66)
scala/tools/nsc/transform/Fields$FieldsTransformer.transformStats->rgb(236,103,103)
scala/tools/nsc/transform/Fields$FieldsTransformer.transformTermsAtExprOwner->rgb(231,95,95)
scala/tools/nsc/transform/Fields$FieldsTransformer.typedPos->rgb(202,53,53)
scala/tools/nsc/transform/Fields$synthFieldsAndAccessors$.$anonfun$apply$1->rgb(217,76,76)
scala/tools/nsc/transform/Fields$synthFieldsAndAccessors$.$anonfun$apply$6->rgb(215,71,71)
scala/tools/nsc/transform/Fields$synthFieldsAndAccessors$.$anonfun$apply$7->rgb(226,89,89)
scala/tools/nsc/transform/Fields$synthFieldsAndAccessors$.apply->rgb(200,51,51)
scala/tools/nsc/transform/Fields.fieldMemoizationIn->rgb(234,100,100)
scala/tools/nsc/transform/Fields.fieldTypeOfAccessorIn->rgb(249,121,121)
scala/tools/nsc/transform/Fields.scala$tools$nsc$transform$Fields$$fieldTypeForGetterIn->rgb(244,114,114)
scala/tools/nsc/transform/Fields.transformInfo->rgb(211,66,66)
scala/tools/nsc/transform/Flatten$$anon$1.apply->rgb(244,115,115)
scala/tools/nsc/transform/Flatten$Flattener.postTransform->rgb(203,55,55)
scala/tools/nsc/transform/Flatten$Flattener.transform->rgb(213,69,69)
scala/tools/nsc/transform/Flatten$Flattener.transformStats->rgb(246,117,117)
scala/tools/nsc/transform/Flatten.scala$tools$nsc$transform$Flatten$$isFlattenablePrefix->rgb(225,86,86)
scala/tools/nsc/transform/InfoTransform$Phase$$anon$1.transform->rgb(235,101,101)
scala/tools/nsc/transform/LambdaLift$$Lambda$1365/102489153.apply->rgb(237,104,104)
scala/tools/nsc/transform/LambdaLift$$Lambda$1365/389230187.apply->rgb(243,113,113)
scala/tools/nsc/transform/LambdaLift$$anon$1.apply->rgb(248,119,119)
scala/tools/nsc/transform/LambdaLift$LambdaLifter$$anon$2.traverse->rgb(204,56,56)
scala/tools/nsc/transform/LambdaLift$LambdaLifter.$anonfun$transformUnit$1->rgb(238,106,106)
scala/tools/nsc/transform/LambdaLift$LambdaLifter.computeFreeVars->rgb(233,98,98)
scala/tools/nsc/transform/LambdaLift$LambdaLifter.postTransform->rgb(229,92,92)
scala/tools/nsc/transform/LambdaLift$LambdaLifter.preTransform->rgb(207,60,60)
scala/tools/nsc/transform/LambdaLift$LambdaLifter.scala$tools$nsc$transform$LambdaLift$LambdaLifter$$logicallyEnclosingMember->rgb(228,90,90)
scala/tools/nsc/transform/LambdaLift$LambdaLifter.super$transformUnit->rgb(213,69,69)
scala/tools/nsc/transform/LambdaLift$LambdaLifter.transform->rgb(216,74,74)
scala/tools/nsc/transform/LambdaLift$LambdaLifter.transformStats->rgb(216,73,73)
scala/tools/nsc/transform/LambdaLift$LambdaLifter.transformUnit->rgb(240,109,109)
scala/tools/nsc/transform/LambdaLift.$anonfun$refCreateMethod$1->rgb(235,101,101)
scala/tools/nsc/transform/LambdaLift.refCreateMethod$lzycompute->rgb(225,86,86)
scala/tools/nsc/transform/LambdaLift.scala$tools$nsc$transform$LambdaLift$$refCreateMethod->rgb(217,74,74)
scala/tools/nsc/transform/Mixin$$Lambda$1392/1800000988.apply->rgb(227,89,89)
scala/tools/nsc/transform/Mixin$$Lambda$1392/572412354.apply->rgb(207,61,61)
scala/tools/nsc/transform/Mixin$$Lambda$1402/2121262513.apply->rgb(246,116,116)
scala/tools/nsc/transform/Mixin$$Lambda$1402/90496376.apply->rgb(206,58,58)
scala/tools/nsc/transform/Mixin$MixinTransformer$$Lambda$1396/1883105891.apply->rgb(238,106,106)
scala/tools/nsc/transform/Mixin$MixinTransformer$$Lambda$1396/2042788308.apply->rgb(250,123,123)
scala/tools/nsc/transform/Mixin$MixinTransformer.$anonfun$addNewDefs$2->rgb(250,123,123)
scala/tools/nsc/transform/Mixin$MixinTransformer.$anonfun$addNewDefs$2$adapted->rgb(233,98,98)
scala/tools/nsc/transform/Mixin$MixinTransformer.$anonfun$transform$1->rgb(233,98,98)
scala/tools/nsc/transform/Mixin$MixinTransformer.addNewDefs->rgb(217,74,74)
scala/tools/nsc/transform/Mixin$MixinTransformer.lazyValNullables->rgb(236,102,102)
scala/tools/nsc/transform/Mixin$MixinTransformer.postTransform->rgb(209,63,63)
scala/tools/nsc/transform/Mixin$MixinTransformer.preTransform->rgb(243,113,113)
scala/tools/nsc/transform/Mixin$MixinTransformer.transform->rgb(226,88,88)
scala/tools/nsc/transform/Mixin$MixinTransformer.typedPos->rgb(203,54,54)
scala/tools/nsc/transform/Mixin.$anonfun$addMixedinMembers$13->rgb(203,55,55)
scala/tools/nsc/transform/Mixin.$anonfun$addMixedinMembers$13$adapted->rgb(246,118,118)
scala/tools/nsc/transform/Mixin.$anonfun$addMixedinMembers$2->rgb(234,99,99)
scala/tools/nsc/transform/Mixin.$anonfun$addMixedinMembers$2$adapted->rgb(244,115,115)
scala/tools/nsc/transform/Mixin.$anonfun$cloneBeforeErasure$1->rgb(219,78,78)
scala/tools/nsc/transform/Mixin.addMixedinMembers->rgb(214,70,70)
scala/tools/nsc/transform/Mixin.cloneAndAddMember->rgb(218,77,77)
scala/tools/nsc/transform/Mixin.cloneAndAddMixinMember$1->rgb(220,79,79)
scala/tools/nsc/transform/Mixin.cloneBeforeErasure->rgb(233,98,98)
scala/tools/nsc/transform/Mixin.genForwarder$1->rgb(244,114,114)
scala/tools/nsc/transform/Mixin.mixinTraitForwarders$1->rgb(249,121,121)
scala/tools/nsc/transform/OverridingPairs$Cursor.<init>->rgb(210,65,65)
scala/tools/nsc/transform/PostErasure$PostErasureTransformer.transform->rgb(210,65,65)
scala/tools/nsc/transform/SpecializeTypes$$Lambda$1218/1597571657.apply->rgb(223,84,84)
scala/tools/nsc/transform/SpecializeTypes$$Lambda$1218/1937472265.apply->rgb(252,125,125)
scala/tools/nsc/transform/SpecializeTypes$$Lambda$1257/201173325.apply->rgb(229,93,93)
scala/tools/nsc/transform/SpecializeTypes$$Lambda$1257/767855800.apply->rgb(238,105,105)
scala/tools/nsc/transform/SpecializeTypes$$Lambda$1258/1647115124.apply->rgb(218,77,77)
scala/tools/nsc/transform/SpecializeTypes$$anon$2$$Lambda$1272/1520078073.apply->rgb(204,56,56)
scala/tools/nsc/transform/SpecializeTypes$$anon$2$$Lambda$1272/475792173.apply->rgb(230,94,94)
scala/tools/nsc/transform/SpecializeTypes$$anon$2.$anonfun$implSpecClasses$1->rgb(236,103,103)
scala/tools/nsc/transform/SpecializeTypes$$anon$2.$anonfun$transform$3->rgb(243,113,113)
scala/tools/nsc/transform/SpecializeTypes$$anon$2.$anonfun$transform1$21->rgb(248,120,120)
scala/tools/nsc/transform/SpecializeTypes$$anon$2.$anonfun$transform1$25->rgb(248,120,120)
scala/tools/nsc/transform/SpecializeTypes$$anon$2.implSpecClasses->rgb(236,103,103)
scala/tools/nsc/transform/SpecializeTypes$$anon$2.makeSpecializedMembers->rgb(240,108,108)
scala/tools/nsc/transform/SpecializeTypes$$anon$2.matchingSymbolInPrefix$1->rgb(203,55,55)
scala/tools/nsc/transform/SpecializeTypes$$anon$2.specSym$1->rgb(236,103,103)
scala/tools/nsc/transform/SpecializeTypes$$anon$2.transform->rgb(244,115,115)
scala/tools/nsc/transform/SpecializeTypes$$anon$2.transform1->rgb(207,60,60)
scala/tools/nsc/transform/SpecializeTypes$$anon$2.transformNew$1->rgb(238,106,106)
scala/tools/nsc/transform/SpecializeTypes$$anon$2.transformSelect$1->rgb(240,108,108)
scala/tools/nsc/transform/SpecializeTypes$$anon$2.transformTemplate$1->rgb(239,106,106)
scala/tools/nsc/transform/SpecializeTypes$$anon$3.$anonfun$apply$1->rgb(230,93,93)
scala/tools/nsc/transform/SpecializeTypes$$anon$3.apply->rgb(233,98,98)
scala/tools/nsc/transform/SpecializeTypes$SpecializationPhase$$Lambda$1287/1498997356.apply->rgb(230,93,93)
scala/tools/nsc/transform/SpecializeTypes$SpecializationPhase$$Lambda$1287/711991719.apply->rgb(252,125,125)
scala/tools/nsc/transform/SpecializeTypes$SpecializationPhase$$Lambda$1288/1568598435.apply->rgb(206,60,60)
scala/tools/nsc/transform/SpecializeTypes$SpecializationPhase$$Lambda$1288/1667761447.apply->rgb(219,78,78)
scala/tools/nsc/transform/SpecializeTypes$SpecializationPhase.$anonfun$run$1->rgb(201,52,52)
scala/tools/nsc/transform/SpecializeTypes$SpecializationPhase.$anonfun$run$2->rgb(223,84,84)
scala/tools/nsc/transform/SpecializeTypes$SpecializationPhase.$anonfun$run$3->rgb(205,57,57)
scala/tools/nsc/transform/SpecializeTypes$SpecializationPhase.run->rgb(236,102,102)
scala/tools/nsc/transform/SpecializeTypes$SpecializationTransformer.$anonfun$transform$5->rgb(208,62,62)
scala/tools/nsc/transform/SpecializeTypes$SpecializationTransformer.transform->rgb(237,104,104)
scala/tools/nsc/transform/SpecializeTypes.$anonfun$specialOverrides$9->rgb(208,61,61)
scala/tools/nsc/transform/SpecializeTypes.$anonfun$specializeClass$14->rgb(204,56,56)
scala/tools/nsc/transform/SpecializeTypes.$anonfun$specializeClass$14$adapted->rgb(234,99,99)
scala/tools/nsc/transform/SpecializeTypes.$anonfun$specializeClass$15->rgb(247,118,118)
scala/tools/nsc/transform/SpecializeTypes.$anonfun$specializeClass$3->rgb(214,70,70)
scala/tools/nsc/transform/SpecializeTypes.$anonfun$specializeClass$30->rgb(212,68,68)
scala/tools/nsc/transform/SpecializeTypes.$anonfun$specializeClass$31->rgb(206,59,59)
scala/tools/nsc/transform/SpecializeTypes.$anonfun$specializeClass$33->rgb(244,114,114)
scala/tools/nsc/transform/SpecializeTypes.$anonfun$specializeClass$4->rgb(252,125,125)
scala/tools/nsc/transform/SpecializeTypes.$anonfun$specializedOn$3->rgb(206,59,59)
scala/tools/nsc/transform/SpecializeTypes.$anonfun$specializedTypeVarsBuffer$1->rgb(234,99,99)
scala/tools/nsc/transform/SpecializeTypes.$anonfun$specializedTypeVarsBuffer$3->rgb(233,99,99)
scala/tools/nsc/transform/SpecializeTypes.$anonfun$specializedTypeVarsBuffer$5->rgb(250,124,124)
scala/tools/nsc/transform/SpecializeTypes.$anonfun$specializedTypeVarsBuffer$6->rgb(238,105,105)
scala/tools/nsc/transform/SpecializeTypes.$anonfun$specializedTypeVarsBuffer$7->rgb(219,78,78)
scala/tools/nsc/transform/SpecializeTypes.$anonfun$transformInfo$1->rgb(248,120,120)
scala/tools/nsc/transform/SpecializeTypes.$anonfun$transformInfo$2->rgb(242,111,111)
scala/tools/nsc/transform/SpecializeTypes.forwardToOverload$1->rgb(226,88,88)
scala/tools/nsc/transform/SpecializeTypes.needsSpecialOverride$1->rgb(238,105,105)
scala/tools/nsc/transform/SpecializeTypes.needsSpecialization->rgb(233,99,99)
scala/tools/nsc/transform/SpecializeTypes.scala$tools$nsc$transform$SpecializeTypes$$isSpecializedAnyRefSubtype->rgb(237,104,104)
scala/tools/nsc/transform/SpecializeTypes.scala$tools$nsc$transform$SpecializeTypes$$normalizeMember->rgb(252,125,125)
scala/tools/nsc/transform/SpecializeTypes.specialOverrides->rgb(200,50,50)
scala/tools/nsc/transform/SpecializeTypes.specializeClass->rgb(211,66,66)
scala/tools/nsc/transform/SpecializeTypes.specializeMember->rgb(214,71,71)
scala/tools/nsc/transform/SpecializeTypes.specializeOn$1->rgb(229,93,93)
scala/tools/nsc/transform/SpecializeTypes.specializedClass$1->rgb(229,92,92)
scala/tools/nsc/transform/SpecializeTypes.specializedOn->rgb(225,86,86)
scala/tools/nsc/transform/SpecializeTypes.specializedOverload->rgb(211,67,67)
scala/tools/nsc/transform/SpecializeTypes.specializedParents$1->rgb(211,67,67)
scala/tools/nsc/transform/SpecializeTypes.specializedTypeVars->rgb(220,80,80)
scala/tools/nsc/transform/SpecializeTypes.specializedTypeVarsBuffer->rgb(254,128,128)
scala/tools/nsc/transform/SpecializeTypes.transformInfo->rgb(248,120,120)
scala/tools/nsc/transform/TailCalls$Phase.apply->rgb(240,108,108)
scala/tools/nsc/transform/TailCalls$TailCallElimination$ClonedTailContext.isEligible->rgb(205,57,57)
scala/tools/nsc/transform/TailCalls$TailCallElimination$TailContext.isEligible->rgb(226,88,88)
scala/tools/nsc/transform/TailCalls$TailCallElimination$TailContext.isEligible$->rgb(239,107,107)
scala/tools/nsc/transform/TailCalls$TailCallElimination.$anonfun$noTailTransforms$1->rgb(215,71,71)
scala/tools/nsc/transform/TailCalls$TailCallElimination.fail$1->rgb(219,78,78)
scala/tools/nsc/transform/TailCalls$TailCallElimination.noTailTransforms->rgb(201,51,51)
scala/tools/nsc/transform/TailCalls$TailCallElimination.rewriteApply$1->rgb(247,118,118)
scala/tools/nsc/transform/TailCalls$TailCallElimination.transform->rgb(251,124,124)
scala/tools/nsc/transform/TailCalls$TailCallElimination.transformArgs$1->rgb(207,60,60)
scala/tools/nsc/transform/TailCalls$TailCallElimination.transformUnit->rgb(239,107,107)
scala/tools/nsc/transform/Transform$Phase.apply->rgb(243,113,113)
scala/tools/nsc/transform/TypingTransformers$TypingTransformer$$Lambda$890/1722078082.apply->rgb(230,94,94)
scala/tools/nsc/transform/TypingTransformers$TypingTransformer$$Lambda$890/97054709.apply->rgb(227,89,89)
scala/tools/nsc/transform/TypingTransformers$TypingTransformer$$Lambda$893/1155369291.apply->rgb(210,64,64)
scala/tools/nsc/transform/TypingTransformers$TypingTransformer$$Lambda$893/464584220.apply->rgb(238,106,106)
scala/tools/nsc/transform/TypingTransformers$TypingTransformer.$anonfun$transform$1->rgb(207,61,61)
scala/tools/nsc/transform/TypingTransformers$TypingTransformer.$anonfun$transform$2->rgb(203,55,55)
scala/tools/nsc/transform/TypingTransformers$TypingTransformer.<init>->rgb(235,101,101)
scala/tools/nsc/transform/TypingTransformers$TypingTransformer.atOwner->rgb(247,119,119)
scala/tools/nsc/transform/TypingTransformers$TypingTransformer.super$transform->rgb(205,58,58)
scala/tools/nsc/transform/TypingTransformers$TypingTransformer.transform->rgb(212,68,68)
scala/tools/nsc/transform/UnCurry$UnCurryTransformer.$anonfun$mainTransform$11->rgb(202,53,53)
scala/tools/nsc/transform/UnCurry$UnCurryTransformer.$anonfun$mainTransform$12->rgb(245,115,115)
scala/tools/nsc/transform/UnCurry$UnCurryTransformer.$anonfun$mainTransform$16->rgb(205,57,57)
scala/tools/nsc/transform/UnCurry$UnCurryTransformer.$anonfun$mainTransform$5->rgb(225,86,86)
scala/tools/nsc/transform/UnCurry$UnCurryTransformer.$anonfun$transformArgs$4->rgb(200,50,50)
scala/tools/nsc/transform/UnCurry$UnCurryTransformer.mainTransform->rgb(221,80,80)
scala/tools/nsc/transform/UnCurry$UnCurryTransformer.super$transform->rgb(209,63,63)
scala/tools/nsc/transform/UnCurry$UnCurryTransformer.transform->rgb(221,80,80)
scala/tools/nsc/transform/UnCurry$UnCurryTransformer.transformArgs->rgb(218,77,77)
scala/tools/nsc/transform/UnCurry$UnCurryTransformer.transformFunction->rgb(211,67,67)
scala/tools/nsc/transform/UnCurry.transformInfo->rgb(227,90,90)
scala/tools/nsc/transform/patmat/Interface$TypedSubstitution$Substitution$substIdentsForTrees$2$$$Lambda$1039/435445913.apply->rgb(225,87,87)
scala/tools/nsc/transform/patmat/Interface$TypedSubstitution$Substitution$substIdentsForTrees$2$.$anonfun$toTypes$1->rgb(253,127,127)
scala/tools/nsc/transform/patmat/Interface$TypedSubstitution$Substitution$substIdentsForTrees$2$.$anonfun$transform$2->rgb(254,128,128)
scala/tools/nsc/transform/patmat/Interface$TypedSubstitution$Substitution$substIdentsForTrees$2$.toTypes->rgb(254,129,129)
scala/tools/nsc/transform/patmat/Interface$TypedSubstitution$Substitution$substIdentsForTrees$2$.toTypes$lzycompute->rgb(241,109,109)
scala/tools/nsc/transform/patmat/Interface$TypedSubstitution$Substitution$substIdentsForTrees$2$.transform->rgb(231,96,96)
scala/tools/nsc/transform/patmat/Interface$TypedSubstitution$Substitution$substIdentsForTrees$2$.typedStable->rgb(248,121,121)
scala/tools/nsc/transform/patmat/Interface$TypedSubstitution$Substitution.apply->rgb(251,125,125)
scala/tools/nsc/transform/patmat/Logic$PropositionalLogic.removeVarEq->rgb(236,103,103)
scala/tools/nsc/transform/patmat/Logic$PropositionalLogic.removeVarEq$->rgb(209,64,64)
scala/tools/nsc/transform/patmat/Logic$PropositionalLogic.simplify->rgb(224,84,84)
scala/tools/nsc/transform/patmat/Logic$PropositionalLogic.simplify$->rgb(207,61,61)
scala/tools/nsc/transform/patmat/Logic$PropositionalLogic.simplifyProp$1->rgb(234,100,100)
scala/tools/nsc/transform/patmat/MatchAnalysis$MatchAnalyzer.analyzeCases->rgb(218,77,77)
scala/tools/nsc/transform/patmat/MatchAnalysis$MatchAnalyzer.analyzeCases$->rgb(244,115,115)
scala/tools/nsc/transform/patmat/MatchAnalysis$MatchAnalyzer.approximate$1->rgb(213,69,69)
scala/tools/nsc/transform/patmat/MatchAnalysis$MatchAnalyzer.exhaustive->rgb(253,127,127)
scala/tools/nsc/transform/patmat/MatchAnalysis$MatchAnalyzer.exhaustive$->rgb(231,95,95)
scala/tools/nsc/transform/patmat/MatchAnalysis$MatchAnalyzer.unreachableCase->rgb(246,117,117)
scala/tools/nsc/transform/patmat/MatchAnalysis$MatchAnalyzer.unreachableCase$->rgb(213,70,70)
scala/tools/nsc/transform/patmat/MatchApproximation$MatchApproximator$TreeMakersToProps$TreeMakerToProp.apply->rgb(253,127,127)
scala/tools/nsc/transform/patmat/MatchApproximation$MatchApproximator$TreeMakersToProps$TreeMakerToProp.updateSubstitution->rgb(204,56,56)
scala/tools/nsc/transform/patmat/MatchApproximation$MatchApproximator$TreeMakersToProps.$anonfun$approximateMatch$1->rgb(220,79,79)
scala/tools/nsc/transform/patmat/MatchApproximation$MatchApproximator$TreeMakersToProps.$anonfun$approximateMatch$2->rgb(206,59,59)
scala/tools/nsc/transform/patmat/MatchApproximation$MatchApproximator$TreeMakersToProps.approximateMatch->rgb(248,120,120)
scala/tools/nsc/transform/patmat/MatchApproximation$MatchApproximator$TreeMakersToProps.binderToUniqueTree->rgb(218,76,76)
scala/tools/nsc/transform/patmat/MatchApproximation$MatchApproximator.approximateMatchConservative->rgb(217,75,75)
scala/tools/nsc/transform/patmat/MatchApproximation$MatchApproximator.approximateMatchConservative$->rgb(234,99,99)
scala/tools/nsc/transform/patmat/MatchOptimization$CommonSubconditionElimination.doCSE->rgb(204,56,56)
scala/tools/nsc/transform/patmat/MatchOptimization$CommonSubconditionElimination.doCSE$->rgb(240,109,109)
scala/tools/nsc/transform/patmat/MatchOptimization$MatchOptimizer.optimizeCases->rgb(200,50,50)
scala/tools/nsc/transform/patmat/MatchOptimization$MatchOptimizer.optimizeCases$->rgb(238,106,106)
scala/tools/nsc/transform/patmat/MatchTranslation$MatchTranslator$BoundTree.nextStep->rgb(254,129,129)
scala/tools/nsc/transform/patmat/MatchTranslation$MatchTranslator$BoundTree.translate->rgb(201,52,52)
scala/tools/nsc/transform/patmat/MatchTranslation$MatchTranslator.$anonfun$translateMatch$4->rgb(217,75,75)
scala/tools/nsc/transform/patmat/MatchTranslation$MatchTranslator.translateCase->rgb(239,107,107)
scala/tools/nsc/transform/patmat/MatchTranslation$MatchTranslator.translateCase$->rgb(249,122,122)
scala/tools/nsc/transform/patmat/MatchTranslation$MatchTranslator.translateMatch->rgb(238,106,106)
scala/tools/nsc/transform/patmat/MatchTranslation$MatchTranslator.translateMatch$->rgb(222,83,83)
scala/tools/nsc/transform/patmat/MatchTranslation$MatchTranslator.translatePattern->rgb(239,107,107)
scala/tools/nsc/transform/patmat/MatchTranslation$MatchTranslator.translatePattern$->rgb(207,61,61)
scala/tools/nsc/transform/patmat/MatchTreeMaking$TreeMakers$$anon$2.traverse->rgb(212,68,68)
scala/tools/nsc/transform/patmat/MatchTreeMaking$TreeMakers.$anonfun$combineCasesNoSubstOnly$6->rgb(228,91,91)
scala/tools/nsc/transform/patmat/MatchTreeMaking$TreeMakers.combineCases->rgb(241,109,109)
scala/tools/nsc/transform/patmat/MatchTreeMaking$TreeMakers.combineCases$->rgb(233,99,99)
scala/tools/nsc/transform/patmat/MatchTreeMaking$TreeMakers.combineCasesNoSubstOnly->rgb(201,51,51)
scala/tools/nsc/transform/patmat/MatchTreeMaking$TreeMakers.combineCasesNoSubstOnly$->rgb(236,103,103)
scala/tools/nsc/transform/patmat/PatternMatching$MatchTransformer.transform->rgb(228,92,92)
scala/tools/nsc/transform/patmat/PatternMatching$OptimizingMatchTranslator.analyzeCases->rgb(219,78,78)
scala/tools/nsc/transform/patmat/PatternMatching$OptimizingMatchTranslator.approximateMatchConservative->rgb(244,114,114)
scala/tools/nsc/transform/patmat/PatternMatching$OptimizingMatchTranslator.combineCases->rgb(226,88,88)
scala/tools/nsc/transform/patmat/PatternMatching$OptimizingMatchTranslator.combineCasesNoSubstOnly->rgb(215,73,73)
scala/tools/nsc/transform/patmat/PatternMatching$OptimizingMatchTranslator.doCSE->rgb(215,72,72)
scala/tools/nsc/transform/patmat/PatternMatching$OptimizingMatchTranslator.eqFreePropToSolvable->rgb(251,124,124)
scala/tools/nsc/transform/patmat/PatternMatching$OptimizingMatchTranslator.exhaustive->rgb(213,68,68)
scala/tools/nsc/transform/patmat/PatternMatching$OptimizingMatchTranslator.optimizeCases->rgb(200,50,50)
scala/tools/nsc/transform/patmat/PatternMatching$OptimizingMatchTranslator.removeVarEq->rgb(204,56,56)
scala/tools/nsc/transform/patmat/PatternMatching$OptimizingMatchTranslator.simplify->rgb(214,70,70)
scala/tools/nsc/transform/patmat/PatternMatching$OptimizingMatchTranslator.translateCase->rgb(219,77,77)
scala/tools/nsc/transform/patmat/PatternMatching$OptimizingMatchTranslator.translateMatch->rgb(227,90,90)
scala/tools/nsc/transform/patmat/PatternMatching$OptimizingMatchTranslator.translatePattern->rgb(239,108,108)
scala/tools/nsc/transform/patmat/PatternMatching$OptimizingMatchTranslator.unreachableCase->rgb(215,72,72)
scala/tools/nsc/transform/patmat/Solving$CNF.eqFreePropToSolvable->rgb(226,87,87)
scala/tools/nsc/transform/patmat/Solving$CNF.eqFreePropToSolvable$->rgb(227,89,89)
scala/tools/nsc/typechecker/Analyzer$namerFactory$$anon$1.apply->rgb(245,116,116)
scala/tools/nsc/typechecker/Analyzer$typerFactory$$anon$3$$Lambda$369/1102218234.apply->rgb(203,54,54)
scala/tools/nsc/typechecker/Analyzer$typerFactory$$anon$3$$Lambda$369/1252328098.apply->rgb(211,66,66)
scala/tools/nsc/typechecker/Analyzer$typerFactory$$anon$3$$Lambda$629/1242569796.apply->rgb(253,127,127)
scala/tools/nsc/typechecker/Analyzer$typerFactory$$anon$3$$Lambda$629/1714451047.apply->rgb(237,104,104)
scala/tools/nsc/typechecker/Analyzer$typerFactory$$anon$3.$anonfun$apply$1$adapted->rgb(201,52,52)
scala/tools/nsc/typechecker/Analyzer$typerFactory$$anon$3.$anonfun$run$1->rgb(212,67,67)
scala/tools/nsc/typechecker/Analyzer$typerFactory$$anon$3.$anonfun$run$1$adapted->rgb(235,101,101)
scala/tools/nsc/typechecker/Analyzer$typerFactory$$anon$3.apply->rgb(212,68,68)
scala/tools/nsc/typechecker/Analyzer$typerFactory$$anon$3.run->rgb(241,110,110)
scala/tools/nsc/typechecker/AnalyzerPlugins$$anon$10.default->rgb(241,110,110)
scala/tools/nsc/typechecker/AnalyzerPlugins$$anon$14.default->rgb(238,106,106)
scala/tools/nsc/typechecker/AnalyzerPlugins$$anon$9.default->rgb(218,76,76)
scala/tools/nsc/typechecker/AnalyzerPlugins.invoke->rgb(243,113,113)
scala/tools/nsc/typechecker/AnalyzerPlugins.pluginsEnsureCompanionObject->rgb(228,92,92)
scala/tools/nsc/typechecker/AnalyzerPlugins.pluginsEnsureCompanionObject$->rgb(225,86,86)
scala/tools/nsc/typechecker/AnalyzerPlugins.pluginsEnterSym->rgb(237,104,104)
scala/tools/nsc/typechecker/AnalyzerPlugins.pluginsEnterSym$->rgb(243,113,113)
scala/tools/nsc/typechecker/AnalyzerPlugins.pluginsIsBlackbox->rgb(225,86,86)
scala/tools/nsc/typechecker/AnalyzerPlugins.pluginsIsBlackbox$->rgb(220,79,79)
scala/tools/nsc/typechecker/AnalyzerPlugins.pluginsMacroExpand->rgb(216,73,73)
scala/tools/nsc/typechecker/AnalyzerPlugins.pluginsMacroExpand$->rgb(207,61,61)
scala/tools/nsc/typechecker/ContextErrors$AbsTypeError.<init>->rgb(250,123,123)
scala/tools/nsc/typechecker/ContextErrors$ErrorUtils$.issueNormalTypeError->rgb(202,53,53)
scala/tools/nsc/typechecker/ContextErrors$NormalTypeError.<init>->rgb(232,97,97)
scala/tools/nsc/typechecker/ContextErrors$TreeTypeError.<init>->rgb(204,57,57)
scala/tools/nsc/typechecker/ContextErrors$TyperContextErrors$TyperErrorGen$.NotAMemberError->rgb(233,99,99)
scala/tools/nsc/typechecker/Contexts$$Lambda$352/1175176702.apply->rgb(209,63,63)
scala/tools/nsc/typechecker/Contexts$$Lambda$352/2111980206.apply->rgb(208,62,62)
scala/tools/nsc/typechecker/Contexts$Context$TryTwice.$anonfun$apply$1->rgb(214,71,71)
scala/tools/nsc/typechecker/Contexts$Context$TryTwice.apply->rgb(229,92,92)
scala/tools/nsc/typechecker/Contexts$Context.$anonfun$savingUndeterminedTypeParams$1->rgb(237,105,105)
scala/tools/nsc/typechecker/Contexts$Context.isAccessible->rgb(241,109,109)
scala/tools/nsc/typechecker/Contexts$Context.lookupSymbol->rgb(211,67,67)
scala/tools/nsc/typechecker/Contexts$Context.make->rgb(240,109,109)
scala/tools/nsc/typechecker/Contexts$Context.makeSilent->rgb(236,103,103)
scala/tools/nsc/typechecker/Contexts$Context.savingUndeterminedTypeParams->rgb(225,86,86)
scala/tools/nsc/typechecker/Contexts$ContextReporter.scala$tools$nsc$typechecker$Contexts$ContextReporter$$newBuffer->rgb(226,88,88)
scala/tools/nsc/typechecker/Contexts.$anonfun$rootContext$1->rgb(231,96,96)
scala/tools/nsc/typechecker/Contexts.rootContext->rgb(254,128,128)
scala/tools/nsc/typechecker/Contexts.rootContext$->rgb(203,55,55)
scala/tools/nsc/typechecker/Implicits$ImplicitInfo.computeErroneous->rgb(242,111,111)
scala/tools/nsc/typechecker/Implicits$ImplicitInfo.isCyclicOrErroneous->rgb(248,119,119)
scala/tools/nsc/typechecker/Implicits$ImplicitInfo.tpe->rgb(213,69,69)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch$ImplicitComputation$$Lambda$503/1314135317.apply->rgb(239,106,106)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch$ImplicitComputation$$Lambda$503/1335542923.apply->rgb(244,114,114)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch$ImplicitComputation$$Lambda$515/1781259161.apply->rgb(204,57,57)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch$ImplicitComputation$$Lambda$515/370784046.apply->rgb(237,104,104)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch$ImplicitComputation$$Lambda$516/2070664673.apply->rgb(200,50,50)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch$ImplicitComputation$$Lambda$516/676110450.apply->rgb(245,116,116)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch$ImplicitComputation.$anonfun$eligible$1->rgb(223,83,83)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch$ImplicitComputation.$anonfun$eligible$2->rgb(211,67,67)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch$ImplicitComputation.$anonfun$eligible$2$adapted->rgb(235,102,102)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch$ImplicitComputation.$anonfun$rankImplicits$2->rgb(234,99,99)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch$ImplicitComputation.$anonfun$rankImplicits$3->rgb(233,98,98)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch$ImplicitComputation.$anonfun$rankImplicits$3$adapted->rgb(245,115,115)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch$ImplicitComputation.<init>->rgb(219,77,77)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch$ImplicitComputation.findBest->rgb(239,106,106)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch$ImplicitComputation.firstPendingImproves$1->rgb(252,126,126)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch$ImplicitComputation.isIneligible->rgb(204,57,57)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch$ImplicitComputation.liftedTree1$1->rgb(222,83,83)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch$ImplicitComputation.rankImplicits->rgb(245,116,116)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch$ImplicitComputation.survives->rgb(215,73,73)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch.$anonfun$companionImplicitMap$3->rgb(250,122,122)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch.bestImplicit->rgb(242,111,111)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch.checkCompatibility->rgb(207,60,60)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch.companionImplicitMap->rgb(235,101,101)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch.getClassParts$1->rgb(225,86,86)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch.getParts$1->rgb(220,79,79)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch.implicitsOfExpectedType->rgb(205,57,57)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch.improves->rgb(209,63,63)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch.isImpossibleSubType->rgb(210,65,65)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch.isPlausiblyCompatible->rgb(211,67,67)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch.isPlausiblySubType->rgb(250,123,123)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch.loop$1->rgb(239,107,107)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch.materializeImplicit->rgb(217,75,75)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch.scala$tools$nsc$typechecker$Implicits$ImplicitSearch$$typedImplicit->rgb(215,72,72)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch.searchImplicit->rgb(225,87,87)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch.success$1->rgb(224,85,85)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch.tagOfType->rgb(238,106,106)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch.typeRefHasMember$1->rgb(235,101,101)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch.typedImplicit0->rgb(232,96,96)
scala/tools/nsc/typechecker/Implicits$ImplicitSearch.typedImplicit1->rgb(244,115,115)
scala/tools/nsc/typechecker/Implicits.inferImplicit->rgb(228,91,91)
scala/tools/nsc/typechecker/Implicits.inferImplicit$->rgb(210,65,65)
scala/tools/nsc/typechecker/Implicits.inferImplicitByType->rgb(246,118,118)
scala/tools/nsc/typechecker/Implicits.inferImplicitByType$->rgb(206,59,59)
scala/tools/nsc/typechecker/Implicits.inferImplicitFor->rgb(251,124,124)
scala/tools/nsc/typechecker/Implicits.inferImplicitFor$->rgb(203,54,54)
scala/tools/nsc/typechecker/Implicits.inferImplicitView->rgb(222,82,82)
scala/tools/nsc/typechecker/Implicits.inferImplicitView$->rgb(207,61,61)
scala/tools/nsc/typechecker/Infer$Inferencer$$Lambda$375/1410439565.apply->rgb(226,88,88)
scala/tools/nsc/typechecker/Infer$Inferencer$$Lambda$650/2029737778.apply->rgb(249,122,122)
scala/tools/nsc/typechecker/Infer$Inferencer$$Lambda$650/847766237.apply->rgb(227,89,89)
scala/tools/nsc/typechecker/Infer$Inferencer$InferMethodAlternativeTwice$1$$Lambda$477/1257977003.apply->rgb(224,85,85)
scala/tools/nsc/typechecker/Infer$Inferencer$InferMethodAlternativeTwice$1.$anonfun$bestForExpectedType$1->rgb(228,91,91)
scala/tools/nsc/typechecker/Infer$Inferencer$InferMethodAlternativeTwice$1.$anonfun$bestForExpectedType$1$adapted->rgb(234,100,100)
scala/tools/nsc/typechecker/Infer$Inferencer$InferMethodAlternativeTwice$1.$anonfun$isAltApplicable$1->rgb(215,71,71)
scala/tools/nsc/typechecker/Infer$Inferencer$InferMethodAlternativeTwice$1.bestForExpectedType->rgb(202,53,53)
scala/tools/nsc/typechecker/Infer$Inferencer$InferMethodAlternativeTwice$1.isAltApplicable->rgb(222,82,82)
scala/tools/nsc/typechecker/Infer$Inferencer$InferMethodAlternativeTwice$1.tryOnce->rgb(242,111,111)
scala/tools/nsc/typechecker/Infer$Inferencer$InferTwice$1$$Lambda$717/2080194569.apply->rgb(253,128,128)
scala/tools/nsc/typechecker/Infer$Inferencer$InferTwice$1$$Lambda$717/259381912.apply->rgb(232,97,97)
scala/tools/nsc/typechecker/Infer$Inferencer$InferTwice$1.tryOnce->rgb(236,103,103)
scala/tools/nsc/typechecker/Infer$Inferencer.$anonfun$adjustTypeArgs$1->rgb(201,51,51)
scala/tools/nsc/typechecker/Infer$Inferencer.$anonfun$checkAccessible$1->rgb(247,119,119)
scala/tools/nsc/typechecker/Infer$Inferencer.$anonfun$checkAccessible$1$adapted->rgb(207,61,61)
scala/tools/nsc/typechecker/Infer$Inferencer.$anonfun$checkBounds$2->rgb(225,86,86)
scala/tools/nsc/typechecker/Infer$Inferencer.$anonfun$exprTypeArgs$1->rgb(235,101,101)
scala/tools/nsc/typechecker/Infer$Inferencer.$anonfun$isApplicable$2->rgb(231,95,95)
scala/tools/nsc/typechecker/Infer$Inferencer.$anonfun$isApplicable$2$adapted->rgb(251,124,124)
scala/tools/nsc/typechecker/Infer$Inferencer.$anonfun$isApplicableToMethod$3->rgb(239,108,108)
scala/tools/nsc/typechecker/Infer$Inferencer.$anonfun$isCompatibleArgs$1->rgb(231,96,96)
scala/tools/nsc/typechecker/Infer$Inferencer.$anonfun$methTypeArgs$3->rgb(234,100,100)
scala/tools/nsc/typechecker/Infer$Inferencer.accessible$1->rgb(210,64,64)
scala/tools/nsc/typechecker/Infer$Inferencer.adjustTypeArgs->rgb(240,108,108)
scala/tools/nsc/typechecker/Infer$Inferencer.applicableExpectingPt$1->rgb(245,115,115)
scala/tools/nsc/typechecker/Infer$Inferencer.check$1->rgb(230,94,94)
scala/tools/nsc/typechecker/Infer$Inferencer.checkAccessible->rgb(227,90,90)
scala/tools/nsc/typechecker/Infer$Inferencer.checkBounds->rgb(245,116,116)
scala/tools/nsc/typechecker/Infer$Inferencer.checkIsApplicable$1->rgb(212,68,68)
scala/tools/nsc/typechecker/Infer$Inferencer.checkKindBounds->rgb(203,55,55)
scala/tools/nsc/typechecker/Infer$Inferencer.exprTypeArgs->rgb(215,72,72)
scala/tools/nsc/typechecker/Infer$Inferencer.followApply->rgb(243,113,113)
scala/tools/nsc/typechecker/Infer$Inferencer.inferExprAlternative->rgb(229,92,92)
scala/tools/nsc/typechecker/Infer$Inferencer.inferExprInstance->rgb(221,80,80)
scala/tools/nsc/typechecker/Infer$Inferencer.inferMethodAlternative->rgb(206,59,59)
scala/tools/nsc/typechecker/Infer$Inferencer.inferMethodInstance->rgb(226,88,88)
scala/tools/nsc/typechecker/Infer$Inferencer.isApplicableSafe->rgb(241,110,110)
scala/tools/nsc/typechecker/Infer$Inferencer.isApplicableToMethod->rgb(206,59,59)
scala/tools/nsc/typechecker/Infer$Inferencer.isAsSpecific->rgb(248,120,120)
scala/tools/nsc/typechecker/Infer$Inferencer.isAsSpecificValueType->rgb(220,80,80)
scala/tools/nsc/typechecker/Infer$Inferencer.isCompatible->rgb(225,87,87)
scala/tools/nsc/typechecker/Infer$Inferencer.isCompatibleArgs->rgb(235,101,101)
scala/tools/nsc/typechecker/Infer$Inferencer.isStrictlyMoreSpecific->rgb(231,95,95)
scala/tools/nsc/typechecker/Infer$Inferencer.isWeaklyCompatible->rgb(244,114,114)
scala/tools/nsc/typechecker/Infer$Inferencer.methTypeArgs->rgb(204,56,56)
scala/tools/nsc/typechecker/Infer$Inferencer.onRight$1->rgb(227,89,89)
scala/tools/nsc/typechecker/Infer$Inferencer.scala$tools$nsc$typechecker$Infer$Inferencer$$isApplicable->rgb(235,102,102)
scala/tools/nsc/typechecker/Infer$Inferencer.solve$1->rgb(223,83,83)
scala/tools/nsc/typechecker/Infer$Inferencer.tryInstantiating$1->rgb(223,83,83)
scala/tools/nsc/typechecker/Infer$Inferencer.tryWithArgs$1->rgb(202,53,53)
scala/tools/nsc/typechecker/Infer$Inferencer.typesCompatible$1->rgb(213,69,69)
scala/tools/nsc/typechecker/Infer.$anonfun$bestAlternatives$1$adapted->rgb(247,119,119)
scala/tools/nsc/typechecker/Infer.$anonfun$formalTypes$1->rgb(228,91,91)
scala/tools/nsc/typechecker/Infer.formalTypes->rgb(225,86,86)
scala/tools/nsc/typechecker/Infer.formalTypes$->rgb(233,98,98)
scala/tools/nsc/typechecker/Infer.normalize->rgb(236,102,102)
scala/tools/nsc/typechecker/Infer.normalize$->rgb(205,57,57)
scala/tools/nsc/typechecker/Infer.solvedTypes->rgb(236,102,102)
scala/tools/nsc/typechecker/Infer.solvedTypes$->rgb(214,71,71)
scala/tools/nsc/typechecker/Macros$MacroExpander$$Lambda$671/1179427027.apply->rgb(209,63,63)
scala/tools/nsc/typechecker/Macros$MacroExpander$$Lambda$671/81849030.apply->rgb(209,64,64)
scala/tools/nsc/typechecker/Macros$MacroExpander.$anonfun$expand$1->rgb(239,107,107)
scala/tools/nsc/typechecker/Macros$MacroExpander.apply->rgb(246,118,118)
scala/tools/nsc/typechecker/Macros$MacroExpander.expand->rgb(249,121,121)
scala/tools/nsc/typechecker/Macros.isBlackbox->rgb(211,67,67)
scala/tools/nsc/typechecker/Macros.isBlackbox$->rgb(206,60,60)
scala/tools/nsc/typechecker/Macros.loadMacroImplBinding->rgb(205,57,57)
scala/tools/nsc/typechecker/Macros.loadMacroImplBinding$->rgb(209,63,63)
scala/tools/nsc/typechecker/Macros.macroExpand->rgb(227,89,89)
scala/tools/nsc/typechecker/Macros.macroExpand$->rgb(223,84,84)
scala/tools/nsc/typechecker/Macros.macroExpandWithRuntime->rgb(201,51,51)
scala/tools/nsc/typechecker/Macros.macroExpandWithRuntime$->rgb(237,105,105)
scala/tools/nsc/typechecker/Macros.standardIsBlackbox->rgb(207,60,60)
scala/tools/nsc/typechecker/Macros.standardIsBlackbox$->rgb(245,115,115)
scala/tools/nsc/typechecker/Macros.standardMacroExpand->rgb(250,123,123)
scala/tools/nsc/typechecker/Macros.standardMacroExpand$->rgb(235,101,101)
scala/tools/nsc/typechecker/MethodSynthesis$ClassMethodSynthesis.createMethod->rgb(251,124,124)
scala/tools/nsc/typechecker/MethodSynthesis$ClassMethodSynthesis.createSwitchMethod->rgb(253,127,127)
scala/tools/nsc/typechecker/Namers$CompleterWrapper.complete->rgb(220,79,79)
scala/tools/nsc/typechecker/Namers$DependentTypeChecker.$anonfun$check$1->rgb(238,105,105)
scala/tools/nsc/typechecker/Namers$DependentTypeChecker.$anonfun$check$2->rgb(223,83,83)
scala/tools/nsc/typechecker/Namers$DependentTypeChecker.check->rgb(237,104,104)
scala/tools/nsc/typechecker/Namers$LockingTypeCompleter.complete->rgb(217,75,75)
scala/tools/nsc/typechecker/Namers$LockingTypeCompleter.complete$->rgb(205,57,57)
scala/tools/nsc/typechecker/Namers$Namer$$Lambda$360/1089022415.apply->rgb(235,101,101)
scala/tools/nsc/typechecker/Namers$Namer$$Lambda$360/1237539112.apply->rgb(221,81,81)
scala/tools/nsc/typechecker/Namers$Namer$$anon$3.complete->rgb(206,60,60)
scala/tools/nsc/typechecker/Namers$Namer$$anon$4.complete->rgb(217,74,74)
scala/tools/nsc/typechecker/Namers$Namer$AccessorTypeCompleter.completeImpl->rgb(226,89,89)
scala/tools/nsc/typechecker/Namers$Namer$ImportTypeCompleter.completeImpl->rgb(217,75,75)
scala/tools/nsc/typechecker/Namers$Namer$MonoTypeCompleter.completeImpl->rgb(251,124,124)
scala/tools/nsc/typechecker/Namers$Namer$ValTypeCompleter.completeImpl->rgb(248,120,120)
scala/tools/nsc/typechecker/Namers$Namer.$anonfun$enterClassDef$1->rgb(213,70,70)
scala/tools/nsc/typechecker/Namers$Namer.$anonfun$enterSyms$1->rgb(248,120,120)
scala/tools/nsc/typechecker/Namers$Namer.$anonfun$templateSig$4->rgb(214,70,70)
scala/tools/nsc/typechecker/Namers$Namer.addApplyUnapply->rgb(241,111,111)
scala/tools/nsc/typechecker/Namers$Namer.addDefaultGetters->rgb(212,67,67)
scala/tools/nsc/typechecker/Namers$Namer.allowsOverload->rgb(252,126,126)
scala/tools/nsc/typechecker/Namers$Namer.assignMemberSymbol->rgb(247,119,119)
scala/tools/nsc/typechecker/Namers$Namer.assignTypeToTree->rgb(220,79,79)
scala/tools/nsc/typechecker/Namers$Namer.classSig->rgb(211,67,67)
scala/tools/nsc/typechecker/Namers$Namer.dispatch$1->rgb(236,103,103)
scala/tools/nsc/typechecker/Namers$Namer.ensureCompanionObject->rgb(229,92,92)
scala/tools/nsc/typechecker/Namers$Namer.enterClassDef->rgb(233,98,98)
scala/tools/nsc/typechecker/Namers$Namer.enterDefDef->rgb(208,62,62)
scala/tools/nsc/typechecker/Namers$Namer.enterInScope->rgb(228,91,91)
scala/tools/nsc/typechecker/Namers$Namer.enterPackage->rgb(208,62,62)
scala/tools/nsc/typechecker/Namers$Namer.enterSym->rgb(219,78,78)
scala/tools/nsc/typechecker/Namers$Namer.enterSyms->rgb(211,66,66)
scala/tools/nsc/typechecker/Namers$Namer.memberSig->rgb(254,129,129)
scala/tools/nsc/typechecker/Namers$Namer.methodSig->rgb(229,92,92)
scala/tools/nsc/typechecker/Namers$Namer.moduleSig->rgb(235,101,101)
scala/tools/nsc/typechecker/Namers$Namer.safeNextOverriddenSymbol->rgb(234,100,100)
scala/tools/nsc/typechecker/Namers$Namer.safeNextOverriddenSymbolLazySchema->rgb(218,76,76)
scala/tools/nsc/typechecker/Namers$Namer.scala$tools$nsc$typechecker$Namers$Namer$$importSig->rgb(202,54,54)
scala/tools/nsc/typechecker/Namers$Namer.setPrivateWithin->rgb(251,125,125)
scala/tools/nsc/typechecker/Namers$Namer.standardEnsureCompanionObject->rgb(211,66,66)
scala/tools/nsc/typechecker/Namers$Namer.standardEnterSym->rgb(241,110,110)
scala/tools/nsc/typechecker/Namers$Namer.templateSig->rgb(246,117,117)
scala/tools/nsc/typechecker/Namers$Namer.typeSig->rgb(230,94,94)
scala/tools/nsc/typechecker/Namers$Namer.valDefSig->rgb(232,97,97)
scala/tools/nsc/typechecker/Namers$PolyTypeCompleter.complete->rgb(218,76,76)
scala/tools/nsc/typechecker/Namers$PolyTypeCompleter.completeImpl->rgb(203,55,55)
scala/tools/nsc/typechecker/Namers$TypeCompleterBase.complete->rgb(219,78,78)
scala/tools/nsc/typechecker/PatternTypers$PatternTyper.$anonfun$typedArgsForFormals$2->rgb(239,106,106)
scala/tools/nsc/typechecker/PatternTypers$PatternTyper.$anonfun$typedArgsForFormals$3->rgb(248,120,120)
scala/tools/nsc/typechecker/PatternTypers$PatternTyper.$anonfun$typedArgsForFormals$4->rgb(219,77,77)
scala/tools/nsc/typechecker/PatternTypers$PatternTyper.typedArgWithFormal$1->rgb(232,96,96)
scala/tools/nsc/typechecker/PatternTypers$PatternTyper.typedArgsForFormals->rgb(233,98,98)
scala/tools/nsc/typechecker/PatternTypers$PatternTyper.typedArgsForFormals$->rgb(221,80,80)
scala/tools/nsc/typechecker/PatternTypers$PatternTyper.typedConstructorPattern->rgb(224,85,85)
scala/tools/nsc/typechecker/PatternTypers$PatternTyper.typedConstructorPattern$->rgb(239,107,107)
scala/tools/nsc/typechecker/PatternTypers$PatternTyper.typedStarInPattern->rgb(214,71,71)
scala/tools/nsc/typechecker/PatternTypers$PatternTyper.typedStarInPattern$->rgb(226,88,88)
scala/tools/nsc/typechecker/RefChecks$RefCheckTransformer$$Lambda$1108/228806771.apply->rgb(215,72,72)
scala/tools/nsc/typechecker/RefChecks$RefCheckTransformer$$Lambda$1114/681503131.apply->rgb(233,98,98)
scala/tools/nsc/typechecker/RefChecks$RefCheckTransformer.$anonfun$transform$13->rgb(208,62,62)
scala/tools/nsc/typechecker/RefChecks$RefCheckTransformer.$anonfun$transform$4->rgb(241,110,110)
scala/tools/nsc/typechecker/RefChecks$RefCheckTransformer.$anonfun$transform$4$adapted->rgb(215,72,72)
scala/tools/nsc/typechecker/RefChecks$RefCheckTransformer.$anonfun$transformStats$1->rgb(203,55,55)
scala/tools/nsc/typechecker/RefChecks$RefCheckTransformer.checkAllOverrides->rgb(220,80,80)
scala/tools/nsc/typechecker/RefChecks$RefCheckTransformer.checkBounds->rgb(233,99,99)
scala/tools/nsc/typechecker/RefChecks$RefCheckTransformer.checkUndesiredProperties->rgb(224,85,85)
scala/tools/nsc/typechecker/RefChecks$RefCheckTransformer.enterSyms->rgb(251,125,125)
scala/tools/nsc/typechecker/RefChecks$RefCheckTransformer.transform->rgb(247,119,119)
scala/tools/nsc/typechecker/RefChecks$RefCheckTransformer.transformSelect->rgb(254,129,129)
scala/tools/nsc/typechecker/RefChecks$RefCheckTransformer.transformStat->rgb(253,127,127)
scala/tools/nsc/typechecker/RefChecks$RefCheckTransformer.transformStats->rgb(226,88,88)
scala/tools/nsc/typechecker/SuperAccessors$SuperAccTransformer$$Lambda$1070/2086549185.apply->rgb(200,50,50)
scala/tools/nsc/typechecker/SuperAccessors$SuperAccTransformer$$Lambda$1070/236843213.apply->rgb(210,65,65)
scala/tools/nsc/typechecker/SuperAccessors$SuperAccTransformer.$anonfun$transform$4->rgb(208,62,62)
scala/tools/nsc/typechecker/SuperAccessors$SuperAccTransformer.atOwner->rgb(244,115,115)
scala/tools/nsc/typechecker/SuperAccessors$SuperAccTransformer.transform->rgb(253,127,127)
scala/tools/nsc/typechecker/SuperAccessors$SuperAccTransformer.transformClassDef$1->rgb(250,123,123)
scala/tools/nsc/typechecker/SuperAccessors$SuperAccTransformer.transformTemplate$1->rgb(244,114,114)
scala/tools/nsc/typechecker/SyntheticMethods$$Lambda$559/1320035121.apply->rgb(251,125,125)
scala/tools/nsc/typechecker/SyntheticMethods$$Lambda$559/882701801.apply->rgb(244,114,114)
scala/tools/nsc/typechecker/SyntheticMethods$$Lambda$566/524053762.apply->rgb(241,109,109)
scala/tools/nsc/typechecker/SyntheticMethods$$Lambda$566/767303340.apply->rgb(232,97,97)
scala/tools/nsc/typechecker/SyntheticMethods$$Lambda$567/1026768614.apply->rgb(215,72,72)
scala/tools/nsc/typechecker/SyntheticMethods$$Lambda$567/1748434231.apply->rgb(238,105,105)
scala/tools/nsc/typechecker/SyntheticMethods$$Lambda$569/1640253476.apply->rgb(204,56,56)
scala/tools/nsc/typechecker/SyntheticMethods$$Lambda$569/1694617821.apply->rgb(221,81,81)
scala/tools/nsc/typechecker/SyntheticMethods$$Lambda$571/1177123909.apply->rgb(254,129,129)
scala/tools/nsc/typechecker/SyntheticMethods$$Lambda$571/136363198.apply->rgb(223,84,84)
scala/tools/nsc/typechecker/SyntheticMethods$$Lambda$574/514497250.apply->rgb(253,127,127)
scala/tools/nsc/typechecker/SyntheticMethods$$Lambda$574/956688217.apply->rgb(225,87,87)
scala/tools/nsc/typechecker/SyntheticMethods$$Lambda$595/327738690.apply->rgb(202,52,52)
scala/tools/nsc/typechecker/SyntheticMethods$$Lambda$595/805752855.apply->rgb(235,100,100)
scala/tools/nsc/typechecker/SyntheticMethods$$anonfun$1.applyOrElse->rgb(251,125,125)
scala/tools/nsc/typechecker/SyntheticMethods.$anonfun$addSyntheticMethods$11->rgb(220,79,79)
scala/tools/nsc/typechecker/SyntheticMethods.$anonfun$addSyntheticMethods$16->rgb(242,111,111)
scala/tools/nsc/typechecker/SyntheticMethods.$anonfun$addSyntheticMethods$18->rgb(237,104,104)
scala/tools/nsc/typechecker/SyntheticMethods.$anonfun$addSyntheticMethods$25->rgb(205,58,58)
scala/tools/nsc/typechecker/SyntheticMethods.$anonfun$addSyntheticMethods$27->rgb(251,124,124)
scala/tools/nsc/typechecker/SyntheticMethods.$anonfun$addSyntheticMethods$35->rgb(200,51,51)
scala/tools/nsc/typechecker/SyntheticMethods.$anonfun$addSyntheticMethods$46->rgb(247,118,118)
scala/tools/nsc/typechecker/SyntheticMethods.addSyntheticMethods->rgb(220,79,79)
scala/tools/nsc/typechecker/SyntheticMethods.addSyntheticMethods$->rgb(223,84,84)
scala/tools/nsc/typechecker/SyntheticMethods.caseTemplateBody$1->rgb(242,112,112)
scala/tools/nsc/typechecker/SyntheticMethods.chooseHashcode$1->rgb(219,77,77)
scala/tools/nsc/typechecker/SyntheticMethods.equalsCaseClassMethod$1->rgb(207,61,61)
scala/tools/nsc/typechecker/SyntheticMethods.equalsCore$1->rgb(253,128,128)
scala/tools/nsc/typechecker/SyntheticMethods.extras$1->rgb(213,69,69)
scala/tools/nsc/typechecker/SyntheticMethods.impls$1->rgb(201,51,51)
scala/tools/nsc/typechecker/SyntheticMethods.productIteratorMethod$1->rgb(204,57,57)
scala/tools/nsc/typechecker/SyntheticMethods.specializedHashcode$1->rgb(207,60,60)
scala/tools/nsc/typechecker/SyntheticMethods.synthesize$1->rgb(212,67,67)
scala/tools/nsc/typechecker/TypeDiagnostics.typingInPattern->rgb(217,76,76)
scala/tools/nsc/typechecker/TypeDiagnostics.typingInPattern$->rgb(246,118,118)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$370/1794541170.apply->rgb(214,71,71)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$370/62088166.apply->rgb(231,96,96)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$377/762828711.apply->rgb(209,63,63)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$377/775822891.apply->rgb(230,94,94)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$403/43893944.apply->rgb(245,115,115)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$403/57401820.apply->rgb(231,96,96)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$404/668756709.apply->rgb(240,109,109)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$404/969931582.apply->rgb(218,77,77)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$408/1656094735.apply->rgb(203,55,55)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$408/571318435.apply->rgb(220,79,79)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$463/1201266109.apply->rgb(244,114,114)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$463/601658166.apply->rgb(212,68,68)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$465/324789625.apply->rgb(230,94,94)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$465/500768936.apply->rgb(247,118,118)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$476/106946554.apply->rgb(217,75,75)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$476/723308669.apply->rgb(239,107,107)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$486/1574758232.apply->rgb(211,67,67)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$486/847748807.apply->rgb(235,101,101)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$493/1241340590.apply->rgb(247,119,119)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$493/423556425.apply->rgb(250,124,124)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$522/1426482529.apply->rgb(218,77,77)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$522/1806789089.apply->rgb(211,66,66)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$526/1484167530.apply->rgb(211,66,66)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$526/151670720.apply->rgb(210,64,64)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$535/1592613125.apply->rgb(227,89,89)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$535/898779461.apply->rgb(214,71,71)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$604/247971756.apply->rgb(209,63,63)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$604/966707412.apply->rgb(201,52,52)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$753/1152544284.apply$mcV$sp->rgb(236,103,103)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$753/1336017203.apply$mcV$sp->rgb(209,63,63)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$806/1345921887.apply->rgb(208,62,62)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$807/1142486344.apply->rgb(249,122,122)
scala/tools/nsc/typechecker/Typers$Typer$$Lambda$807/983362902.apply->rgb(200,50,50)
scala/tools/nsc/typechecker/Typers$Typer$$anon$2$$Lambda$478/1923748421.apply$mcZ$sp->rgb(253,127,127)
scala/tools/nsc/typechecker/Typers$Typer$$anon$2$$Lambda$478/898062578.apply$mcZ$sp->rgb(243,112,112)
scala/tools/nsc/typechecker/Typers$Typer$$anon$2.$anonfun$isCoercible$1->rgb(213,69,69)
scala/tools/nsc/typechecker/Typers$Typer$$anon$2.isCoercible->rgb(205,58,58)
scala/tools/nsc/typechecker/Typers$Typer$checkNoEscaping$.apply->rgb(219,77,77)
scala/tools/nsc/typechecker/Typers$Typer$checkNoEscaping$.checkNoEscape$1->rgb(202,53,53)
scala/tools/nsc/typechecker/Typers$Typer$dyna$.acceptsApplyDynamic->rgb(201,51,51)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$adapt$1->rgb(241,109,109)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$adapt$12->rgb(241,109,109)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$adapt$2->rgb(205,57,57)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$adaptToMemberWithArgs$7->rgb(219,77,77)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$applyImplicitArgs$2->rgb(235,101,101)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$checkFeature$3->rgb(210,65,65)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$doTypedApply$13->rgb(217,76,76)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$doTypedApply$14->rgb(247,118,118)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$doTypedApply$29->rgb(225,87,87)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$doTypedApply$3->rgb(243,113,113)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$doTypedApply$3$adapted->rgb(210,65,65)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$doTypedApply$31->rgb(238,106,106)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$doTypedApply$34->rgb(237,103,103)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$packedType$3->rgb(231,95,95)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$packedType$3$adapted->rgb(210,65,65)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$silent$2->rgb(207,60,60)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$typed1$1->rgb(240,108,108)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$typed1$25->rgb(212,67,67)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$typed1$35->rgb(210,65,65)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$typed1$38->rgb(212,68,68)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$typed1$50->rgb(213,69,69)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$typed1$54->rgb(248,120,120)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$typed1$55->rgb(246,117,117)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$typed1$61->rgb(207,60,60)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$typed1$61$adapted->rgb(222,82,82)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$typed1$69->rgb(225,87,87)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$typed1$95->rgb(254,129,129)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$typed1$96->rgb(227,89,89)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$typedArg$1->rgb(208,62,62)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$typedBlock$3->rgb(217,76,76)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$typedCases$1->rgb(219,78,78)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$typedDefDef$5->rgb(245,115,115)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$typedDefDef$6->rgb(232,96,96)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$typedParentTypes$1->rgb(241,109,109)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$typedPattern$1->rgb(247,118,118)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$typedPattern$2->rgb(212,68,68)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$typedStats$10->rgb(244,114,114)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$typedStats$4->rgb(213,69,69)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$typedStats$4$adapted->rgb(214,71,71)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$typedStats$6->rgb(251,124,124)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$typedStats$6$adapted->rgb(249,121,121)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$typerWithLocalContext$1->rgb(230,93,93)
scala/tools/nsc/typechecker/Typers$Typer.$anonfun$validateParentClasses$8->rgb(205,58,58)
scala/tools/nsc/typechecker/Typers$Typer.adapt->rgb(205,57,57)
scala/tools/nsc/typechecker/Typers$Typer.adaptExprNotFunMode$1->rgb(219,78,78)
scala/tools/nsc/typechecker/Typers$Typer.adaptToImplicitMethod$1->rgb(237,105,105)
scala/tools/nsc/typechecker/Typers$Typer.adaptToMember->rgb(216,74,74)
scala/tools/nsc/typechecker/Typers$Typer.adaptToMemberWithArgs->rgb(201,52,52)
scala/tools/nsc/typechecker/Typers$Typer.adaptToName->rgb(202,54,54)
scala/tools/nsc/typechecker/Typers$Typer.addIfLocal$1->rgb(245,116,116)
scala/tools/nsc/typechecker/Typers$Typer.addSynthetics$1->rgb(202,53,53)
scala/tools/nsc/typechecker/Typers$Typer.applyImplicitArgs->rgb(244,114,114)
scala/tools/nsc/typechecker/Typers$Typer.applyMeth$1->rgb(222,82,82)
scala/tools/nsc/typechecker/Typers$Typer.applyOrElseMethodDef$1->rgb(251,125,125)
scala/tools/nsc/typechecker/Typers$Typer.applyPossible$1->rgb(223,84,84)
scala/tools/nsc/typechecker/Typers$Typer.atOwner->rgb(240,108,108)
scala/tools/nsc/typechecker/Typers$Typer.body$2->rgb(204,56,56)
scala/tools/nsc/typechecker/Typers$Typer.checkNonCyclic->rgb(238,105,105)
scala/tools/nsc/typechecker/Typers$Typer.checkNotLocked$1->rgb(217,74,74)
scala/tools/nsc/typechecker/Typers$Typer.computeType->rgb(235,101,101)
scala/tools/nsc/typechecker/Typers$Typer.containsDef$1->rgb(224,85,85)
scala/tools/nsc/typechecker/Typers$Typer.doTypedApply->rgb(222,82,82)
scala/tools/nsc/typechecker/Typers$Typer.expectsStable$1->rgb(211,66,66)
scala/tools/nsc/typechecker/Typers$Typer.finishMethodSynthesis->rgb(241,109,109)
scala/tools/nsc/typechecker/Typers$Typer.handleMissing$1->rgb(233,98,98)
scala/tools/nsc/typechecker/Typers$Typer.handleMonomorphicCall$1->rgb(254,129,129)
scala/tools/nsc/typechecker/Typers$Typer.handleOverloaded$1->rgb(250,123,123)
scala/tools/nsc/typechecker/Typers$Typer.handlePolymorphicCall$1->rgb(209,64,64)
scala/tools/nsc/typechecker/Typers$Typer.hasImport$1->rgb(230,94,94)
scala/tools/nsc/typechecker/Typers$Typer.hasMonomorphicApply$1->rgb(226,89,89)
scala/tools/nsc/typechecker/Typers$Typer.inferView->rgb(201,51,51)
scala/tools/nsc/typechecker/Typers$Typer.instantiate->rgb(210,65,65)
scala/tools/nsc/typechecker/Typers$Typer.instantiatePossiblyExpectingUnit->rgb(245,116,116)
scala/tools/nsc/typechecker/Typers$Typer.instantiateToMethodType$1->rgb(250,123,123)
scala/tools/nsc/typechecker/Typers$Typer.isLocal$1->rgb(230,93,93)
scala/tools/nsc/typechecker/Typers$Typer.isModuleTypedExpr$1->rgb(211,66,66)
scala/tools/nsc/typechecker/Typers$Typer.isNarrowable->rgb(220,79,79)
scala/tools/nsc/typechecker/Typers$Typer.isStableContext->rgb(219,78,78)
scala/tools/nsc/typechecker/Typers$Typer.isStale->rgb(244,114,114)
scala/tools/nsc/typechecker/Typers$Typer.lookupInQualifier$1->rgb(218,76,76)
scala/tools/nsc/typechecker/Typers$Typer.makeAccessible->rgb(227,90,90)
scala/tools/nsc/typechecker/Typers$Typer.member->rgb(230,93,93)
scala/tools/nsc/typechecker/Typers$Typer.noExpectedType$1->rgb(233,98,98)
scala/tools/nsc/typechecker/Typers$Typer.normalTypedApply$1->rgb(231,95,95)
scala/tools/nsc/typechecker/Typers$Typer.onError$3->rgb(218,76,76)
scala/tools/nsc/typechecker/Typers$Typer.parents$2->rgb(200,51,51)
scala/tools/nsc/typechecker/Typers$Typer.preSelectOverloaded$1->rgb(207,60,60)
scala/tools/nsc/typechecker/Typers$Typer.qualifies$1->rgb(211,67,67)
scala/tools/nsc/typechecker/Typers$Typer.reallyExists->rgb(241,111,111)
scala/tools/nsc/typechecker/Typers$Typer.runTyper$1->rgb(252,126,126)
scala/tools/nsc/typechecker/Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$$outer->rgb(240,109,109)
scala/tools/nsc/typechecker/Typers$Typer.shouldInsertApply$1->rgb(209,63,63)
scala/tools/nsc/typechecker/Typers$Typer.silent->rgb(227,89,89)
scala/tools/nsc/typechecker/Typers$Typer.stabilize->rgb(211,66,66)
scala/tools/nsc/typechecker/Typers$Typer.synthesizePartialFunction->rgb(201,51,51)
scala/tools/nsc/typechecker/Typers$Typer.transformedOrTyped->rgb(241,110,110)
scala/tools/nsc/typechecker/Typers$Typer.tryTypedApply$1->rgb(250,123,123)
scala/tools/nsc/typechecker/Typers$Typer.typed->rgb(217,76,76)
scala/tools/nsc/typechecker/Typers$Typer.typed1->rgb(231,96,96)
scala/tools/nsc/typechecker/Typers$Typer.typedAnnotated$1->rgb(253,128,128)
scala/tools/nsc/typechecker/Typers$Typer.typedAnnotation->rgb(225,87,87)
scala/tools/nsc/typechecker/Typers$Typer.typedAppliedTypeTree$1->rgb(200,51,51)
scala/tools/nsc/typechecker/Typers$Typer.typedApply$1->rgb(254,129,129)
scala/tools/nsc/typechecker/Typers$Typer.typedArg->rgb(208,62,62)
scala/tools/nsc/typechecker/Typers$Typer.typedArg0$1->rgb(203,54,54)
scala/tools/nsc/typechecker/Typers$Typer.typedArgToPoly$1->rgb(248,121,121)
scala/tools/nsc/typechecker/Typers$Typer.typedArgsForFormals->rgb(238,106,106)
scala/tools/nsc/typechecker/Typers$Typer.typedAssign$1->rgb(227,89,89)
scala/tools/nsc/typechecker/Typers$Typer.typedBlock->rgb(233,98,98)
scala/tools/nsc/typechecker/Typers$Typer.typedByValueExpr->rgb(210,65,65)
scala/tools/nsc/typechecker/Typers$Typer.typedCase->rgb(235,101,101)
scala/tools/nsc/typechecker/Typers$Typer.typedCases->rgb(243,112,112)
scala/tools/nsc/typechecker/Typers$Typer.typedClassDef->rgb(220,79,79)
scala/tools/nsc/typechecker/Typers$Typer.typedConstructorPattern->rgb(242,111,111)
scala/tools/nsc/typechecker/Typers$Typer.typedDefDef->rgb(247,118,118)
scala/tools/nsc/typechecker/Typers$Typer.typedFunction->rgb(253,127,127)
scala/tools/nsc/typechecker/Typers$Typer.typedFunction$1->rgb(211,66,66)
scala/tools/nsc/typechecker/Typers$Typer.typedHigherKindedType->rgb(201,52,52)
scala/tools/nsc/typechecker/Typers$Typer.typedIdent$2->rgb(232,97,97)
scala/tools/nsc/typechecker/Typers$Typer.typedIdentOrWildcard$1->rgb(214,70,70)
scala/tools/nsc/typechecker/Typers$Typer.typedIf$1->rgb(234,99,99)
scala/tools/nsc/typechecker/Typers$Typer.typedInAnyMode$1->rgb(246,118,118)
scala/tools/nsc/typechecker/Typers$Typer.typedInternal->rgb(246,118,118)
scala/tools/nsc/typechecker/Typers$Typer.typedLabelDef->rgb(212,67,67)
scala/tools/nsc/typechecker/Typers$Typer.typedMatch->rgb(245,115,115)
scala/tools/nsc/typechecker/Typers$Typer.typedMemberDef$1->rgb(223,83,83)
scala/tools/nsc/typechecker/Typers$Typer.typedModuleDef->rgb(204,57,57)
scala/tools/nsc/typechecker/Typers$Typer.typedNew$1->rgb(249,121,121)
scala/tools/nsc/typechecker/Typers$Typer.typedOutsidePatternMode$1->rgb(234,100,100)
scala/tools/nsc/typechecker/Typers$Typer.typedPackageDef$1->rgb(202,53,53)
scala/tools/nsc/typechecker/Typers$Typer.typedParentType->rgb(231,96,96)
scala/tools/nsc/typechecker/Typers$Typer.typedParentTypes->rgb(219,78,78)
scala/tools/nsc/typechecker/Typers$Typer.typedPattern->rgb(229,93,93)
scala/tools/nsc/typechecker/Typers$Typer.typedPos->rgb(205,57,57)
scala/tools/nsc/typechecker/Typers$Typer.typedQualifier->rgb(224,85,85)
scala/tools/nsc/typechecker/Typers$Typer.typedSelect$1->rgb(245,115,115)
scala/tools/nsc/typechecker/Typers$Typer.typedSelectOrSuperCall$1->rgb(252,126,126)
scala/tools/nsc/typechecker/Typers$Typer.typedStarInPattern->rgb(221,80,80)
scala/tools/nsc/typechecker/Typers$Typer.typedStat$1->rgb(204,56,56)
scala/tools/nsc/typechecker/Typers$Typer.typedStats->rgb(247,119,119)
scala/tools/nsc/typechecker/Typers$Typer.typedTemplate->rgb(236,102,102)
scala/tools/nsc/typechecker/Typers$Typer.typedThis$1->rgb(201,52,52)
scala/tools/nsc/typechecker/Typers$Typer.typedThrow$1->rgb(227,90,90)
scala/tools/nsc/typechecker/Typers$Typer.typedTry$1->rgb(243,113,113)
scala/tools/nsc/typechecker/Typers$Typer.typedTypTree$1->rgb(248,120,120)
scala/tools/nsc/typechecker/Typers$Typer.typedType->rgb(222,82,82)
scala/tools/nsc/typechecker/Typers$Typer.typedTypeApply->rgb(216,73,73)
scala/tools/nsc/typechecker/Typers$Typer.typedTypeApply$1->rgb(202,52,52)
scala/tools/nsc/typechecker/Typers$Typer.typedTypeConstructor->rgb(210,64,64)
scala/tools/nsc/typechecker/Typers$Typer.typedTyped$1->rgb(207,61,61)
scala/tools/nsc/typechecker/Typers$Typer.typedValDef->rgb(206,59,59)
scala/tools/nsc/typechecker/Typers$Typer.typedValDefImpl->rgb(208,62,62)
scala/tools/nsc/typechecker/Typers$Typer.typedVirtualizedMatch$1->rgb(249,121,121)
scala/tools/nsc/typechecker/Typers$Typer.validateParentClass$1->rgb(208,61,61)
scala/tools/nsc/typechecker/Typers$Typer.validateParentClasses->rgb(214,71,71)
scala/tools/nsc/typechecker/Typers$Typer.vanillaAdapt$1->rgb(248,121,121)
scala/tools/nsc/typechecker/Typers$Typer.viewExists->rgb(200,50,50)
scala/tools/nsc/typechecker/Unapplies.caseModuleDef->rgb(232,97,97)
scala/tools/nsc/typechecker/Unapplies.caseModuleDef$->rgb(203,54,54)
scala/tools/nsc/typechecker/Unapplies.caseModuleUnapplyMeth->rgb(234,100,100)
scala/tools/nsc/typechecker/Unapplies.caseModuleUnapplyMeth$->rgb(225,87,87)
scala/tools/nsc/typechecker/Unapplies.createFun$1->rgb(230,94,94)
scala/tools/nsc/typechecker/Unapplies.parents$1->rgb(240,108,108)
scala/tools/reflect/FastTrack$$Lambda$508/229665025.apply->rgb(216,74,74)
scala/tools/reflect/FastTrack$$Lambda$508/785377702.apply->rgb(242,111,111)
scala/tools/reflect/FastTrack$$anonfun$$nestedInanonfun$fastTrackCache$1$1$$Lambda$696/1292415540.apply->rgb(205,58,58)
scala/tools/reflect/FastTrack$$anonfun$$nestedInanonfun$fastTrackCache$1$1$$Lambda$696/1426602241.apply->rgb(204,56,56)
scala/tools/reflect/FastTrack$$anonfun$$nestedInanonfun$fastTrackCache$1$1.$anonfun$applyOrElse$1->rgb(201,52,52)
scala/tools/reflect/FastTrack$FastTrackEntry.apply->rgb(211,66,66)
scala/tools/reflect/FastTrack.$anonfun$fastTrackCache$1->rgb(246,117,117)
scala/tools/reflect/FastTrack.get->rgb(207,61,61)
scala/tools/util/PathResolver$Calculated$.basis->rgb(208,62,62)
scala/tools/util/PathResolver$Calculated$.containers->rgb(245,115,115)
scala/tools/util/PathResolver$Calculated$.containers$lzycompute->rgb(247,119,119)
scala/tools/util/PathResolver.computeResult->rgb(247,118,118)
scala/tools/util/PathResolver.containers->rgb(204,56,56)
scala/tools/util/PathResolver.result->rgb(210,65,65)
scala/util/hashing/MurmurHash3$.productHash->rgb(216,73,73)
scala/util/hashing/MurmurHash3.productHash->rgb(229,93,93)
slow_subtype_check Runtime1 stub->rgb(205,57,57)
sun/misc/Unsafe.defineAnonymousClass->rgb(54,204,54)
sun/nio/ch/FileChannelImpl.implCloseChannel->rgb(103,248,103)
sun/nio/ch/FileChannelImpl.write->rgb(79,227,79)
sun/nio/ch/FileDispatcherImpl.close->rgb(102,248,102)
sun/nio/ch/FileDispatcherImpl.close0->rgb(96,242,96)
sun/nio/ch/FileDispatcherImpl.write->rgb(81,228,81)
sun/nio/ch/FileDispatcherImpl.write0->rgb(105,250,105)
sun/nio/ch/IOUtil.write->rgb(63,212,63)
sun/nio/ch/IOUtil.writeFromNativeBuffer->rgb(100,246,100)
sun/nio/cs/StreamEncoder.flush->rgb(51,201,51)
sun/nio/cs/StreamEncoder.implFlush->rgb(53,203,53)
sun/nio/cs/StreamEncoder.implFlushBuffer->rgb(68,217,68)
sun/nio/cs/StreamEncoder.writeBytes->rgb(93,239,93)
sun/nio/fs/UnixChannelFactory.newFileChannel->rgb(75,223,75)
sun/nio/fs/UnixChannelFactory.open->rgb(64,213,64)
sun/nio/fs/UnixFileAttributeViews$Basic.readAttributes->rgb(101,247,101)
sun/nio/fs/UnixFileAttributes.get->rgb(85,232,85)
sun/nio/fs/UnixFileSystemProvider.newByteChannel->rgb(91,238,91)
sun/nio/fs/UnixFileSystemProvider.readAttributes->rgb(71,220,71)
sun/nio/fs/UnixNativeDispatcher.lstat->rgb(61,210,61)
sun/nio/fs/UnixNativeDispatcher.lstat0->rgb(80,227,80)
sun/nio/fs/UnixNativeDispatcher.open->rgb(57,206,57)
sun/nio/fs/UnixNativeDispatcher.open0->rgb(88,235,88)
sun/reflect/DelegatingMethodAccessorImpl.invoke->rgb(71,219,71)
sun/reflect/GeneratedMethodAccessor18.invoke->rgb(106,251,106)
vtable stub->rgb(252,126,126)
